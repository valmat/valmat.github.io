<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <generator uri="https://gohugo.io/" version="0.152.1">Hugo</generator>
    <title>Valmat&#39;s Personal Blog</title>
            <link href="https://valmat.ru/" rel="alternate" type="text/html" title="html" />
            <link href="https://valmat.ru/feed.xml" rel="self" type="application/atom+xml" title="atom" />
    <updated>2025-10-23T01:37:11+03:00</updated>
    <id>https://valmat.ru/</id>
        <entry>
            <title>Печь для бани с дожигом пиролизных газов</title>
            <link href="https://valmat.ru/posts/2025/10/furnace/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2025/10/furnace/</id>
            <published>2025-10-23T00:07:49+03:00</published>
            <updated>2025-10-23T00:07:49+03:00</updated>
            <content type="html">
                &lt;p&gt;В прошлом году моя тоненькая печка начала прогорать. В какой-то момент, сидя на полке, можно было наблюдать, как в ней горит пламя прямо через прогоревшие щели.&lt;br&gt;
До этого я уже ремонтировал в ней отвалившуюся перегородку, посадив её на уголки болтами, но диагноз был однозначным: печь пора менять.&lt;/p&gt;
&lt;p&gt;Найти готовую печь для бани на Кипре казалось нереальной затеей, а заказать сварку — слишком дорого.&lt;br&gt;
Кроме того, моя текущая печь органично вписывалась в габариты моей бани, и хотелось сохранить эту гармонию.&lt;br&gt;
Решение было принято: буду варить себе новую печь.&lt;br&gt;
Кроме того, эта идея обещала массу удовольствия от самого процесса.&lt;/p&gt;
&lt;p&gt;Я сам не настоящий сварщик. Варить меня когда-то учил отец. Я немного баловался электродной сваркой, но ничего серьёзного никогда не делал. Но жизнь заставит.&lt;/p&gt;
&lt;p&gt;Первым делом купил MIG-проволочный сварочник в Lidl и маску — это обошлось мне примерно в 100 €.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;1.jpg&#34;
  alt=&#34;сварочник Lidl&#34;
  
/&gt;
&lt;img
  src=&#34;2.jpg&#34;
  alt=&#34;маска Lidl&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;На металлобазе нашёл 4-мм листовое железо. Оно продавалось листами 2×1 м² — пришлось купить лист целиком.&lt;br&gt;
&lt;img
  src=&#34;3.jpg&#34;
  alt=&#34;железо для печи&#34;
  
/&gt;&lt;br&gt;
Лист оказался неподъёмным. Чтобы его поднять, пришлось сразу распилить пополам.&lt;br&gt;
Лист обошёлся ещё примерно в 100 €. Половину этого листа я потом удачно продал за 50 €.&lt;br&gt;
Ну и купил сразу пачку катушек со сварочной проволокой.&lt;br&gt;
Итого себестоимость моей печи можно условно считать ~200 €.&lt;/p&gt;
&lt;p&gt;Немного потренировался и начал варить.&lt;/p&gt;
&lt;p&gt;Габариты печи я хотел сделать такими же, как у моей предыдущей, чтобы использовать кожух из нержавейки от старой печи и стеклянную дверку. И чтобы она вписалась в мою баню так же органично, как старая печка.&lt;/p&gt;
&lt;p&gt;Но решил добавить изюминку: дожиг пиролизных газов.&lt;br&gt;
Рассчитал все габариты, и получилась вот такая схема:&lt;br&gt;
&lt;img
  src=&#34;scheme.jpg&#34;
  alt=&#34;схема печи с дожигом пиролизных газов&#34;
  
/&gt;&lt;br&gt;
В чем здесь суть: задняя стенка двойная. Полость шириной 2 см. Через неё снизу печки, из внешнего пространства, поступает воздух прямо в камеру дожига. При этом воздух разогревается от горящих дров и поступает разогретым, не остужая газовоздушную смесь, а дополнительно поджигая её. Таким образом, в камере дожига происходит дожиг и горение. Это дополнительно повышает температуру непосредственно под верхней перекладиной, на которой лежат камни.&lt;/p&gt;
&lt;p&gt;Важно, чтобы воздух поступал ровно на входе в камеру дожига.&lt;/p&gt;
&lt;p&gt;Был некоторый риск, что схема не сработает. Но я решил, что если что-то пойдёт не так, то просто закрою входное отверстие или в крайнем случае заварю его. В принципе риск был небольшой и оправданный.&lt;/p&gt;
&lt;p&gt;В итоге всё получилось очень даже хорошо. Об этом ниже.&lt;/p&gt;
&lt;p&gt;Вот немного фоток процесса изготовления:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;4.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;5.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;6.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;7.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Сделал съёмную корзину для камней:&lt;br&gt;
&lt;img
  src=&#34;8.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;9.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;А на верхнюю перегородку приварил рёбра жёсткости, которые одновременно являются дополнительными радиаторами:&lt;br&gt;
&lt;img
  src=&#34;10.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;11.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;br&gt;
&lt;img
  src=&#34;12.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Первые испытания проводил на улице:&lt;br&gt;
&lt;img
  src=&#34;14.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;После прогрева дыма вообще не видно:&lt;br&gt;
&lt;img
  src=&#34;15.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Сейчас печь уже установлена у меня в бане и выглядит вот так:&lt;br&gt;
&lt;img
  src=&#34;furnace.jpg&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Прогревается довольно быстро. Заметно быстрее предыдущей печи. После прогрева видимый дым полностью исчезает.&lt;br&gt;
И, как будто, даже золы стало меньше. Или я просто стал тратить меньше дров.&lt;br&gt;
Из минусов: камни ближе к задней стенке прогреваются заметно хуже. Основной жар — чуть дальше. Видимо, это связано с динамикой горения. Я не специалист в области теплотехники и горения. Допускаю, что мог сделать не оптимально.&lt;/p&gt;
&lt;p&gt;В общем, я очень доволен результатом. Это был в каком-то смысле эксперимент. И он удался.&lt;/p&gt;

            </content>   
        </entry>
        <entry>
            <title>Lost in the Middle. Перевод знаменитой статьи</title>
            <link href="https://valmat.ru/posts/2025/08/lost-in-the-middle/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2025/08/lost-in-the-middle/</id>
            <published>2025-08-30T22:38:23+03:00</published>
            <updated>2025-08-30T22:38:23+03:00</updated>
            <content type="html">
                &lt;p&gt;Ниже представлен перевод знаменитой &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://arxiv.org/abs/2307.03172&#34;
&gt;статьи Lost in the Middle&lt;/a&gt; о том, что номинальная длина контекстного окна &amp;ndash; это совсем не то же самое, что и эффективная.&lt;/p&gt;
&lt;p&gt;Ссылки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;Lost_in_the_Middle-2307.03172v3-en.pdf&#34;
&gt;PDF оригинальной статьи&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;Lost_in_the_Middle-2307.03172v3-ru.pdf&#34;
&gt;PDF перевода статьи&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Источник: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://arxiv.org/abs/2307.03172&#34;
&gt;https://arxiv.org/abs/2307.03172&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;потерянные-в-середине-как-языковые-модели-используют-длинные-контексты&#34;
    &gt;
        Потерянные в середине: как языковые модели используют длинные контексты
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#потерянные-в-середине-как-языковые-модели-используют-длинные-контексты&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Потерянные в середине: как языковые модели используют длинные контексты&#34; href=&#34;#%d0%bf%d0%be%d1%82%d0%b5%d1%80%d1%8f%d0%bd%d0%bd%d1%8b%d0%b5-%d0%b2-%d1%81%d0%b5%d1%80%d0%b5%d0%b4%d0%b8%d0%bd%d0%b5-%d0%ba%d0%b0%d0%ba-%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d1%83%d1%8e%d1%82-%d0%b4%d0%bb%d0%b8%d0%bd%d0%bd%d1%8b%d0%b5-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Lost in the Middle: How Language Models Use Long Contexts&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Авторы:&lt;/strong&gt;&lt;br&gt;
Nelson F. Liu*, Kevin Lin, John Hewitt, Ashwin Paranjape, Michele Bevilacqua, Fabio Petroni, Percy Liang&lt;br&gt;
*Работа частично выполнена в качестве стажёра в Samaya AI.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;аннотация&#34;
    &gt;
        Аннотация
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#аннотация&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Аннотация&#34; href=&#34;#%d0%b0%d0%bd%d0%bd%d0%be%d1%82%d0%b0%d1%86%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Хотя современные языковые модели могут принимать длинные контексты в качестве входных данных, относительно мало известно о том, насколько хорошо они &lt;em&gt;используют&lt;/em&gt; более длинные контексты.&lt;br&gt;
Мы анализируем производительность языковых моделей в двух задачах, требующих идентификации релевантной информации в их входных контекстах: многодокументный вопросно-ответный анализ и извлечение ключевых значений.&lt;br&gt;
Мы обнаруживаем, что производительность может значительно ухудшаться при изменении позиции релевантной информации, что указывает на то, что текущие языковые модели не могут надежно использовать информацию в длинных входных контекстах.&lt;br&gt;
В частности, мы наблюдаем, что производительность часто максимальна, когда релевантная информация находится в начале или в конце входного контекста, и значительно ухудшается, когда модели должны получать доступ к релевантной информации в середине длинных контекстов, даже для моделей с явно длинным контекстом.&lt;br&gt;
Наш анализ дает лучшее понимание того, как языковые модели используют свой входной контекст, и предлагает новые протоколы оценки для будущих моделей с длинным контекстом.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;введение&#34;
    &gt;
        Введение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#введение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Введение&#34; href=&#34;#%d0%b2%d0%b2%d0%b5%d0%b4%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/figure1.png&#34;
  alt=&#34;U-образная кривая производительности&#34;
  
/&gt;
&lt;em&gt;Изменение местоположения релевантной информации (позиции отрывка, который отвечает на входной вопрос) в контексте входных данных языковой модели приводит к U-образной кривой производительности — модели лучше используют релевантную информацию, которая находится в самом начале (эффект первичности) или в конце её входного контекста (эффект недавности), а производительность значительно ухудшается, когда модели должны получать доступ и использовать информацию, расположенную в середине её входного контекста.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Языковые модели стали важным и гибким строительным блоком в различных языковых технологиях, ориентированных на пользователя, включая разговорные интерфейсы, поиск и суммаризацию, а также совместное написание [Shuster et al., 2022; Thoppilan et al., 2022; Lee et al., 2022].&lt;br&gt;
Эти модели выполняют задачи нижнего уровня в основном через подсказки: вся релевантная спецификация задачи и данные для обработки форматируются как текстовый входной контекст, и модель возвращает сгенерированное текстовое завершение.&lt;br&gt;
Эти входные контексты могут содержать тысячи токенов, особенно когда языковые модели используются для обработки длинных документов (например, юридических или научных документов, истории разговоров и т. д.) или когда языковые модели дополняются внешней информацией (например, релевантными документами из поисковой системы, результатами запросов к базе данных и т. д.; [Petroni et al., 2020; Ram et al., 2023; Shi et al., 2023; Mallen et al., 2023; Schick et al., 2023]).&lt;/p&gt;
&lt;p&gt;Обработка этих случаев использования требует, чтобы языковые модели успешно работали с длинными последовательностями.&lt;br&gt;
Существующие языковые модели обычно реализуются с помощью трансформеров [Vaswani et al., 2017], которые требуют памяти и вычислений, увеличивающихся квадратично в зависимости от длины последовательности.&lt;br&gt;
В результате трансформерные языковые модели часто обучались с относительно небольшими оконными контекстами (от 512 до 2048 токенов).&lt;br&gt;
Недавние улучшения в аппаратном обеспечении (например, более быстрые графические процессоры с большим объемом памяти) и алгоритмах [Dai et al., 2019; Dao et al., 2022; Poli et al., 2023; Rubin et al., 2023] привели к появлению языковых моделей с большими оконными контекстами (например, 4096, 32K и даже 100K токенов), но остается неясным, как эти модели с расширенным контекстом используют свои входные контексты при выполнении задач нижнего уровня.&lt;/p&gt;
&lt;p&gt;Мы эмпирически исследуем этот вопрос с помощью контролируемых экспериментов с различными современными открытыми (MPT-30B-Instruct, LongChat-13B (16K)) и закрытыми (OpenAI&amp;rsquo;s GPT-3.5-Turbo и Anthropic&amp;rsquo;s Claude-1.3) языковыми моделями в условиях, требующих доступа и использования информации в пределах входного контекста.&lt;br&gt;
В частности, в наших экспериментах вносятся контролируемые изменения в размер входного контекста и положение релевантной информации в пределах входного контекста, и изучаются их эффекты на производительность языковой модели.&lt;br&gt;
Если языковые модели могут надежно использовать информацию в пределах длинных входных контекстов, то их производительность должна быть &lt;em&gt;минимально подвержена&lt;/em&gt; влиянию положения релевантной информации в контексте входных данных.&lt;/p&gt;
&lt;p&gt;Сначала мы экспериментируем с многодокументным вопросно-ответным анализом, который требует от моделей анализа предоставленных документов для нахождения релевантной информации и использования её для ответа на заданный вопрос; эта задача имитирует настройку генерации с дополнением поиска, лежащую в основе многих коммерческих приложений генеративного поиска и вопросно-ответного анализа (например, Bing Chat).&lt;br&gt;
В этом контексте мы контролируем (i)~длину входного контекста, изменяя количество документов в контексте входных данных (аналогично извлечению большего или меньшего количества документов в генерации с дополнением поиска), и (ii)~контролируем положение релевантной информации в пределах входного контекста, изменяя порядок документов, чтобы разместить релевантный документ в начале, середине или конце контекста.&lt;/p&gt;
&lt;p&gt;Мы обнаруживаем, что изменение положения релевантной информации в контексте входных данных может существенно повлиять на производительность модели, что указывает на то, что текущие языковые модели не могут надежно получать доступ и использовать информацию в длинных входных контекстах.&lt;br&gt;
Более того, мы наблюдаем характерную U-образную кривую производительности (см. рисунок выше); производительность языковой модели наивысшая, когда релевантная информация находится в самом начале (эффект первичности) или в конце её входного контекста (эффект недавности), и производительность значительно ухудшается, когда модели должны получать доступ и использовать информацию в середине своих входных контекстов (§ QA Results).&lt;br&gt;
Например, когда релевантная информация размещена в середине её входного контекста, производительность GPT-3.5-Turbo на задаче многодокументного вопросно-ответного анализа ниже, чем её производительность при прогнозировании &lt;em&gt;без каких-либо документов&lt;/em&gt; (т.е. в закрытой книге; 56.1%).&lt;br&gt;
Кроме того, мы обнаруживаем, что модели часто имеют идентичную производительность с их аналогами с расширенным контекстом, что указывает на то, что модели с расширенным контекстом не обязательно лучше используют свой входной контекст (§ QA Results).&lt;/p&gt;
&lt;p&gt;Учитывая, что языковые модели испытывают трудности с извлечением и использованием релевантной информации в задаче многодокументного вопросно-ответного анализа, в какой степени языковые модели вообще могут &lt;em&gt;извлекать&lt;/em&gt; из своих входных контекстов?&lt;br&gt;
Мы изучаем этот вопрос с помощью синтетической задачи извлечения ключевых значений, которая предназначена для минимального тестирования базовой способности извлекать совпадающие токены из входного контекста.&lt;br&gt;
В этой задаче моделям предоставляется коллекция пар ключ-значение в формате JSON, и они должны вернуть значение, связанное с определенным ключом.&lt;br&gt;
Подобно задаче многодокументного вопросно-ответного анализа, задача извлечения ключевых значений допускает контролируемые изменения длины входного контекста (добавление большего количества пар ключ-значение) и положения релевантной информации.&lt;br&gt;
Хотя некоторые модели выполняют синтетическую задачу извлечения ключевых значений идеально, другие модели испытывают трудности даже с простым извлечением совпадающих токенов, которые встречаются в середине их входного контекста, и продолжают демонстрировать U-образную кривую производительности.&lt;/p&gt;
&lt;p&gt;Чтобы лучше понять, почему языковые модели испытывают трудности с надежным доступом и использованием информации в своих входных контекстах, мы изучаем роль архитектуры модели (только декодер против кодер-декодер), контекстуализации с учетом запроса и тонкой настройки инструкций (§ Why U-shape). Мы обнаруживаем, что:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Кодер-декодер модели относительно устойчивы к изменениям положения релевантной информации в их входном контексте, но только при оценке последовательностей в пределах их максимальной длины последовательности на этапе обучения. При оценке последовательностей, превышающих те, что были видны во время обучения, мы наблюдаем U-образную кривую производительности (§ Architecture).&lt;/li&gt;
&lt;li&gt;Контекстуализация с учетом запроса (размещение запроса перед &lt;em&gt;и&lt;/em&gt; после документов или пар ключ-значение) обеспечивает почти идеальную производительность в синтетической задаче извлечения ключевых значений, но минимально изменяет тенденции в многодокументном вопросно-ответном анализе (§ Pre-conditioning).&lt;/li&gt;
&lt;li&gt;Даже базовые языковые модели (т.е. без тонкой настройки инструкций) демонстрируют U-образную кривую производительности при изменении положения релевантной информации в контексте входных данных.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Наши результаты показывают, что предоставление языковым моделям более длинных входных контекстов — это компромисс: предоставление языковой модели большего объема информации может помочь ей выполнить задачу нижнего уровня, но также увеличивает объем контента, который модель должна анализировать, что может снизить точность.&lt;br&gt;
Чтобы лучше понять этот компромисс на практике, мы проводим тематическое исследование с моделями извлечения-читателя на открытом вопросно-ответном анализе (§ ODQA Case Study).&lt;br&gt;
В отличие от нашей контролируемой задачи многодокументного вопросно-ответного анализа, где контекст всегда содержит ровно &lt;em&gt;один&lt;/em&gt; документ, который отвечает на вопрос, ни один или многие из топ $k$ документов могут не содержать ответа в настройке открытого вопросно-ответного анализа.&lt;br&gt;
Когда мы извлекаем из Википедии, чтобы ответить на запросы из NaturalQuestions-Open, мы обнаруживаем, что производительность модели насыщается задолго до насыщения извлечения, что указывает на то, что текущие модели не могут эффективно использовать дополнительные извлеченные документы — использование 50 документов вместо 20 извлеченных документов лишь незначительно улучшает производительность ($\sim$1.5% для GPT-3.5-Turbo и $\sim$1% для Claude-1.3).&lt;/p&gt;
&lt;p&gt;Наш анализ дает лучшее понимание того, как языковые модели используют свой входной контекст, и вводит новые протоколы оценки для будущих моделей с длинным контекстом; чтобы утверждать, что языковая модель может надежно использовать информацию в пределах длинных входных контекстов, необходимо показать, что её производительность минимально подвержена влиянию положения релевантной информации в контексте входных данных (например, минимальная разница в наилучшей и наихудшей производительности).&lt;br&gt;
Чтобы способствовать дальнейшей работе по пониманию и улучшению того, как языковые модели используют свой входной контекст, мы выпускаем наш код и данные оценки.&lt;br&gt;
&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://nelsonliu.me/papers/lost-in-the-middle&#34;
&gt;https://nelsonliu.me/papers/lost-in-the-middle&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;многодокументный-вопросно-ответный-анализ&#34;
    &gt;
        Многодокументный вопросно-ответный анализ
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#многодокументный-вопросно-ответный-анализ&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Многодокументный вопросно-ответный анализ&#34; href=&#34;#%d0%bc%d0%bd%d0%be%d0%b3%d0%be%d0%b4%d0%be%d0%ba%d1%83%d0%bc%d0%b5%d0%bd%d1%82%d0%bd%d1%8b%d0%b9-%d0%b2%d0%be%d0%bf%d1%80%d0%be%d1%81%d0%bd%d0%be-%d0%be%d1%82%d0%b2%d0%b5%d1%82%d0%bd%d1%8b%d0%b9-%d0%b0%d0%bd%d0%b0%d0%bb%d0%b8%d0%b7&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;экспериментальная-установка&#34;
    &gt;
        Экспериментальная установка
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#экспериментальная-установка&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Экспериментальная установка&#34; href=&#34;#%d1%8d%d0%ba%d1%81%d0%bf%d0%b5%d1%80%d0%b8%d0%bc%d0%b5%d0%bd%d1%82%d0%b0%d0%bb%d1%8c%d0%bd%d0%b0%d1%8f-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В задаче многодокументного вопросно-ответного анализа входные данные модели включают (i)&lt;del&gt;вопрос, на который нужно ответить, и (ii)&lt;/del&gt;$k$ документов (например, отрывки из Википедии), где &lt;em&gt;ровно один&lt;/em&gt; из документов содержит ответ на вопрос, а $k - 1$ «отвлекающих» документов не содержат.&lt;br&gt;
Эта задача требует от модели доступа к документу, содержащему ответ, в пределах её входного контекста и использования его для ответа на вопрос.&lt;/p&gt;
&lt;!-- ![Пример задачи многодокументного вопросно-ответного анализа](figures/qa_example.png) --&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;пример-задачи-многодокументного-вопросно-ответного-анализа&#34;
    &gt;
        Пример задачи многодокументного вопросно-ответного анализа
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#пример-задачи-многодокументного-вопросно-ответного-анализа&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Пример задачи многодокументного вопросно-ответного анализа&#34; href=&#34;#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%80-%d0%b7%d0%b0%d0%b4%d0%b0%d1%87%d0%b8-%d0%bc%d0%bd%d0%be%d0%b3%d0%be%d0%b4%d0%be%d0%ba%d1%83%d0%bc%d0%b5%d0%bd%d1%82%d0%bd%d0%be%d0%b3%d0%be-%d0%b2%d0%be%d0%bf%d1%80%d0%be%d1%81%d0%bd%d0%be-%d0%be%d1%82%d0%b2%d0%b5%d1%82%d0%bd%d0%be%d0%b3%d0%be-%d0%b0%d0%bd%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Input Context&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write a high-quality answer for the given question using only the provided search results (some of which might be irrelevant).&lt;/p&gt;
&lt;p&gt;Document [1](Title: Asian Americans in science and technology) Prize in physics for discovery of the subatomic particle J/ψ. Subrahmanyan Chandrasekhar shared&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Document [2](Title: List of Nobel laureates in Physics) The first Nobel Prize in Physics was awarded in 1901 to Wilhelm Conrad Röntgen, of Germany, who received&amp;hellip;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Document [3](Title: Scientist) and pursued through a unique method, was essentially in place. Ramón y Cajal won the Nobel Prize in 1906 for his remarkable&amp;hellip;&lt;/p&gt;
&lt;p&gt;Question: who got the first nobel prize in physics &lt;br&gt;
Answer:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Desired Answer&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wilhelm Conrad Röntgen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Документ, содержащий ответ, выделен для ясности.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Мы реализуем эту задачу с данными из NaturalQuestions-Open [Lee et al., 2019; Kwiatkowski et al., 2019], которые содержат исторические запросы, отправленные в поисковую систему Google, в сочетании с аннотированными людьми ответами, извлеченными из Википедии.&lt;br&gt;
В частности, мы берем 2655 запросов, где аннотированный длинный ответ является абзацем (в отличие от списка или таблицы).&lt;br&gt;
Мы используем отрывки (кусочки не более 100 токенов) из Википедии в качестве документов в пределах наших входных контекстов.&lt;br&gt;
Для каждого из запросов нам нужен документ, содержащий ответ, и $k-1$ отвлекающих документов, которые не содержат ответа.&lt;br&gt;
Чтобы получить документ, который отвечает на вопрос, мы используем абзац Википедии, содержащий ответ из аннотаций NaturalQuestions.&lt;/p&gt;
&lt;p&gt;Чтобы собрать $k-1$ отвлекающих документов, которые не содержат ответа, мы используем систему извлечения (Contriever, дообученную на MS-MARCO; [Izacard et al., 2021]) для извлечения $k-1$ отрывков из Википедии, которые наиболее релевантны запросу и не содержат ни одного из аннотированных ответов NaturalQuestions.&lt;/p&gt;
&lt;p&gt;Чтобы модулировать положение релевантной информации в пределах входного контекста, мы изменяем порядок документов, чтобы изменить положение документа, содержащего ответ.&lt;/p&gt;
&lt;!-- ![Модуляция положения релевантной информации](figures/qa_changing_position.png) --&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;модуляция-положения-релевантной-информации&#34;
    &gt;
        Модуляция положения релевантной информации
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#модуляция-положения-релевантной-информации&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Модуляция положения релевантной информации&#34; href=&#34;#%d0%bc%d0%be%d0%b4%d1%83%d0%bb%d1%8f%d1%86%d0%b8%d1%8f-%d0%bf%d0%be%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%b8%d1%8f-%d1%80%d0%b5%d0%bb%d0%b5%d0%b2%d0%b0%d0%bd%d1%82%d0%bd%d0%be%d0%b9-%d0%b8%d0%bd%d1%84%d0%be%d1%80%d0%bc%d0%b0%d1%86%d0%b8%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Input Context&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write a high-quality answer for the given question using only the provided search results (some of which might be irrelevant).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Document [1](Title: List of Nobel laureates in Physics) &amp;hellip;&lt;/strong&gt; &lt;br&gt;
Document [2](Title: Asian Americans in science and technology) &amp;hellip; &lt;br&gt;
Document [3](Title: Scientist) &amp;hellip;&lt;/p&gt;
&lt;p&gt;Question: who got the first nobel prize in physics &lt;br&gt;
Answer:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Desired Answer&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wilhelm Conrad Röntgen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Чтобы модулировать длину входного контекста в этой задаче, мы увеличиваем или уменьшаем количество извлеченных документов, не содержащих ответа.&lt;/p&gt;
&lt;!-- ![Модуляция длины входного контекста](figures/qa_changing_length.png) --&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;модуляция-длины-входного-контекста&#34;
    &gt;
        Модуляция длины входного контекста
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#модуляция-длины-входного-контекста&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Модуляция длины входного контекста&#34; href=&#34;#%d0%bc%d0%be%d0%b4%d1%83%d0%bb%d1%8f%d1%86%d0%b8%d1%8f-%d0%b4%d0%bb%d0%b8%d0%bd%d1%8b-%d0%b2%d1%85%d0%be%d0%b4%d0%bd%d0%be%d0%b3%d0%be-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Input Context&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write a high-quality answer for the given question using only the provided search results (some of which might be irrelevant).&lt;/p&gt;
&lt;p&gt;Document [1](Title: Asian Americans in science and technology) &amp;hellip; &lt;br&gt;
&lt;strong&gt;Document [2](Title: List of Nobel laureates in Physics) &amp;hellip;&lt;/strong&gt; &lt;br&gt;
Document [3](Title: Scientist) &amp;hellip; &lt;br&gt;
Document [4](Title: Norwegian Americans) &amp;hellip; &lt;br&gt;
Document [5](Title: Maria Goeppert Mayer) &amp;hellip;&lt;/p&gt;
&lt;p&gt;Question: who got the first nobel prize in physics &lt;br&gt;
Answer:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Desired Answer&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wilhelm Conrad Röntgen&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Следуя [Kandpal et al., 2022; Mallen et al., 2023], мы используем точность в качестве нашего основного показателя оценки, оценивая, появляется ли какой-либо из правильных ответов (как взято из аннотаций NaturalQuestions) в предсказанном выводе.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;модели&#34;
    &gt;
        Модели
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#модели&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Модели&#34; href=&#34;#%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Мы анализируем несколько современных открытых и закрытых языковых моделей.&lt;br&gt;
Мы используем жадное декодирование при генерации выводов и оставляем изучение других методов декодирования для будущей работы.&lt;br&gt;
Мы используем стандартный набор подсказок для каждой модели.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Открытые модели:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MPT-30B-Instruct (максимальная длина контекста 8192 токена, ALiBi позиционирование)&lt;/li&gt;
&lt;li&gt;LongChat-13B (16K) (расширенное окно контекста LLaMA-13B до 16384 токенов)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Закрытые модели:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GPT-3.5-Turbo (4K токенов) и GPT-3.5-Turbo (16K)&lt;/li&gt;
&lt;li&gt;Claude-1.3 (8K токенов) и Claude-1.3 (100K токенов)&lt;/li&gt;
&lt;li&gt;GPT-4 (8K) — только подмножество экспериментов&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;результаты-и-обсуждение&#34;
    &gt;
        Результаты и обсуждение
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#результаты-и-обсуждение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Результаты и обсуждение&#34; href=&#34;#%d1%80%d0%b5%d0%b7%d1%83%d0%bb%d1%8c%d1%82%d0%b0%d1%82%d1%8b-%d0%b8-%d0%be%d0%b1%d1%81%d1%83%d0%b6%d0%b4%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Мы экспериментируем с входными контекстами, содержащими 10, 20 и 30 документов.&lt;br&gt;
Ниже — производительность многодокументного вопросно-ответного анализа при изменении положения релевантной информации в пределах входного контекста.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/qa.png&#34;
  alt=&#34;Влияние положения релевантной информации&#34;
  
/&gt;&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;таблица-точность-языковых-моделей-в-закрытой-книге-и-оракульской-настройке&#34;
    &gt;
        Таблица: Точность языковых моделей в закрытой книге и оракульской настройке
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#таблица-точность-языковых-моделей-в-закрытой-книге-и-оракульской-настройке&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Таблица: Точность языковых моделей в закрытой книге и оракульской настройке&#34; href=&#34;#%d1%82%d0%b0%d0%b1%d0%bb%d0%b8%d1%86%d0%b0-%d1%82%d0%be%d1%87%d0%bd%d0%be%d1%81%d1%82%d1%8c-%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d1%85-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b5%d0%b9-%d0%b2-%d0%b7%d0%b0%d0%ba%d1%80%d1%8b%d1%82%d0%be%d0%b9-%d0%ba%d0%bd%d0%b8%d0%b3%d0%b5-%d0%b8-%d0%be%d1%80%d0%b0%d0%ba%d1%83%d0%bb%d1%8c%d1%81%d0%ba%d0%be%d0%b9-%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Модель&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Закрытая книга&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Оракул&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;LongChat-13B (16K)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;35.0%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;83.4%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;MPT-30B-Instruct&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;31.5%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;81.9%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GPT-3.5-Turbo&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;56.1%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;88.3%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;GPT-3.5-Turbo (16K)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;56.0%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;88.6%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Claude-1.3&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;48.3%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;76.1%&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Claude-1.3 (100K)&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;48.2%&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;76.4%&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;основные-выводы&#34;
    &gt;
        Основные выводы
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#основные-выводы&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Основные выводы&#34; href=&#34;#%d0%be%d1%81%d0%bd%d0%be%d0%b2%d0%bd%d1%8b%d0%b5-%d0%b2%d1%8b%d0%b2%d0%be%d0%b4%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Производительность максимальна, когда релевантная информация в начале или конце контекста.&lt;/strong&gt;&lt;br&gt;
U-образная кривая производительности: модели лучше используют релевантную информацию, находящуюся в начале (эффект первичности) или в конце (эффект недавности) контекста, и производительность значительно ухудшается, когда информация в середине.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Модели с расширенным контекстом не обязательно лучше используют входной контекст.&lt;/strong&gt;&lt;br&gt;
Производительность между обычной и расширенной версией модели почти идентична, если входной контекст помещается в их окно.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;насколько-хорошо-языковые-модели-могут-извлекать-из-входных-контекстов&#34;
    &gt;
        Насколько хорошо языковые модели могут извлекать из входных контекстов?
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#насколько-хорошо-языковые-модели-могут-извлекать-из-входных-контекстов&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Насколько хорошо языковые модели могут извлекать из входных контекстов?&#34; href=&#34;#%d0%bd%d0%b0%d1%81%d0%ba%d0%be%d0%bb%d1%8c%d0%ba%d0%be-%d1%85%d0%be%d1%80%d0%be%d1%88%d0%be-%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8-%d0%bc%d0%be%d0%b3%d1%83%d1%82-%d0%b8%d0%b7%d0%b2%d0%bb%d0%b5%d0%ba%d0%b0%d1%82%d1%8c-%d0%b8%d0%b7-%d0%b2%d1%85%d0%be%d0%b4%d0%bd%d1%8b%d1%85-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Учитывая, что языковые модели испытывают трудности с извлечением и использованием информации из середины их входных контекстов в задаче многодокументного вопросно-ответного анализа, в какой степени они могут просто &lt;em&gt;извлекать&lt;/em&gt; из входных контекстов?&lt;br&gt;
Мы изучаем этот вопрос с помощью синтетической задачи извлечения ключевых значений.&lt;/p&gt;
&lt;!-- ![Пример задачи извлечения ключевых значений](figures/kv_retrieval_example.png) --&gt;
&lt;p&gt;&lt;strong&gt;Input Context&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Extract the value corresponding to the specified key in the JSON object below.&lt;/p&gt;
&lt;p&gt;JSON data:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;2a8d601d-1d69-4e64-9f90-8ad825a74195&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;bb3ba2a5-7de8-434b-a86e-a88bb9fa7289&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;a54e2eed-e625-4570-9f74-3624e77d6684&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d1ff29be-4e2a-4208-a182-0cea716be3d4&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;9f4a92b9-5f69-4725-ba1e-403f08dea695&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;703a7ce5-f17f-4e6d-b895-5836ba5ec71c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;--
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;52a9c80c-da51-4fc9-bf70-4a4901bc2ac3&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;b2f8ea3d-4b1b-49e0-a141-b9823991ebeb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;f4eb1c53-af0a-4dc4-a3a5-c2d50851a178&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;d733b0d2-6af3-44e1-8592-e5637fdb76fb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Key: &amp;ldquo;&lt;strong&gt;9f4a92b9-5f69-4725-ba1e-403f08dea695&lt;/strong&gt;&amp;rdquo;
Corresponding value:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Desired Output&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;703a7ce5-f17f-4e6d-b895-5836ba5ec71c&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;экспериментальная-установка-1&#34;
    &gt;
        Экспериментальная установка
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#экспериментальная-установка-1&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Экспериментальная установка&#34; href=&#34;#%d1%8d%d0%ba%d1%81%d0%bf%d0%b5%d1%80%d0%b8%d0%bc%d0%b5%d0%bd%d1%82%d0%b0%d0%bb%d1%8c%d0%bd%d0%b0%d1%8f-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-1&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Входные данные включают:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;сериализованный объект JSON с $k$ парами ключ-значение (UUID)&lt;/li&gt;
&lt;li&gt;ключ, для которого нужно вернуть значение&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Мы измеряем точность, оценивая, появляется ли правильное значение в предсказанном выводе.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;результаты&#34;
    &gt;
        Результаты
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#результаты&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Результаты&#34; href=&#34;#%d1%80%d0%b5%d0%b7%d1%83%d0%bb%d1%8c%d1%82%d0%b0%d1%82%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/kv_records.png&#34;
  alt=&#34;Влияние длины и положения релевантной информации&#34;
  
/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Claude-1.3 и Claude-1.3 (100K) почти идеально выполняют задачу на всех длинах контекста.&lt;/li&gt;
&lt;li&gt;GPT-3.5-Turbo, GPT-3.5-Turbo (16K) и MPT-30B-Instruct испытывают трудности, особенно при большом количестве пар.&lt;/li&gt;
&lt;li&gt;U-образная кривая производительности сохраняется: наименьшая точность — при необходимости извлекать из середины контекста.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;почему-языковые-модели-не-устойчивы-к-изменениям-положения-релевантной-информации&#34;
    &gt;
        Почему языковые модели не устойчивы к изменениям положения релевантной информации?
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#почему-языковые-модели-не-устойчивы-к-изменениям-положения-релевантной-информации&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Почему языковые модели не устойчивы к изменениям положения релевантной информации?&#34; href=&#34;#%d0%bf%d0%be%d1%87%d0%b5%d0%bc%d1%83-%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8-%d0%bd%d0%b5-%d1%83%d1%81%d1%82%d0%be%d0%b9%d1%87%d0%b8%d0%b2%d1%8b-%d0%ba-%d0%b8%d0%b7%d0%bc%d0%b5%d0%bd%d0%b5%d0%bd%d0%b8%d1%8f%d0%bc-%d0%bf%d0%be%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%b8%d1%8f-%d1%80%d0%b5%d0%bb%d0%b5%d0%b2%d0%b0%d0%bd%d1%82%d0%bd%d0%be%d0%b9-%d0%b8%d0%bd%d1%84%d0%be%d1%80%d0%bc%d0%b0%d1%86%d0%b8%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Мы исследуем роль архитектуры модели, контекстуализации с учетом запроса и тонкой настройки инструкций.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;влияние-архитектуры-модели&#34;
    &gt;
        Влияние архитектуры модели
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#влияние-архитектуры-модели&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Влияние архитектуры модели&#34; href=&#34;#%d0%b2%d0%bb%d0%b8%d1%8f%d0%bd%d0%b8%d0%b5-%d0%b0%d1%80%d1%85%d0%b8%d1%82%d0%b5%d0%ba%d1%82%d1%83%d1%80%d1%8b-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/qa_decoder_only_vs_encoder_decoder.png&#34;
  alt=&#34;Сравнение моделей только-декодера и кодер-декодер&#34;
  
/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Кодер-декодер модели (Flan-UL2, Flan-T5-XXL) устойчивы к изменению позиции релевантной информации, если длина последовательности не превышает ту, что была на обучении.&lt;/li&gt;
&lt;li&gt;При более длинных последовательностях появляется U-образная кривая.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;влияние-контекстуализации-с-учетом-запроса&#34;
    &gt;
        Влияние контекстуализации с учетом запроса
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#влияние-контекстуализации-с-учетом-запроса&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Влияние контекстуализации с учетом запроса&#34; href=&#34;#%d0%b2%d0%bb%d0%b8%d1%8f%d0%bd%d0%b8%d0%b5-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d0%b8-%d1%81-%d1%83%d1%87%d0%b5%d1%82%d0%be%d0%bc-%d0%b7%d0%b0%d0%bf%d1%80%d0%be%d1%81%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/20_total_documents_precondition_with_question.jpg&#34;
  alt=&#34;Контекстуализация с учетом запроса&#34;
  
/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Размещение запроса перед &lt;em&gt;и&lt;/em&gt; после данных почти не влияет на тенденции в многодокументном вопросно-ответном анализе, но помогает в синтетической задаче извлечения ключевых значений.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;влияние-тонкой-настройки-инструкций&#34;
    &gt;
        Влияние тонкой настройки инструкций
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#влияние-тонкой-настройки-инструкций&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Влияние тонкой настройки инструкций&#34; href=&#34;#%d0%b2%d0%bb%d0%b8%d1%8f%d0%bd%d0%b8%d0%b5-%d1%82%d0%be%d0%bd%d0%ba%d0%be%d0%b9-%d0%bd%d0%b0%d1%81%d1%82%d1%80%d0%be%d0%b9%d0%ba%d0%b8-%d0%b8%d0%bd%d1%81%d1%82%d1%80%d1%83%d0%ba%d1%86%d0%b8%d0%b9&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/base_vs_instruction_tuned.jpg&#34;
  alt=&#34;Базовая модель vs. после тонкой настройки инструкций&#34;
  
/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;U-образная кривая наблюдается как у базовой модели, так и у модели после тонкой настройки инструкций.&lt;/li&gt;
&lt;li&gt;Тонкая настройка инструкций слегка уменьшает разницу между наилучшей и наихудшей производительностью.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;всегда-ли-больше-контекста-лучше-тематическое-исследование-с-открытым-вопросно-ответным-анализом&#34;
    &gt;
        Всегда ли больше контекста лучше? Тематическое исследование с открытым вопросно-ответным анализом
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#всегда-ли-больше-контекста-лучше-тематическое-исследование-с-открытым-вопросно-ответным-анализом&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Всегда ли больше контекста лучше? Тематическое исследование с открытым вопросно-ответным анализом&#34; href=&#34;#%d0%b2%d1%81%d0%b5%d0%b3%d0%b4%d0%b0-%d0%bb%d0%b8-%d0%b1%d0%be%d0%bb%d1%8c%d1%88%d0%b5-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%b0-%d0%bb%d1%83%d1%87%d1%88%d0%b5-%d1%82%d0%b5%d0%bc%d0%b0%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%be%d0%b5-%d0%b8%d1%81%d1%81%d0%bb%d0%b5%d0%b4%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-%d1%81-%d0%be%d1%82%d0%ba%d1%80%d1%8b%d1%82%d1%8b%d0%bc-%d0%b2%d0%be%d0%bf%d1%80%d0%be%d1%81%d0%bd%d0%be-%d0%be%d1%82%d0%b2%d0%b5%d1%82%d0%bd%d1%8b%d0%bc-%d0%b0%d0%bd%d0%b0%d0%bb%d0%b8%d0%b7%d0%be%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Предоставление языковой модели большего объема информации может помочь, но также увеличивает объем контента для анализа, что может снизить точность.&lt;/li&gt;
&lt;li&gt;В экспериментах с NaturalQuestions-Open производительность модели насыщается задолго до насыщения извлечения: использование 50 документов вместо 20 улучшает точность лишь на 1–1.5%.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img
  src=&#34;figures/odqa.jpg&#34;
  alt=&#34;Извлечение и производительность модели в зависимости от количества документов&#34;
  
/&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;связанные-работы&#34;
    &gt;
        Связанные работы
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#связанные-работы&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Связанные работы&#34; href=&#34;#%d1%81%d0%b2%d1%8f%d0%b7%d0%b0%d0%bd%d0%bd%d1%8b%d0%b5-%d1%80%d0%b0%d0%b1%d0%be%d1%82%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;языковые-модели-с-длинным-контекстом&#34;
    &gt;
        Языковые модели с длинным контекстом
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#языковые-модели-с-длинным-контекстом&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Языковые модели с длинным контекстом&#34; href=&#34;#%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8-%d1%81-%d0%b4%d0%bb%d0%b8%d0%bd%d0%bd%d1%8b%d0%bc-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%be%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Много работ посвящено масштабированию трансформеров по длине контекста: модификации внимания (рекуррентность, аппроксимации, свертки, линейные RNN), ускоренные реализации (FlashAttention), отказ от внимания (RWKV, S4, Hyena).&lt;br&gt;
Оценка часто проводится по перплексии, но точный доступ к знаниям на длинных контекстах — отдельная задача.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;как-языковые-модели-используют-контекст&#34;
    &gt;
        Как языковые модели используют контекст?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#как-языковые-модели-используют-контекст&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Как языковые модели используют контекст?&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d1%8f%d0%b7%d1%8b%d0%ba%d0%be%d0%b2%d1%8b%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d1%83%d1%8e%d1%82-%d0%ba%d0%be%d0%bd%d1%82%d0%b5%d0%ba%d1%81%d1%82&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Ранние работы показали, что LSTM используют долгосрочный контекст все менее эффективно; внимательные LSTM склонны к недавности; трансформеры часто не используют долгосрочный контекст эффективно; длинный контекст помогает только для некоторых токенов.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;эффект-серийной-позиции&#34;
    &gt;
        Эффект серийной позиции
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#эффект-серийной-позиции&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Эффект серийной позиции&#34; href=&#34;#%d1%8d%d1%84%d1%84%d0%b5%d0%ba%d1%82-%d1%81%d0%b5%d1%80%d0%b8%d0%b9%d0%bd%d0%be%d0%b9-%d0%bf%d0%be%d0%b7%d0%b8%d1%86%d0%b8%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;U-образная кривая соответствует эффекту серийной позиции в психологии: люди лучше запоминают первые и последние элементы списка.&lt;br&gt;
В трансформерах, несмотря на техническую возможность извлекать любой токен, наблюдается аналогичный эффект.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;заключение&#34;
    &gt;
        Заключение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/lost-in-the-middle/#заключение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Заключение&#34; href=&#34;#%d0%b7%d0%b0%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Мы эмпирически изучаем, как языковые модели используют длинные входные контексты.&lt;br&gt;
Показываем, что производительность моделей значительно ухудшается при изменении положения релевантной информации — особенно в середине длинных контекстов.&lt;br&gt;
Проводим исследование роли архитектуры, контекстуализации с учетом запроса и тонкой настройки инструкций.&lt;br&gt;
В тематическом исследовании ODQA обнаруживаем, что производительность насыщается задолго до насыщения извлечения.&lt;br&gt;
Наши результаты дают лучшее понимание того, как языковые модели используют контекст, и предлагают новые протоколы оценки для будущих моделей с длинным контекстом.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/LLM" term="LLM" label="LLM" />
        </entry>
        <entry>
            <title>Размышления о природе случайности</title>
            <link href="https://valmat.ru/posts/2025/08/randomness/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2025/08/randomness/</id>
            <published>2025-08-22T00:49:34+03:00</published>
            <updated>2025-08-22T00:49:34+03:00</updated>
            <content type="html">
                &lt;p&gt;Тема случайности меня волнует давно.&lt;br&gt;
Существует ли физически объективная случайность, не обусловленная никакими внешними признаками? А если да, то как её определить и почему она существует?&lt;br&gt;
Или всё, что мы воспринимаем как случайное, обусловлено лишь нашей мерой незнания? Как только мы получаем новую информацию, случайности становится меньше — просто потому, что мы узнали больше об объективных закономерностях в системе, которые на самом деле не являются случайными, а лишь отражают принципиальную сложность системы.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;что-такое-хаотическая-и-стохастическая-случайность&#34;
    &gt;
        Что такое хаотическая и стохастическая случайность?
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#что-такое-хаотическая-и-стохастическая-случайность&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Что такое хаотическая и стохастическая случайность?&#34; href=&#34;#%d1%87%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5-%d1%85%d0%b0%d0%be%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b0%d1%8f-%d0%b8-%d1%81%d1%82%d0%be%d1%85%d0%b0%d1%81%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b0%d1%8f-%d1%81%d0%bb%d1%83%d1%87%d0%b0%d0%b9%d0%bd%d0%be%d1%81%d1%82%d1%8c&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;О хаотических системах известно уже давно. По ним написано множество научных и популярных работ.&lt;br&gt;
Если не вдаваться в детали, хаотическими можно назвать такие системы, для которых малые изменения в начальных условиях ведут к катастрофически большим различиям на дистанции.&lt;br&gt;
Это хорошо известные примеры: динамика трёх тел, двойной маятник, турбулентное движение воды, образование пятен на солнце и даже уровни рек или курсы акций — всё это классические примеры хаотических систем.&lt;/p&gt;
&lt;p&gt;Существуют определённые методы выявления хаотичности и поиска закономерностей: фрактальные размерности траекторий, показатели Ляпунова и Херста, а также широкий набор алгоритмов теории информации позволяют исследовать хаотические системы и выявлять меру их детерминированности. Но они не дают полного ответа на вопрос, чем обусловлена случайность той или иной системы.&lt;/p&gt;
&lt;p&gt;Если смотреть чуть шире, к хаотическим можно отнести и системы, которые работают детерминированно, но под влиянием скрытых от нас параметров, которые мы не можем измерить.&lt;/p&gt;
&lt;p&gt;Стохастическая или истинная случайность — это когда исход фундаментально непредсказуем. Нет скрытых причин, нет &amp;ldquo;глубже&amp;rdquo; уровня, где всё детерминировано. Объективная — значит, не из-за нашего незнания, а реально встроенная в ткань реальности. В классической физике такого нет, но квантовая механика намекает, что, возможно, да.&lt;/p&gt;
&lt;p&gt;Само определение стохастической системы очень размыто. По сути, мы считаем систему стохастической, если не можем найти в ней хаотическую (потенциально детерминированную) составляющую.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;неравенства-белла-почему-они-заставляют-думать-о-случайности&#34;
    &gt;
        Неравенства Белла: почему они заставляют думать о случайности
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#неравенства-белла-почему-они-заставляют-думать-о-случайности&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Неравенства Белла: почему они заставляют думать о случайности&#34; href=&#34;#%d0%bd%d0%b5%d1%80%d0%b0%d0%b2%d0%b5%d0%bd%d1%81%d1%82%d0%b2%d0%b0-%d0%b1%d0%b5%d0%bb%d0%bb%d0%b0-%d0%bf%d0%be%d1%87%d0%b5%d0%bc%d1%83-%d0%be%d0%bd%d0%b8-%d0%b7%d0%b0%d1%81%d1%82%d0%b0%d0%b2%d0%bb%d1%8f%d1%8e%d1%82-%d0%b4%d1%83%d0%bc%d0%b0%d1%82%d1%8c-%d0%be-%d1%81%d0%bb%d1%83%d1%87%d0%b0%d0%b9%d0%bd%d0%be%d1%81%d1%82%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Неравенства Белла — это математический тест, придуманный Джоном Беллом в 1964 году, чтобы проверить, совместима ли квантовая механика со &amp;ldquo;здравым смыслом&amp;rdquo; Эйнштейна. Эйнштейн не любил идею случайности (как и я) и &amp;ldquo;спонтанной связи&amp;rdquo; в квантовой механике, где запутанные частицы (например, два электрона, &amp;ldquo;связанных&amp;rdquo; на расстоянии) вроде бы &amp;ldquo;общаются&amp;rdquo; мгновенно.&lt;/p&gt;
&lt;p&gt;В упрощённом виде: представьте две частицы, разлетающиеся в разные стороны. Их свойства (спин или поляризация) запутаны — измеришь одну и сразу узнаёшь про вторую. Белл показал: если мир &amp;ldquo;&lt;em&gt;локально-реалистичен&lt;/em&gt;&amp;rdquo; (свойства существуют заранее, и ничто не влияет быстрее света), то корреляции между измерениями ограничены формулой вроде $|E_1 + E_2 + E_3 - E_4| \leq 2$ (где $E$ — средние корреляции).&lt;/p&gt;
&lt;p&gt;Но эксперименты (с 1980-х по 2020-е, включая &amp;ldquo;без лазеек&amp;rdquo; в 2015+) показывают значение до $2\cdot\sqrt{2} \approx 2.8$! Это нарушает неравенство. Вывод: либо нет реализма (свойства не существуют до измерения, и исход случаен), либо нет локальности (есть &amp;ldquo;нелокальное&amp;rdquo; влияние), либо оба. Для многих это доказательство &amp;ldquo;объективной случайности&amp;rdquo; — в квантовой механике вероятности фундаментальны.&lt;/p&gt;
&lt;p&gt;Звучит обескураживающе, правда? Но давайте не спешить с выводами — это не конец истории.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;альтернативные-взгляды-почему-неравенства-белла-не-закрывают-вопрос&#34;
    &gt;
        Альтернативные взгляды: почему неравенства Белла не закрывают вопрос
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#альтернативные-взгляды-почему-неравенства-белла-не-закрывают-вопрос&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Альтернативные взгляды: почему неравенства Белла не закрывают вопрос&#34; href=&#34;#%d0%b0%d0%bb%d1%8c%d1%82%d0%b5%d1%80%d0%bd%d0%b0%d1%82%d0%b8%d0%b2%d0%bd%d1%8b%d0%b5-%d0%b2%d0%b7%d0%b3%d0%bb%d1%8f%d0%b4%d1%8b-%d0%bf%d0%be%d1%87%d0%b5%d0%bc%d1%83-%d0%bd%d0%b5%d1%80%d0%b0%d0%b2%d0%b5%d0%bd%d1%81%d1%82%d0%b2%d0%b0-%d0%b1%d0%b5%d0%bb%d0%bb%d0%b0-%d0%bd%d0%b5-%d0%b7%d0%b0%d0%ba%d1%80%d1%8b%d0%b2%d0%b0%d1%8e%d1%82-%d0%b2%d0%be%d0%bf%d1%80%d0%be%d1%81&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Хотя сейчас принято считать, что нарушения неравенств Белла доказывают существование объективной случайности, среди физиков нет полного единства по этому поводу. Эксперименты действительно подтверждают нарушение этих неравенств, но вопрос, что из этого следует, открыт для интерпретации.&lt;/p&gt;
&lt;p&gt;Суть в том, что неравенства Белла основаны сразу на трёх предположениях:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;что свойства системы существуют заранее (реализм),&lt;/li&gt;
&lt;li&gt;что никакое событие не может влиять на другое мгновенно на расстоянии (локальность),&lt;/li&gt;
&lt;li&gt;и что выбор того, что измерять, не зависит от самой системы (независимость).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Эксперименты показывают: все три вместе не работают. Но какой из кирпичиков &amp;ldquo;убрать&amp;rdquo; — решает каждая интерпретация по-своему. Вот основные альтернативные взгляды:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Супердетерминизм&lt;/strong&gt;. Предполагается, что всё в мире, включая наш выбор, уже предопределено. Тогда нарушается независимость эксперимента, и неравенства Белла теряют силу. Эта идея непопулярна, потому что кажется слишком &amp;ldquo;жёсткой&amp;rdquo;, но теоретически её нельзя исключить.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Модели с контекстом или скрытыми переменными&lt;/strong&gt;. Некоторые варианты скрытых переменных предполагают, что свойства частиц могут зависеть от самого процесса измерения или от условий эксперимента. Такие модели сложнее, но полностью их не исключили.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Влияние из будущего (ретрокаузальность)&lt;/strong&gt;. Есть гипотезы, где будущие события могут как-то влиять на прошлое. Это странно, но такие идеи тоже обсуждаются.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Вероятности как наши знания&lt;/strong&gt;. Есть взгляды, что квантовая &amp;ldquo;случайность&amp;rdquo; — это не свойство самой природы, а просто отражение нашего незнания (информационные интерпретации).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Фундаментальная случайность&lt;/strong&gt;. Можно принять, что случайные события действительно &amp;ldquo;встроены&amp;rdquo; в законы природы, и на этом остановиться. Но это уже отдельная гипотеза, а не прямой вывод из экспериментов.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Важно понимать: современные эксперименты очень аккуратны, все основные &amp;ldquo;лазейки&amp;rdquo; (например, влияние детекторов) почти полностью закрыты. Но остаётся принципиальный вопрос — действительно ли наш выбор измерения никак не связан с состоянием системы? Проверить это до конца невозможно.&lt;/p&gt;
&lt;p&gt;В итоге, неравенства Белла показывают, что привычный набор предположений о мире не совместим с квантовой физикой. Но какой из этих кирпичиков переставить или убрать — вопрос интерпретации. Поэтому тема случайности в физике остаётся открытой: разные взгляды пока равноправны, и никто не может сказать, что вопрос полностью закрыт.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;как-объяснить-объективную-случайность&#34;
    &gt;
        Как объяснить объективную случайность
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#как-объяснить-объективную-случайность&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Как объяснить объективную случайность&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d0%be%d0%b1%d1%8a%d1%8f%d1%81%d0%bd%d0%b8%d1%82%d1%8c-%d0%be%d0%b1%d1%8a%d0%b5%d0%ba%d1%82%d0%b8%d0%b2%d0%bd%d1%83%d1%8e-%d1%81%d0%bb%d1%83%d1%87%d0%b0%d0%b9%d0%bd%d0%be%d1%81%d1%82%d1%8c&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Предположим, что всё-таки Белл прав и объективная случайность действительно существует. Я не сторонник такой идеи, но вполне допускаю, что это может быть правдой, что бы это ни значило.&lt;/p&gt;
&lt;p&gt;Допустим, случайность реальна. Как её вписать в картину мира без лишней &amp;ldquo;магии&amp;rdquo; и избыточных предположений?&lt;/p&gt;
&lt;p&gt;Здесь вступает в силу бритва Оккама: выбираем объяснение с минимальными допущениями. Вместо введения &amp;ldquo;фундаментальной случайности&amp;rdquo; как примитива или нелокальности как хака, давайте подумаем шире.&lt;/p&gt;
&lt;p&gt;Предположение, что в системе могут возникать непроизвольные и вообще ничем не обусловленные изменения — это очень сильное допущение. Обычный ответ: так устроена квантовая механика — мы не можем это объяснить, но это так, и нужно просто принять. Это плохое объяснение с точки зрения бритвы Оккама.&lt;/p&gt;
&lt;p&gt;Я предлагаю одно простое и минималистичное допущение: &lt;strong&gt;всё, что объективно существует, — это информация&lt;/strong&gt;.&lt;br&gt;
И больше нет ничего.&lt;/p&gt;
&lt;p&gt;Это совершенно минималистичное допущение. Ни у кого не возникает сомнений, что математика объективна и не нуждается в носителе.&lt;br&gt;
Математика никак не ограничена фундаментальными физическими константами нашей Вселенной. Она вне сомнения одинакова в любой точке нашей Вселенной. И если бы мы когда-нибудь выяснили, что другие вселенные существуют, то, вне всякого сомнения, в них была бы та же самая математика.&lt;/p&gt;
&lt;p&gt;Все возможные миры — это просто реализации континуума комбинаторных возможностей того, как информация может комбинироваться. Они существовали всегда, поскольку информация в комбинаторном многообразии не нуждается ни в создании, ни в создателе, ни в каких-либо избыточных предположениях. Да, это антропный принцип. Мы наблюдаем нашу Вселенную, потому что возникли именно в такой комбинации информации. Это идея математичности всего.&lt;br&gt;
Она может казаться сложной только на первый взгляд. Но на самом деле она очень простая.&lt;/p&gt;
&lt;p&gt;Все возможные миры существуют вечно, изолированно, без взаимодействия.&lt;br&gt;
Они не создаются, не появляются, а просто есть как одна из континуума возможных комбинаций информации.&lt;/p&gt;
&lt;p&gt;В такой интерпретации нам уже не нужно предположение о случайности как о немотивированном изменении.&lt;br&gt;
Любое изменение, которое выглядит как случайное, — это просто реализация комбинаторного многообразия. В бесчисленном количестве изолированных и &amp;ldquo;параллельных&amp;rdquo; вселенных были другие изменения, которых в нашей Вселенной могло не быть.&lt;/p&gt;
&lt;p&gt;Ещё раз: в нашей &amp;ldquo;ветви&amp;rdquo; (мире) исход квантового измерения кажется случайным, но глобально все варианты реализованы. Мы наблюдаем эту вселенную, потому что только в совместимых с жизнью комбинациях возникают наблюдатели (антропный принцип). Нет коллапса, нет ветвления (как в многомировой интерпретации) — просто статичные мультивселенные.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;в-чём-отличие-от-многомировой-интерпретации-эверетта&#34;
    &gt;
        В чём отличие от многомировой интерпретации Эверетта
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#в-чём-отличие-от-многомировой-интерпретации-эверетта&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor В чём отличие от многомировой интерпретации Эверетта&#34; href=&#34;#%d0%b2-%d1%87%d1%91%d0%bc-%d0%be%d1%82%d0%bb%d0%b8%d1%87%d0%b8%d0%b5-%d0%be%d1%82-%d0%bc%d0%bd%d0%be%d0%b3%d0%be%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%be%d0%b9-%d0%b8%d0%bd%d1%82%d0%b5%d1%80%d0%bf%d1%80%d0%b5%d1%82%d0%b0%d1%86%d0%b8%d0%b8-%d1%8d%d0%b2%d0%b5%d1%80%d0%b5%d1%82%d1%82%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;На первый взгляд идея, которую я тут предлагаю, очень похожа на интерпретацию Эверетта.&lt;br&gt;
Но есть важное отличие.&lt;br&gt;
Никакого разветвления не происходит. Наблюдатель ни на что не влияет и вообще не требуется ни наблюдатель, ни измерение.&lt;br&gt;
Коллапс волновой функции снова имеет разумное объяснение как просто байесовское уточнение информации, а не как магический процесс.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;почему-это-минималистично-по-оккаму&#34;
    &gt;
        Почему это минималистично по Оккаму?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#почему-это-минималистично-по-оккаму&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Почему это минималистично по Оккаму?&#34; href=&#34;#%d0%bf%d0%be%d1%87%d0%b5%d0%bc%d1%83-%d1%8d%d1%82%d0%be-%d0%bc%d0%b8%d0%bd%d0%b8%d0%bc%d0%b0%d0%bb%d0%b8%d1%81%d1%82%d0%b8%d1%87%d0%bd%d0%be-%d0%bf%d0%be-%d0%be%d0%ba%d0%ba%d0%b0%d0%bc%d1%83&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Меньше допущений&lt;/strong&gt;: Вместо &amp;ldquo;случайности как сущности&amp;rdquo; или &amp;ldquo;нелокальности&amp;rdquo; — неоспоримая фундаментальность математики. В основе всего — просто комбинаторика.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Вечность и простота&lt;/strong&gt;: Нет начала и конца. Информация вечна и вообще вне времени.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;выводы&#34;
    &gt;
        Выводы
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2025/08/randomness/#выводы&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Выводы&#34; href=&#34;#%d0%b2%d1%8b%d0%b2%d0%be%d0%b4%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Разумеется, то, что я тут написал, — это не научная теория.&lt;br&gt;
Всё это нефальсифицируемо, как и многие другие интерпретации квантовой механики.&lt;br&gt;
Но эта идея логична и минималистична по Оккаму.&lt;/p&gt;
&lt;p&gt;Возможно, она кажется сложной из-за бесконечности. Но стоит вспомнить о фракталах — простое правило может порождать сложное.&lt;/p&gt;
&lt;p&gt;В общем, мы не знаем, существует ли объективная случайность, а если существует, то как она реализуется.&lt;br&gt;
А может быть, Белл просто подсвечивает наши пробелы в понимании. Это размышления, а не истина.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/thoughts" term="thoughts" label="thoughts" />
        </entry>
        <entry>
            <title>LittleVec — легковесная векторная база данных</title>
            <link href="https://valmat.ru/posts/2024/06/little-vec/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2024/06/little-vec/</id>
            <published>2025-06-24T12:00:00+03:00</published>
            <updated>2025-06-24T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;В последние годы векторные базы данных стали неотъемлемой частью современных ИИ-проектов: поиск по embedding, RAG-пайплайны, быстрый семантический поиск и многое другое. Однако, если вы когда-либо пробовали развернуть подобную БД — будь то FAISS, Milvus, Qdrant или аналогичные решения — вы наверняка сталкивались с тем, что даже для небольших экспериментов и pet-проектов такие системы требуют довольно мощного железа. В итоге приходится либо платить за дорогой сервер, либо мириться с низкой скоростью и неудобствами.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;мотивация-и-цели&#34;
    &gt;
        Мотивация и цели
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#мотивация-и-цели&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Мотивация и цели&#34; href=&#34;#%d0%bc%d0%be%d1%82%d0%b8%d0%b2%d0%b0%d1%86%d0%b8%d1%8f-%d0%b8-%d1%86%d0%b5%d0%bb%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Я регулярно разрабатываю прототипы и экспериментирую с RAG-пайплайнами, поэтому мне остро не хватало простой, быстрой и лёгкой векторной БД, которую можно было бы запустить на любом VPS или даже на домашнем мини-компьютере.&lt;br&gt;
Мои цели были такие:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Минимальные требования к ресурсам.&lt;/strong&gt; Максимум эффективности: чтобы можно было держать миллионы векторов даже на слабых серверах.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Простота запуска и интеграции.&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Надёжность хранения.&lt;/strong&gt; Не хочется терять данные из-за сбоя — значит, нужна проверенная СУБД в основе.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Гибкость.&lt;/strong&gt; Возможность использовать разные метрики расстояния, хранить дополнительную информацию (payload), работать с несколькими базами одновременно.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Так и родился &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/little-vec&#34;
&gt;LittleVec&lt;/a&gt; — минималистичная векторная база данных, работающая как плагин для &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/RocksServer&#34;
&gt;RocksServer&lt;/a&gt; и использующая в качестве хранилища сверхнадёжную &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://rocksdb.org/&#34;
&gt;RocksDB&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;почему-это-может-быть-полезно-вам&#34;
    &gt;
        Почему это может быть полезно вам?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#почему-это-может-быть-полезно-вам&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Почему это может быть полезно вам?&#34; href=&#34;#%d0%bf%d0%be%d1%87%d0%b5%d0%bc%d1%83-%d1%8d%d1%82%d0%be-%d0%bc%d0%be%d0%b6%d0%b5%d1%82-%d0%b1%d1%8b%d1%82%d1%8c-%d0%bf%d0%be%d0%bb%d0%b5%d0%b7%d0%bd%d0%be-%d0%b2%d0%b0%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Экономия ресурсов.&lt;/strong&gt; LittleVec потребляет всего 15–50 Мб ОЗУ даже на миллионах записей. Это значит, что вы можете запускать полноценную векторную БД даже на бюджетных VPS или в контейнере на локальной машине.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Быстрая интеграция.&lt;/strong&gt; Минималистичный и понятный API, готовые Docker-образы, поддержка DEB-пакетов — всё, чтобы вы могли быстро начать использовать LittleVec в своём проекте.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Надёжность и скорость.&lt;/strong&gt; Благодаря RocksDB и оптимизациям на уровне хранения, поиск по миллиону векторов занимает ~60 мс на обычном сервере.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;как-использовать-littlevec&#34;
    &gt;
        Как использовать LittleVec
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#как-использовать-littlevec&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Как использовать LittleVec&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d1%82%d1%8c-littlevec&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;1-установка-и-запуск&#34;
    &gt;
        1. Установка и запуск
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#1-установка-и-запуск&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 1. Установка и запуск&#34; href=&#34;#1-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%b8-%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;вариант-1-docker&#34;
    &gt;
        Вариант 1: Docker
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#вариант-1-docker&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Вариант 1: Docker&#34; href=&#34;#%d0%b2%d0%b0%d1%80%d0%b8%d0%b0%d0%bd%d1%82-1-docker&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Самый простой способ — воспользоваться Docker-образом:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker pull valmatdocker/littlevec
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -d -p 5577:5577 --name littlevec valmatdocker/littlevec
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;После запуска API будет доступно на &lt;code&gt;127.0.0.1:5577&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;вариант-2-установка-через-deb-пакет&#34;
    &gt;
        Вариант 2: Установка через DEB-пакет
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#вариант-2-установка-через-deb-пакет&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Вариант 2: Установка через DEB-пакет&#34; href=&#34;#%d0%b2%d0%b0%d1%80%d0%b8%d0%b0%d0%bd%d1%82-2-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d1%87%d0%b5%d1%80%d0%b5%d0%b7-deb-%d0%bf%d0%b0%d0%ba%d0%b5%d1%82&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Если вы предпочитаете запускать сервис напрямую:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Установите &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/RocksServer/releases&#34;
&gt;RocksServer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Клонируйте репозиторий LittleVec и соберите DEB-пакет:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/valmat/little-vec.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; little-vec/build_deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./build.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i littlevec_&amp;lt;version&amp;gt;_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Перезапустите RocksServer:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /etc/init.d/rocksserver restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;вариант-3-сборка-вручную&#34;
    &gt;
        Вариант 3: Сборка вручную
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#вариант-3-сборка-вручную&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Вариант 3: Сборка вручную&#34; href=&#34;#%d0%b2%d0%b0%d1%80%d0%b8%d0%b0%d0%bd%d1%82-3-%d1%81%d0%b1%d0%be%d1%80%d0%ba%d0%b0-%d0%b2%d1%80%d1%83%d1%87%d0%bd%d1%83%d1%8e&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; src
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make -j
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Поместите little_vec.so в каталог плагинов RocksServer (обычно /usr/lib/rocksserver/plugins)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;2-быстрый-старт-с-api&#34;
    &gt;
        2. Быстрый старт с API
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#2-быстрый-старт-с-api&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 2. Быстрый старт с API&#34; href=&#34;#2-%d0%b1%d1%8b%d1%81%d1%82%d1%80%d1%8b%d0%b9-%d1%81%d1%82%d0%b0%d1%80%d1%82-%d1%81-api&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;создание-базы-данных&#34;
    &gt;
        Создание базы данных
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#создание-базы-данных&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Создание базы данных&#34; href=&#34;#%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d0%b5-%d0%b1%d0%b0%d0%b7%d1%8b-%d0%b4%d0%b0%d0%bd%d0%bd%d1%8b%d1%85&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;POST /vecdb/create
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;Content-Type: application/json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;db_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_vectors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;dim&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;dist&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;cos&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;db_name&lt;/code&gt; — имя вашей БД (любая строка)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dim&lt;/code&gt; — размерность векторов&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dist&lt;/code&gt; — метрика: &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;qcos&lt;/code&gt;, &lt;code&gt;dot_prod&lt;/code&gt;, &lt;code&gt;l1&lt;/code&gt;, &lt;code&gt;l2&lt;/code&gt; (опционально)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;добавление-векторов&#34;
    &gt;
        Добавление векторов
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#добавление-векторов&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Добавление векторов&#34; href=&#34;#%d0%b4%d0%be%d0%b1%d0%b0%d0%b2%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%b2%d0%b5%d0%ba%d1%82%d0%be%d1%80%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;POST /vectors/set
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;Content-Type: application/json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;db_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_vectors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vec1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;vector&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;пример&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;поиск-ближайших-векторов&#34;
    &gt;
        Поиск ближайших векторов
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#поиск-ближайших-векторов&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Поиск ближайших векторов&#34; href=&#34;#%d0%bf%d0%be%d0%b8%d1%81%d0%ba-%d0%b1%d0%bb%d0%b8%d0%b6%d0%b0%d0%b9%d1%88%d0%b8%d1%85-%d0%b2%d0%b5%d0%ba%d1%82%d0%be%d1%80%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;POST /vectors/get/nearest
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;Content-Type: application/json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;db_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_vectors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;vector&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;top_k&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ответ:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vec1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;distance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.123&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;payload&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;пример&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;err&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;удаление-векторов&#34;
    &gt;
        Удаление векторов
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#удаление-векторов&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Удаление векторов&#34; href=&#34;#%d1%83%d0%b4%d0%b0%d0%bb%d0%b5%d0%bd%d0%b8%d0%b5-%d0%b2%d0%b5%d0%ba%d1%82%d0%be%d1%80%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;POST /vectors/delete
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;Content-Type: application/json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;db_name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;my_vectors&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vec1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;3-дополнительные-возможности&#34;
    &gt;
        3. Дополнительные возможности
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#3-дополнительные-возможности&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 3. Дополнительные возможности&#34; href=&#34;#3-%d0%b4%d0%be%d0%bf%d0%be%d0%bb%d0%bd%d0%b8%d1%82%d0%b5%d0%bb%d1%8c%d0%bd%d1%8b%d0%b5-%d0%b2%d0%be%d0%b7%d0%bc%d0%be%d0%b6%d0%bd%d0%be%d1%81%d1%82%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Можно создавать несколько независимых векторных баз.&lt;/li&gt;
&lt;li&gt;В каждом запросе указывать свою метрику поиска.&lt;/li&gt;
&lt;li&gt;Хранить произвольный payload для каждого объекта.&lt;/li&gt;
&lt;li&gt;Получать distance между любыми векторами и объектами по id.&lt;/li&gt;
&lt;li&gt;Всё это — по простому HTTP API, легко интегрируется с любым языком.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;заключение&#34;
    &gt;
        Заключение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/06/little-vec/#заключение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Заключение&#34; href=&#34;#%d0%b7%d0%b0%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;LittleVec&lt;/strong&gt; —  минималистичная, быстрая, экономная и надёжная векторная база данных для экспериментов, прототипов или даже небольших production-сервисов.&lt;/p&gt;
&lt;p&gt;Всё открыто, просто и прозрачно — пробуйте, присылайте фидбек и pull requests!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/little-vec&#34;
&gt;GitHub: LittleVec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/little-vec#readme&#34;
&gt;Документация и примеры&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Все вопросы в issue на GitHub!&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" /> 
                                <category scheme="https://valmat.ru/tags/LLM" term="LLM" label="LLM" />
        </entry>
        <entry>
            <title>AI git commit generator</title>
            <link href="https://valmat.ru/posts/2024/02/git-ai/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2024/02/git-ai/</id>
            <published>2024-02-07T12:00:00+03:00</published>
            <updated>2024-02-07T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;В создании коммитов, да и тегов, для гита самое сложное — придумать ёмкое описание, чтобы оно включало все важные аспекты изменений. А ещё это нужно сделать в правильном формате и на грамотном английском.&lt;/p&gt;
&lt;p&gt;Поэтому в какой-то момент я просто взял и сделал bash-утилиты, использующие AI для этих вещей: &lt;strong&gt;gitai&lt;/strong&gt; для коммитов и &lt;strong&gt;gitaitag&lt;/strong&gt; для тегов. О них и расскажу ниже.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;ai-для-коммитов-и-тегов-gitai-и-gitaitag&#34;
    &gt;
        AI для коммитов и тегов: &lt;code&gt;gitai&lt;/code&gt; и &lt;code&gt;gitaitag&lt;/code&gt;
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#ai-для-коммитов-и-тегов-gitai-и-gitaitag&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor AI для коммитов и тегов: gitai и gitaitag&#34; href=&#34;#ai-%d0%b4%d0%bb%d1%8f-%d0%ba%d0%be%d0%bc%d0%bc%d0%b8%d1%82%d0%be%d0%b2-%d0%b8-%d1%82%d0%b5%d0%b3%d0%be%d0%b2-gitai-%d0%b8-gitaitag&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;что-это-такое&#34;
    &gt;
        Что это такое?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#что-это-такое&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Что это такое?&#34; href=&#34;#%d1%87%d1%82%d0%be-%d1%8d%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/44822e1b7c6884bebb25b3ff005117fe&#34;
&gt;gitai&lt;/a&gt; — это bash-скрипт для Linux и macOS, который помогает создавать информативные git commit-сообщения с помощью OpenAI (или совместимых API). Скрипт не только пишет лаконичные заголовки в прошедшем времени и краткое описание изменений, но и добавляет эмодзи, список затронутых файлов и даже проводит AI-код-ревью с подсветкой потенциальных проблем или улучшений — всё на грамотном английском.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/cd64141685f2655c4a02d59902962ca3&#34;
&gt;gitaitag&lt;/a&gt; — похожий bash-скрипт для генерации содержательных сообщений к git-тегам и автоматического подбора следующей версии. Он анализирует все коммиты с прошлого тега, резюмирует изменения, добавляет релевантные эмодзи и оформляет красивое англоязычное описание релиза.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;ключевые-возможности&#34;
    &gt;
        Ключевые возможности
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#ключевые-возможности&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Ключевые возможности&#34; href=&#34;#%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%b2%d1%8b%d0%b5-%d0%b2%d0%be%d0%b7%d0%bc%d0%be%d0%b6%d0%bd%d0%be%d1%81%d1%82%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;gitai&#34;
    &gt;
        &lt;code&gt;gitai&lt;/code&gt;:
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#gitai&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor gitai:&#34; href=&#34;#gitai&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;✨ Генерирует commit-сообщения через OpenAI или совместимый API (можно быстро переключиться на xAI и т.д.)&lt;/li&gt;
&lt;li&gt;🐞 Проводит AI-код-ревью и вставляет комментарии о возможных багах или улучшениях прямо в коммит&lt;/li&gt;
&lt;li&gt;📝 Автоматически резюмирует изменения (diff)&lt;/li&gt;
&lt;li&gt;💬 Украсит сообщение релевантными эмодзи&lt;/li&gt;
&lt;li&gt;📄 Перечисляет изменённые файлы&lt;/li&gt;
&lt;li&gt;💡 Принимает подсказку (hint) для дополнительного контекста&lt;/li&gt;
&lt;li&gt;🏷️ Всегда пишет на английском&lt;/li&gt;
&lt;li&gt;🔒 Не даст закоммитить, если нет подготовленных изменений&lt;/li&gt;
&lt;li&gt;🖊️ Даёт возможность отредактировать сообщение перед коммитом&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;gitaitag&#34;
    &gt;
        &lt;code&gt;gitaitag&lt;/code&gt;:
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#gitaitag&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor gitaitag:&#34; href=&#34;#gitaitag&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;🚀 Использует любой OpenAI-совместимый API для генерации описания тега&lt;/li&gt;
&lt;li&gt;🏷️ Автоматически подбирает следующую версию тега (например, “v1.2.3” → “v1.2.4”)&lt;/li&gt;
&lt;li&gt;✍️ Генерирует подробный changelog по всем коммитам с прошлого тега&lt;/li&gt;
&lt;li&gt;🤖 Добавляет эмодзи и делает сообщение приятным для чтения&lt;/li&gt;
&lt;li&gt;💡 Можно добавить свой hint для более точного описания релиза&lt;/li&gt;
&lt;li&gt;🏷️ Всегда генерирует сообщение на английском&lt;/li&gt;
&lt;li&gt;✏️ Позволяет вручную подправить текст перед созданием тега&lt;/li&gt;
&lt;li&gt;🔒 Не создаёт тег, если нет новых коммитов с прошлого релиза&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;требования&#34;
    &gt;
        Требования
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#требования&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Требования&#34; href=&#34;#%d1%82%d1%80%d0%b5%d0%b1%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Обе утилиты требуют:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ОС:&lt;/strong&gt; Linux или macOS (Windows не поддерживается)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Зависимости:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link--code&#34;
  href=&#34;https://stedolan.github.io/jq/&#34;
&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; (парсинг JSON)&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link--code&#34;
  href=&#34;https://curl.se/&#34;
&gt;&lt;code&gt;curl&lt;/code&gt;&lt;/a&gt; (обычно уже установлен)&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link--code&#34;
  href=&#34;https://www.nano-editor.org/&#34;
&gt;&lt;code&gt;nano&lt;/code&gt;&lt;/a&gt; (или замените на любимый редактор в скрипте)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API-ключ OpenAI:&lt;/strong&gt; переменная окружения &lt;code&gt;$OPENAI_API_KEY&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;установка&#34;
    &gt;
        Установка
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#установка&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Установка&#34; href=&#34;#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Установите зависимости:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Для Debian/Ubuntu и производных&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install jq curl nano
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Для macOS (через Homebrew)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install jq curl nano
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Скачайте скрипты:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gitai:&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -o ~/bin/gitai https://gist.github.com/valmat/44822e1b7c6884bebb25b3ff005117fe/raw/gitai.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod +x ~/bin/gitai
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gitaitag:&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -o ~/bin/gitaitag https://gist.github.com/valmat/cd64141685f2655c4a02d59902962ca3/raw/gitaitag.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod +x ~/bin/gitaitag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Добавьте &lt;code&gt;~/bin&lt;/code&gt; в &lt;code&gt;$PATH&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Добавьте в &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt; или аналогичный файл:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/bin:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Перезапустите терминал или выполните &lt;code&gt;source ~/.bashrc&lt;/code&gt; (или соответствующий файл).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Установите переменную с OpenAI API-ключом:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;OPENAI_API_KEY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;sk-...your key here...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Для удобства добавьте эту строку в настройки вашей оболочки.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;использование&#34;
    &gt;
        Использование
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#использование&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Использование&#34; href=&#34;#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;для-коммитов--gitai&#34;
    &gt;
        Для коммитов — &lt;code&gt;gitai&lt;/code&gt;:
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#для-коммитов--gitai&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Для коммитов — gitai:&#34; href=&#34;#%d0%b4%d0%bb%d1%8f-%d0%ba%d0%be%d0%bc%d0%bc%d0%b8%d1%82%d0%be%d0%b2--gitai&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Перейдите в директорию git-проекта:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /path/to/your/project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Запустите скрипт:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitai
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Скрипт:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;автоматически выполнит &lt;code&gt;git add&lt;/code&gt; для всех изменений,&lt;/li&gt;
&lt;li&gt;сгенерирует commit-сообщение с помощью AI,&lt;/li&gt;
&lt;li&gt;откроет его в редакторе для финального редактирования,&lt;/li&gt;
&lt;li&gt;закоммитит после сохранения.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Опционально) Можно добавить hint для AI:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitai &lt;span class=&#34;s2&#34;&gt;&amp;#34;Fix for production crash on startup&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;для-тегов--gitaitag&#34;
    &gt;
        Для тегов — &lt;code&gt;gitaitag&lt;/code&gt;:
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#для-тегов--gitaitag&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Для тегов — gitaitag:&#34; href=&#34;#%d0%b4%d0%bb%d1%8f-%d1%82%d0%b5%d0%b3%d0%be%d0%b2--gitaitag&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Перейдите в директорию git-проекта:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /path/to/your/project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Запустите скрипт:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitaitag
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Скрипт:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;найдет последний тег и предложит следующий (например, “v1.2.3” → “v1.2.4”),&lt;/li&gt;
&lt;li&gt;проанализирует все коммиты после прошлого тега,&lt;/li&gt;
&lt;li&gt;сгенерирует AI-описание релиза с эмодзи,&lt;/li&gt;
&lt;li&gt;откроет его в редакторе для вашего финального взгляда,&lt;/li&gt;
&lt;li&gt;создаст аннотированный тег с этим сообщением.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Опционально) Можно добавить hint для AI:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitaitag &lt;span class=&#34;s2&#34;&gt;&amp;#34;Major refactor and new API integration&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;примечания&#34;
    &gt;
        Примечания
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#примечания&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Примечания&#34; href=&#34;#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%87%d0%b0%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Скрипты не поддерживают Windows.&lt;/li&gt;
&lt;li&gt;Редактор по умолчанию — &lt;code&gt;nano&lt;/code&gt;, можно заменить в скрипте на любой другой.&lt;/li&gt;
&lt;li&gt;Если нет изменений (для &lt;code&gt;gitai&lt;/code&gt;) или новых коммитов с прошлого тега (для &lt;code&gt;gitaitag&lt;/code&gt;), скрипты не будут ничего делать.&lt;/li&gt;
&lt;li&gt;Каждый запрос к AI учитывается в биллинге вашего провайдера.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;примеры&#34;
    &gt;
        Примеры
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#примеры&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Примеры&#34; href=&#34;#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%80%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Обычный коммит с помощью AI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitai
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Коммит с подсказкой для AI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitai &lt;span class=&#34;s2&#34;&gt;&amp;#34;Refactored backend integration&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Обычное создание тега с описанием через AI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitaitag
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Тег с подсказкой для AI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitaitag &lt;span class=&#34;s2&#34;&gt;&amp;#34;Initial stable version for production&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;ссылки&#34;
    &gt;
        Ссылки
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2024/02/git-ai/#ссылки&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Ссылки&#34; href=&#34;#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/44822e1b7c6884bebb25b3ff005117fe&#34;
&gt;gitai&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/cd64141685f2655c4a02d59902962ca3&#34;
&gt;gitaitag&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/AI" term="AI" label="AI" /> 
                                <category scheme="https://valmat.ru/tags/LLM" term="LLM" label="LLM" />
        </entry>
        <entry>
            <title>Утилиты для извлечения изображений и текста из PDF</title>
            <link href="https://valmat.ru/posts/2023/11/pdf-extract/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2023/11/pdf-extract/</id>
            <published>2023-11-16T12:00:00+03:00</published>
            <updated>2023-11-16T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;В повседневной работе часто возникает задача быстро извлечь изображения или текст из PDF-документов — будь то подготовка презентаций, анализ документов, создание датасетов или автоматизация обработки большого количества файлов. Стандартные графические редакторы или онлайн-сервисы либо требуют ручной работы, либо работают медленно, либо не позволяют автоматизировать процесс.&lt;/p&gt;
&lt;p&gt;Чтобы упростить и ускорить решение этих задач, я написал набор утилит на C++ — &lt;strong&gt;PDF2Images&lt;/strong&gt;. Они позволяют:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Мгновенно извлекать все изображения из PDF-файлов в нужном формате (png, jpg, tiff и др.)&lt;/li&gt;
&lt;li&gt;Получать текст с разбивкой по страницам или в один файл&lt;/li&gt;
&lt;li&gt;Гибко настраивать параметры извлечения: диапазон страниц, формат выходных файлов, разрешение и пр.&lt;/li&gt;
&lt;li&gt;Использовать утилиты в автоматических скриптах и пайплайнах&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Я сам ежедневно использую эти инструменты для подготовки скриншотов и текстовых выборок из PDF, а также для построения RAG (Retrieval-Augmented Generation) — когда нужно быстро получить текстовую базу для дальнейшей работы с LLM.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;установка&#34;
    &gt;
        Установка
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2023/11/pdf-extract/#установка&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Установка&#34; href=&#34;#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Для работы потребуется установленная библиотека poppler:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt install libpoppler-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее клонируем репозиторий:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --recursive https://github.com/valmat/pdf2images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; pdf2images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;или, если без &lt;code&gt;--recursive&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/valmat/pdf2images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; pdf2images
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Переходим в папку &lt;code&gt;src&lt;/code&gt; и собираем проект:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; src
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make release
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Для debug-сборки можно использовать:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make -j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;извлечение-изображений&#34;
    &gt;
        Извлечение изображений
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2023/11/pdf-extract/#извлечение-изображений&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Извлечение изображений&#34; href=&#34;#%d0%b8%d0%b7%d0%b2%d0%bb%d0%b5%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-%d0%b8%d0%b7%d0%be%d0%b1%d1%80%d0%b0%d0%b6%d0%b5%d0%bd%d0%b8%d0%b9&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bin/extract_imgs.bin &amp;lt;input_file.pdf&amp;gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Основные опции:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--input&lt;/code&gt; — путь к PDF-файлу&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--output&lt;/code&gt; — папка для сохранения изображений (по умолчанию &lt;code&gt;.&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;, &lt;code&gt;--ext&lt;/code&gt; — формат изображений (по умолчанию &lt;code&gt;png&lt;/code&gt;, можно &lt;code&gt;jpg&lt;/code&gt;, &lt;code&gt;tiff&lt;/code&gt; и др.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--from&lt;/code&gt; — первая страница для обработки (по умолчанию 1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;--lim&lt;/code&gt; — количество страниц для обработки (по умолчанию нет ограничений)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;, &lt;code&gt;--xres&lt;/code&gt;, &lt;code&gt;-y&lt;/code&gt;, &lt;code&gt;--yres&lt;/code&gt;, &lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--dpi&lt;/code&gt; — разрешение и dpi&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;--gray&lt;/code&gt; — черно-белый режим&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt;, &lt;code&gt;--quiet&lt;/code&gt; — тихий режим (без вывода прогресса)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Пример:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bin/extract_imgs.bin -i mydoc.pdf -o imgs -e jpg -f &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; -l &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Извлечет изображения со 2 по 6 страницу в папку &lt;code&gt;imgs&lt;/code&gt; в формате jpg.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;извлечение-текста&#34;
    &gt;
        Извлечение текста
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2023/11/pdf-extract/#извлечение-текста&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Извлечение текста&#34; href=&#34;#%d0%b8%d0%b7%d0%b2%d0%bb%d0%b5%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-%d1%82%d0%b5%d0%ba%d1%81%d1%82%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bin/extract_txts.bin -i &amp;lt;input_file.pdf&amp;gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Основные опции:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;, &lt;code&gt;--input&lt;/code&gt; — входной PDF (обязательно)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;, &lt;code&gt;--out-dir&lt;/code&gt; — папка для сохранения текстов (по умолчанию &lt;code&gt;./&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O&lt;/code&gt;, &lt;code&gt;--out-file&lt;/code&gt; — имя выходного файла (если указано, все страницы будут в одном файле)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;, &lt;code&gt;--from&lt;/code&gt; — первая страница для извлечения (по умолчанию 1)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;, &lt;code&gt;--limit&lt;/code&gt; — сколько страниц извлекать (по умолчанию без ограничения)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--nopagebreak&lt;/code&gt; — не добавлять разделитель между страницами (актуально при сохранении в один файл)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Пример:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bin/extract_txts.bin -i mydoc.pdf -O all_text.txt -f &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -l &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Извлечет текст с 1 по 10 страницу в файл &lt;code&gt;all_text.txt&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Утилиты распространяются под лицензией MIT, исходники доступны на &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/pdf2images&#34;
&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/useful" term="useful" label="useful" /> 
                                <category scheme="https://valmat.ru/tags/LLM" term="LLM" label="LLM" /> 
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" />
        </entry>
        <entry>
            <title>Получение распределений в задачах регрессии</title>
            <link href="https://valmat.ru/posts/2022/09/regress-distr/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2022/09/regress-distr/</id>
            <published>2022-09-20T12:00:00+03:00</published>
            <updated>2022-09-20T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;Приводится алгоритм нахождения функций распределения в качестве решения задачи регрессии.&lt;/p&gt;
&lt;p&gt;В общем виде задачу регрессии можно сформулировать как восстановление зависимости&lt;br&gt;
$\phi: X \to L_1(\Omega)$,&lt;br&gt;
сопоставляющей элементам некоторого фазового пространства $X$ случайную величину $\xi \in L_1(\Omega)$.&lt;/p&gt;
&lt;p&gt;Классический подход к решению задачи регрессии состоит в нахождении среднего значения $E[\phi(x)]$ для каждого $x \in X$.&lt;/p&gt;
&lt;p&gt;В статье предлагается простой алгоритм оценки распределений случайных величин $\phi(x) \in L_1(\Omega)$.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat&#34;
&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;



  &lt;div class=&#34;gblog-toc gblog-toc__level--6&#34;&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#мотивация&#34;&gt;Мотивация&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#описание-подхода&#34;&gt;Описание подхода&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#постановка-задачи&#34;&gt;Постановка задачи&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#построение-модели&#34;&gt;Построение модели&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#ограничения&#34;&gt;Ограничения&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#итоговый-алгоритм&#34;&gt;Итоговый алгоритм&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#валидация&#34;&gt;Валидация&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#эксперименты&#34;&gt;Эксперименты&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#заключение&#34;&gt;Заключение&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
    &lt;hr /&gt;
  &lt;/div&gt;


&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;мотивация&#34;
    &gt;
        Мотивация
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#мотивация&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Мотивация&#34; href=&#34;#%d0%bc%d0%be%d1%82%d0%b8%d0%b2%d0%b0%d1%86%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В анализе данных значительное место занимают два класса задач — задачи классификации и регрессии.&lt;/p&gt;
&lt;p&gt;Так сложилось, что, хотя эти задачи очень похожи, подход к их решению отличается.&lt;/p&gt;
&lt;p&gt;Большинство алгоритмов решения задач &lt;strong&gt;классификации&lt;/strong&gt; позволяют не просто оценить среднее значение $E[\phi(x)]$ для каждого элемента фазового пространства $X$, но и найти плотность распределения.&lt;/p&gt;
&lt;p&gt;Для задач &lt;strong&gt;регрессии&lt;/strong&gt; обычно находят лишь некоторую числовую оценку $\widehat{\phi(x)}$, которая, чаще всего, является средним значением, но не находят плотность распределения.&lt;/p&gt;
&lt;p&gt;Знание плотности распределения даёт гораздо больше возможностей для принятия решений, чем просто оценка среднего.&lt;/p&gt;
&lt;p&gt;Например, для заданной точки $x \in X$ мы можем:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Оценить уверенность прогноза в каждой конкретной точке.&lt;/li&gt;
&lt;li&gt;Найти не среднее, а наиболее вероятное значение случайной величины. Это особенно актуально, если распределение $\phi(x)$ является мультимодальным.&lt;/li&gt;
&lt;li&gt;Определить доверительный интервал возможных значений оценки $\widehat{\phi(x)}$.&lt;/li&gt;
&lt;li&gt;Вычислить любые характеристики распределения, определяемые конкретной задачей и позволяющие более взвешенно и точно принимать решения на основе прогноза модели.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;описание-подхода&#34;
    &gt;
        Описание подхода
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#описание-подхода&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Описание подхода&#34; href=&#34;#%d0%be%d0%bf%d0%b8%d1%81%d0%b0%d0%bd%d0%b8%d0%b5-%d0%bf%d0%be%d0%b4%d1%85%d0%be%d0%b4%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;постановка-задачи&#34;
    &gt;
        Постановка задачи
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#постановка-задачи&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Постановка задачи&#34; href=&#34;#%d0%bf%d0%be%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d0%b7%d0%b0%d0%b4%d0%b0%d1%87%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Для простоты опишу подход для одномерной задачи регрессии. В многомерном случае подход аналогичен.&lt;/p&gt;
&lt;p&gt;Имеем некоторое фазовое пространство $X$ и закономерность&lt;/p&gt;
&lt;p&gt;$$
\phi: X \to L_1(\Omega, \mathbb{R})
$$&lt;/p&gt;
&lt;p&gt;$\phi$ сопоставляет случайные величины из $L_1(\Omega)$ точкам фазового пространства $X$.&lt;/p&gt;
&lt;p&gt;Таким образом, мы имеем семейство вероятностных мер $\lbrace P_x\rbrace_{x \in X}$, порождаемых закономерностью $\phi$.&lt;/p&gt;
&lt;p&gt;Нам нужно построить модель, порождающую параметрическое семейство вероятностных мер&lt;/p&gt;
&lt;p&gt;$$
\lbrace Q_{x, \theta}\rbrace_{x \in X, \theta \in \Theta}
$$&lt;/p&gt;
&lt;p&gt;и найти оптимальное значение параметра $\theta_0 \in \Theta$, дающее наилучшее, в некотором смысле, приближение реальных распределений $\lbrace P_x\rbrace_{x \in X}$:&lt;/p&gt;
&lt;p&gt;$$
Q_{x, \theta_0} \sim P_x
$$&lt;/p&gt;
&lt;p&gt;При этом мы располагаем выборкой точек $\lbrace(x_i, y_i)\rbrace_{i=1}^N$, порожденной $N$ независимыми испытаниями: $x_i \in X$, $y_i = \phi(x_i)$.&lt;/p&gt;
&lt;p&gt;$y_i \in L_1(\Omega)$ — являются независимыми случайными величинами. $x_i \in X$, в общем случае, случайными величинами могут и не быть.&lt;/p&gt;
&lt;p&gt;Чтобы понять как строить модель, решающую поставленную задачу, посмотрим как она решается в случае задач классификации.&lt;/p&gt;
&lt;p&gt;В приведенной выше постановке задачи единственным отличием задачи классификации от задачи регрессии является то, что для задач классификации вероятностное пространство $L_1(\Omega)$ является дискретным.&lt;/p&gt;
&lt;p&gt;Когда задача моделирования распределения решается для дискретного $L_1(\Omega)$, т.е. для классификации, реальную плотность распределения приближают функциями вида&lt;/p&gt;
&lt;p&gt;$$
\sum_{k=1}^K  \mathbf{1}_{A_k}
$$&lt;/p&gt;
&lt;p&gt;где $A_k \subseteq \Omega$, $\mathbf{1}_{A}$ — характеристическая функция множества $A$.&lt;/p&gt;
&lt;p&gt;Именно так мы и поступим.&lt;/p&gt;
&lt;p&gt;Только для решения задачи регрессии моделировать лучше не плотность, а функцию распределения. На это есть ряд причин.&lt;/p&gt;
&lt;p&gt;Во-первых, использование функции распределения является более робастным, чем использование плотности.&lt;/p&gt;
&lt;p&gt;Во-вторых, плотность распределения должна удовлетворять свойству $\int_{\mathbb{R}} p(t) dt = 1$. Это свойство может быть сложнее удовлетворить при построении модели, чем соответствующее ограничение на функцию распределения:&lt;/p&gt;
&lt;p&gt;$$
\lim\limits_{t \to -\infty}F(t) = 0, \
\lim\limits_{t \to +\infty}F(t) = 1.
$$&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;построение-модели&#34;
    &gt;
        Построение модели
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#построение-модели&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Построение модели&#34; href=&#34;#%d0%bf%d0%be%d1%81%d1%82%d1%80%d0%be%d0%b5%d0%bd%d0%b8%d0%b5-%d0%bc%d0%be%d0%b4%d0%b5%d0%bb%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Вместо привычной для регрессии модели&lt;/p&gt;
&lt;p&gt;$$
M_{\theta}: X \to \mathbb{R}
$$&lt;/p&gt;
&lt;p&gt;и последующего нахождения $\theta$ путём оптимизации, будем строить модель, сразу приближающую функции распределения:&lt;/p&gt;
&lt;p&gt;$$
M_{\theta}: X \to (\mathbb{R} \to [0, 1])
$$&lt;/p&gt;
&lt;p&gt;или, что то же самое:&lt;/p&gt;
&lt;p&gt;$$
M_{\theta}: X \times \mathbb{R} \to [0, 1]
$$&lt;/p&gt;
&lt;p&gt;То есть каждой паре $(x, t)$, $x \in X, t \in \mathbb{R}$, наша модель будет сопоставлять число в интервале $[0, 1]$.&lt;/p&gt;
&lt;p&gt;Например, для нейронных сетей этого легко добиться, поместив сигмоиду последним слоем сети.&lt;/p&gt;
&lt;p&gt;Информация о реальном семействе распределений $\lbrace P_x \rbrace_{x \in X}$, которой мы располагаем, отражена в имеющейся у нас обучающей выборке $\lbrace(x_i, y_i)\rbrace_{i=1}^N$.&lt;/p&gt;
&lt;p&gt;Эта обучающая выборка порождает набор тривиальных функций распределения $\lbrace F_i\rbrace_{i=1}^N$:&lt;/p&gt;
&lt;p&gt;$$
F_i(t) =
\begin{cases}
1, &amp;amp; t \geqslant y_i |\
0, &amp;amp; t &amp;lt; y_i
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;$F_i(t) = 1$, при $t \geqslant y_i$, и $F_i(t) = 0$, при $t &amp;lt; y_i$.&lt;/p&gt;
&lt;p&gt;Чтобы уйти от задачи построения модели, аппроксимирующей выборку функций, к хорошо изученной задаче построения модели, аппроксимирующей выборку точек, перейдем от выборки $\lbrace(x_i, y_i)\rbrace_{i=1}^N$ к выборке&lt;/p&gt;
&lt;p&gt;$$
\bigcup\limits_{i=1}^N \lbrace(x_i, t_j, F_i(t_j))\rbrace_{j \in J_i}
$$&lt;/p&gt;
&lt;p&gt;Для этого для каждого $i = 1&amp;hellip;N$ случайным образом подберём числа $t_j$ для $j \in J_i$ из некоторого диапазона допустимых значений $y$.&lt;/p&gt;
&lt;p&gt;Таким образом, мы снова приходим к классической задаче регрессии, но фазовым пространством для нее будет не исходное пространство $X$, а пространство $X \times Y$, где $Y \subseteq \mathbb{R}$ — множество допустимых значений $y$.&lt;/p&gt;
&lt;p&gt;То есть мы получили обычную задачу регрессии для выборки $\lbrace(z_k, u_k)\rbrace_{k=1}^M$, где&lt;br&gt;
$z_k = (x_l, t_s)$, а $u_k = F_l(t_s) \in [0, 1]$, для некоторых $l$ и $s$.&lt;/p&gt;
&lt;p&gt;Для решения этой задачи можно применить любой алгоритм обучения с учителем из арсенала методов решения задач регрессии.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;ограничения&#34;
    &gt;
        Ограничения
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#ограничения&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Ограничения&#34; href=&#34;#%d0%be%d0%b3%d1%80%d0%b0%d0%bd%d0%b8%d1%87%d0%b5%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Поскольку описанный выше способ моделирует построение функций распределения, наша модель должна удовлетворять некоторым дополнительным ограничениям.&lt;/p&gt;
&lt;p&gt;Пусть&lt;/p&gt;
&lt;p&gt;$$
M_{\theta}: X \times Y \to [0, 1], \theta \in \Theta
$$&lt;/p&gt;
&lt;p&gt;— параметрическое семейство моделей, и $\theta_0$ — оптимальная оценка параметра, дающая приближение реального семейства распределений $\lbrace P_x\rbrace_{x \in X}$, и&lt;/p&gt;
&lt;p&gt;$$
M = \lim\limits_{\theta \to \theta_0, \theta \in \Theta} M_{\theta}
$$&lt;/p&gt;
&lt;p&gt;— итоговая модель.&lt;/p&gt;
&lt;p&gt;Тогда должны быть выполнены требования:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Для каждого $x \in X$ $M(x, \cdot): t \to [0, 1] $ — является функцией некоторого распределения.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;То есть должны быть удовлетворены следующие условия:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;$\lim\limits_{t \to -\infty} M(x ,t) = 0$,&lt;br&gt;
$\lim\limits_{t \to +\infty} M(x ,t) = 1$&lt;/li&gt;
&lt;li&gt;$t_1 \leqslant t_2 \Rightarrow M(x, t_1) \leqslant M(x, t_2)$&lt;/li&gt;
&lt;li&gt;$M(x, t) \in [0, 1],, \forall t \in \mathbb{R}$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Все эти условия, в общем случае, не обязаны выполняться по построению моделей $M_{\theta}$ способом, описанным выше.&lt;/p&gt;
&lt;p&gt;Условие (3) может быть удовлетворено путём наложения ограничений на саму модель. Например, для нейронных сетей можно последним слоем разместить сигмоиду.&lt;/p&gt;
&lt;p&gt;Практика показала, что для правильно построенной модели при достаточном объеме обучающей выборки условия (1) и (2) будут выполнены автоматически. Но эти условия должны быть вынесены на этап валидации в качестве дополнительного обязательного критерия правильности построения модели.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;итоговый-алгоритм&#34;
    &gt;
        Итоговый алгоритм
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#итоговый-алгоритм&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Итоговый алгоритм&#34; href=&#34;#%d0%b8%d1%82%d0%be%d0%b3%d0%be%d0%b2%d1%8b%d0%b9-%d0%b0%d0%bb%d0%b3%d0%be%d1%80%d0%b8%d1%82%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Кратко опишем алгоритм.&lt;/p&gt;
&lt;p&gt;Дана обучающая выборка $\lbrace(x_i, y_i)\rbrace_{i=1}^N$.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Находим диапазон допустимых значений $Y$.&lt;/strong&gt;&lt;br&gt;
Например,
$$
Y = [\min\limits_{i} y_i - a, \max\limits_{i} y_i + a],
$$
где $a$ — некоторое число, подбираемое исследователем.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Для каждой пары $(x_i, y_i)$ случайно генерируем набор точек $\lbrace t_j\rbrace_{j \in J_i} \subseteq Y$.&lt;/strong&gt;&lt;br&gt;
$\lbrace t_j\rbrace$ нужно генерировать так, чтобы было достаточно точек, лежащих левее $y_i$ и достаточно точек, лежащих правее $y_i$.&lt;br&gt;
Можно задать разбиение $\lbrace t_j\rbrace_{j \in J} \subseteq Y$ одинаковое для всех $i$, но тогда мы теряем разнообразие обучающей выборки в тех случаях, когда $(x_i, y_i)$ и $(x_k, y_k)$ — близкие, но не совпадающие точки.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;После того, как точки $\lbrace t_j\rbrace_{j \in J_i}$ сгенерированы, генерируем новую обучающую выборку, как объединение выборок:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$$
\bigcup\limits_{i=1}^N \lbrace(x_i, t_j, u_{i j})\rbrace_{j \in J_i}
$$&lt;/p&gt;
&lt;p&gt;где&lt;/p&gt;
&lt;p&gt;$$
u_{i j} =
\begin{cases}
1, &amp;amp; t_j \geqslant y_i |\
0, &amp;amp; t_j &amp;lt; y_i
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;$u_{i j} = 1$, при $t_j \geqslant y_i$, и $u_{i j} = 0$, при $t_j &amp;lt; y_i$.&lt;/p&gt;
&lt;p&gt;Для удобства обозначим $z_{i j} = (x_i, t_j)$.&lt;br&gt;
$z_{i j}$ будут лежать в области определения нашей модели, т.е. будут являться признаками, а $u_{i j}$ в области значений, т.е. будут являться таргетами.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Новую полученную выборку лучше случайно перемешать, перед тем как приступать к обучению модели.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Строим модель обучения с учителем на обучающей выборке $\lbrace(z_{i j}, u_{i j})\rbrace$ как для обычной задачи регрессии.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Проводим валидацию модели.&lt;/strong&gt;&lt;br&gt;
В частности, на удовлетворение условия того, что $M(x, t)$ является функцией распределения по $t$ для каждого $x \in X$, т.е. проверяем (1), (2), (3).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;валидация&#34;
    &gt;
        Валидация
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#валидация&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Валидация&#34; href=&#34;#%d0%b2%d0%b0%d0%bb%d0%b8%d0%b4%d0%b0%d1%86%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Как и для обычных задач регрессии, невозможно дать какие-то универсальные критерии оценки качества построения модели. Но можно дать несколько рекомендаций, позволяющих оценить это качество.&lt;/p&gt;
&lt;p&gt;В любом случае, модель $M(x, t)$ должна быть функцией распределения по $t$ для всех $x \in X$. Если ограничения (1), (2), (3) не выполнены для $M(x, \cdot)$, то такую модель следует отвергнуть как некачественную.&lt;/p&gt;
&lt;p&gt;Сам алгоритм по построению является обычной задачей регрессии. И к его результатам применимы все метрики качества, применяемые к задачам регрессии.&lt;/p&gt;
&lt;p&gt;Для получения этих метрик тестовую выборку $\lbrace(x_i, y_i)\rbrace$ нужно привести к виду $\lbrace(z_{i j}, u_{i j})\rbrace$ тем же способом, что и обучающую.&lt;/p&gt;
&lt;p&gt;Кроме того, мы можем перейти на уровень исходных данных и для каждой $x_i$ из тестовой выборки посчитать среднее значение $\widehat{y_i}$ как&lt;/p&gt;
&lt;p&gt;$$
\widehat{y_i} = \int\limits_{t \in Y} t, dM(x_i, t)
$$&lt;/p&gt;
&lt;p&gt;Таким образом, мы можем оценивать качество модели так, как если бы мы не строили распределения, а решали обычную задачу регрессии.&lt;/p&gt;
&lt;p&gt;Замечу, что в некоторых случаях вместо оценки среднего $\widehat{y}$ более уместным будет оценивать наиболее вероятное значение $y$:&lt;/p&gt;
&lt;p&gt;$$
\widehat{y_i} =
\arg\max \limits_{t \in Y}
\frac{\partial M(x_i, t)}{\partial t}
$$&lt;/p&gt;
&lt;p&gt;В целом, подход с моделированием распределений вместо моделирования значений даёт не меньше, а даже больше способов оценки качества модели.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;эксперименты&#34;
    &gt;
        Эксперименты
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#эксперименты&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Эксперименты&#34; href=&#34;#%d1%8d%d0%ba%d1%81%d0%bf%d0%b5%d1%80%d0%b8%d0%bc%d0%b5%d0%bd%d1%82%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В качестве базовой закономерности возьмём функцию&lt;/p&gt;
&lt;p&gt;$$
f(x) = 1 - x^2 + \frac{3}{2} x - \sin(2 \pi x^2)
$$&lt;/p&gt;
&lt;p&gt;на отрезке $x \in [0, 1]$.&lt;/p&gt;
&lt;p&gt;Моделируем&lt;br&gt;
&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/regress_distr/blob/master/experements.ipynb&#34;
&gt;Исходный код экспериментов&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Закономерность определяется выражением выше плюс нормальный шум $\mathcal{N}(f(x), \sigma(x))$, где&lt;/p&gt;
&lt;p&gt;$$
\sigma(x) = 0.05 + \frac{x}{2}
$$&lt;/p&gt;
&lt;p&gt;То есть для каждой точки $x \in [0, 1]$ нашего фазового пространства значения соответствующей случайной величины, определяемой моделируемой закономерностью, распределены по закону:&lt;/p&gt;
&lt;p&gt;$$
\mathcal{N}(f(x), \sigma(x))
$$&lt;/p&gt;
&lt;p&gt;&lt;em&gt;На рисунках ниже:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(a) моделируемая закономерность&lt;/li&gt;
&lt;li&gt;(b) решение обычной задачи регрессии&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img
  src=&#34;ex1_pic2.png&#34;
  alt=&#34;Моделируемая закономерность и решение обычной задачи регрессии&#34;
  
/&gt;
&lt;img
  src=&#34;ex1_pic4.png&#34;
  alt=&#34;Функция распределения и плотность распределения&#34;
  
/&gt;
&lt;img
  src=&#34;ex1_pic6.png&#34;
  alt=&#34;Средние и наиболее вероятные значения, модельная функция распределения $F(x, y)$&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Все функции распределения для всех точек:
&lt;img
  src=&#34;ex1_pic7.png&#34;
  alt=&#34;Полная функция распределения&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Если решать обычную задачу регрессии с помощью нейронной сети, то можно увидеть, что выдаваемые моделью ответы будут довольно хорошо ложиться на средние значения, как это и ожидалось.&lt;/p&gt;
&lt;p&gt;Нахождение распределений методом, описанным в настоящей статье, тоже даёт хорошие результаты.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;заключение&#34;
    &gt;
        Заключение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/09/regress-distr/#заключение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Заключение&#34; href=&#34;#%d0%b7%d0%b0%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;На практике, при достаточном объеме обучающей выборки, непрерывные алгоритмы машинного обучения, такие как нейронные сети, дают хорошее приближение для функций распределения.&lt;/p&gt;
&lt;p&gt;В обучающей выборке могут быть образцы с близкими значениями признака $x$, но различными значениями таргета $y$. Все они вносят вклад в обучение функций распределения.&lt;/p&gt;
&lt;p&gt;Эксперименты и практический опыт показывают, что ограничения, накладываемые на функцию распределения, удовлетворяются.&lt;/p&gt;
&lt;p&gt;Прогнозирование распределений вместо прогнозирования средних значений даёт намного более богатые возможности для принятия решений.&lt;/p&gt;
&lt;p&gt;Моделирование распределений вместо моделирования значений требует меньше дополнительных и часто невыполнимых ограничений.&lt;/p&gt;
&lt;p&gt;Например, если рассмотреть решение одной и той же задачи моделированием распределений&lt;br&gt;
$M_{\theta}(x, t) \in [0, 1]$ и моделированием значений $R_{\theta}(x) \in \mathbb{R}$, то применение МНК, то есть MSE в качестве функции потерь, для $R_{\theta}(x)$ равносильно предположению&lt;/p&gt;
&lt;p&gt;$$
M_{\theta}(x, t) \sim \mathcal{N}(t , \widehat{y}, \sigma)
$$&lt;/p&gt;
&lt;p&gt;что, чаще всего, неверно.&lt;/p&gt;
&lt;p&gt;Конечно, для нахождения оптимальной модели $M_{\theta_0}(x, t)$ мы тоже вынуждены сделать некоторое предположение на вид распределения ошибки $M_{\theta_0}(x, t) - \widehat{u}$  но это предположение ограничивает нас менее жёстко.&lt;/p&gt;
&lt;p&gt;Платой за преимущества, даваемые моделью, предсказывающей распределения, является необходимость обучать более ёмкую модель. А следовательно, более медленная скорость сходимости по сравнению с классическим подходом.&lt;/p&gt;
&lt;p&gt;Действительно, нам нужно выучить не просто среднее, но и дополнительную информацию о форме распределения.&lt;/p&gt;
&lt;p&gt;Кроме того, мы вынуждены искусственно увеличить объём обучающей выборки, выполняя пополнение её таким образом, как это было описано выше.&lt;/p&gt;
&lt;p&gt;Это дополнительно приводит к замедлению обучения и требует больше вычислительных ресурсов.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/AI" term="AI" label="AI" /> 
                                <category scheme="https://valmat.ru/tags/algo" term="algo" label="algo" />
        </entry>
        <entry>
            <title>Бенчмарк энтропий Шеннона и Реньи на C&#43;&#43;</title>
            <link href="https://valmat.ru/posts/2022/02/entropy-benchmark/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2022/02/entropy-benchmark/</id>
            <published>2022-02-08T12:00:00+03:00</published>
            <updated>2022-02-08T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;Решил сравнить как различные показатели энтропии Реньи влияют на производительность в плане вычислений.&lt;/p&gt;
&lt;p&gt;В реальных задачах часто возникает необходимость быстро и эффективно вычислять энтропию для большого количества данных.&lt;/p&gt;
&lt;p&gt;Для этого важно понимать, как различные показатели энтропиивлияют на время выполнения.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/valmat/6a737cc3783449c4f7a829e77c77393e.js&#34;&gt;&lt;/script&gt;


            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" />
        </entry>
        <entry>
            <title>Определение угла наклона текста на сканированных изображениях</title>
            <link href="https://valmat.ru/posts/2022/02/slope-detection/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2022/02/slope-detection/</id>
            <published>2022-02-08T12:00:00+03:00</published>
            <updated>2022-02-08T12:00:00+03:00</updated>
            <content type="html">
                &lt;p&gt;При оптическом распознавании текста на сканированных документах качество распознавания зависит от того, наклонён ли текст в документе. У выровненных документов качество распознавания заметно лучше. Соответственно, возникает практическая необходимость в средствах автоматического выравнивания угла наклона текста.&lt;/p&gt;
&lt;p&gt;В статье предлагается простой, универсальный и достаточно эффективный алгоритм выравнивания наклона текста, основанный на идее минимизации средней энтропии строк и столбцов растрового изображения.&lt;/p&gt;
&lt;hr&gt;



  &lt;div class=&#34;gblog-toc gblog-toc__level--6&#34;&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#идея&#34;&gt;Идея&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#эксперимент&#34;&gt;Эксперимент&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#алгоритм&#34;&gt;Алгоритм&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#ссылки&#34;&gt;Ссылки&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
    &lt;hr /&gt;
  &lt;/div&gt;


&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;идея&#34;
    &gt;
        Идея
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/02/slope-detection/#идея&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Идея&#34; href=&#34;#%d0%b8%d0%b4%d0%b5%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Базовая идея алгоритма состоит в том, что при повороте текста на сканированном изображении средняя, по строкам и столбцам, энтропия распределения пикселей должна возрасти.&lt;/p&gt;
&lt;p&gt;Предположим, нам дан чёрно-белый скан изображения. То есть, каждый пиксель может принимать только два значения: 0 или 1. Как известно, энтропия равномерного распределения максимальна. Если изображение повёрнуто, то в среднем, распределение чёрных и белых пикселей по строкам (и столбцам) будет ближе к равномерному, чем у неповёрнутого изображения. У выровненного изображения распределение пикселей в среднем должно быть менее равномерным.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;img_1.png&#34;
  alt=&#34;Пример изображения&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Гипотеза состоит в том, чтобы вычислить среднюю по строкам и столбцам энтропию распределения пикселей для разных углов поворота и найти такой угол, при котором эта усреднённая энтропия примет минимальное значение.&lt;/p&gt;
&lt;p&gt;Для проверки этой гипотезы в интернете был собран набор данных различных видов сканированных изображений, после чего предположения были проверены экспериментально.&lt;/p&gt;
&lt;p&gt;Предложенный подход работает и позволяет абсолютно точно определить угол поворота в 83% случаев и с точностью до 1° — в 98% случаев.&lt;/p&gt;
&lt;p&gt;Хотя, на первый взгляд, энтропия Шеннона хорошо подходит для этой задачи, было бы разумно не ограничиваться только ей, а рассмотреть весь спектр энтропий Реньи. И с учётом полученных результатов, а также вычислительной сложности, выбрать оптимальное значение параметра энтропии Реньи.&lt;/p&gt;
&lt;p&gt;Энтропия Реньи вычисляется по формуле:&lt;/p&gt;
&lt;p&gt;$$
R_{\alpha} = \frac{1}{1-\alpha} \log\left( \sum_{i=1}^{n}p_i^{\alpha} \right),
$$&lt;/p&gt;
&lt;p&gt;где $p_i$ — вероятности, соответствующие распределению (в нашем случае — частоты чёрных и белых пикселей).&lt;/p&gt;
&lt;p&gt;В случае $\alpha = 1$ это превращается в энтропию Шеннона:&lt;/p&gt;
&lt;p&gt;$$
R_{1} = H = - \sum_{i=1}^{n} p_i \log(p_i)
$$&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;эксперимент&#34;
    &gt;
        Эксперимент
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/02/slope-detection/#эксперимент&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Эксперимент&#34; href=&#34;#%d1%8d%d0%ba%d1%81%d0%bf%d0%b5%d1%80%d0%b8%d0%bc%d0%b5%d0%bd%d1%82&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Для проведения эксперимента был собран набор различных документов в сети Интернет. Каждое изображение из набора было повёрнуто на случайный угол в интервале от -45° до 45°, после чего был вычислен угол поворота с помощью предложенного алгоритма.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;img_2.png&#34;
  alt=&#34;Пример повёрнутого изображения&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;В таблице ниже представлены результаты для различных значений параметра энтропии Реньи $\alpha$:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Параметр энтропии Реньи $\alpha$&lt;/th&gt;
          &lt;th&gt;1/8&lt;/th&gt;
          &lt;th&gt;1/4&lt;/th&gt;
          &lt;th&gt;1/2&lt;/th&gt;
          &lt;th&gt;3/4&lt;/th&gt;
          &lt;th&gt;1&lt;/th&gt;
          &lt;th&gt;2&lt;/th&gt;
          &lt;th&gt;5&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Среднее абсолютное отклонение&lt;/td&gt;
          &lt;td&gt;0.498&lt;/td&gt;
          &lt;td&gt;0.299&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.211&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;0.283&lt;/td&gt;
          &lt;td&gt;0.240&lt;/td&gt;
          &lt;td&gt;5.827&lt;/td&gt;
          &lt;td&gt;41.099&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Доля полных совпадений (точность)&lt;/td&gt;
          &lt;td&gt;0.822&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.834&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;0.828&lt;/td&gt;
          &lt;td&gt;0.815&lt;/td&gt;
          &lt;td&gt;0.805&lt;/td&gt;
          &lt;td&gt;0.641&lt;/td&gt;
          &lt;td&gt;0.009&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Доля совпадений с точностью до 1°&lt;/td&gt;
          &lt;td&gt;0.942&lt;/td&gt;
          &lt;td&gt;0.969&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.980&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.982&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.983&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;0.822&lt;/td&gt;
          &lt;td&gt;0.015&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Доля совпадений с точностью до 2°&lt;/td&gt;
          &lt;td&gt;0.967&lt;/td&gt;
          &lt;td&gt;0.983&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.991&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.993&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;&lt;strong&gt;0.994&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;0.841&lt;/td&gt;
          &lt;td&gt;0.015&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Всего было обработано 1665 документов.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Выводы из таблицы:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Наименьшее среднее абсолютное отклонение достигается при $\alpha = \frac{1}{2}$.&lt;/li&gt;
&lt;li&gt;Наилучшая точность (доля полных совпадений) — при $\alpha = \frac{1}{4}$.&lt;/li&gt;
&lt;li&gt;Наилучшая приемлемая точность (доля совпадений с точностью до 1° и до 2°) — при $\alpha \in {1, \frac{3}{4}, \frac{1}{2}}$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Если рассматривать методику как часть комплекса оптического распознавания документов, то наилучшим значением оказывается $\alpha = \frac{1}{2}$.&lt;/p&gt;
&lt;p&gt;При $\alpha = \frac{1}{2}$ среднее абсолютное отклонение составит всего $0.211^\circ$. При этом достигается оптимальная доля совпадений с точностью до 1°.&lt;/p&gt;
&lt;p&gt;Есть ещё одна причина выбрать $\alpha = \frac{1}{2}$: при этом значении достигается оптимальная вычислительная сложность.&lt;/p&gt;
&lt;p&gt;Ниже представлены результаты бенчмарка многократного вычисления энтропий для различных значений параметра $\alpha$:&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;$\alpha$&lt;/th&gt;
          &lt;th&gt;nanoseconds&lt;/th&gt;
          &lt;th&gt;miliseconds&lt;/th&gt;
          &lt;th&gt;% of Shannon&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;10249895206&lt;/td&gt;
          &lt;td&gt;10249&lt;/td&gt;
          &lt;td&gt;100&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1/2&lt;/td&gt;
          &lt;td&gt;8677368472&lt;/td&gt;
          &lt;td&gt;8677&lt;/td&gt;
          &lt;td&gt;84.66&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1/4&lt;/td&gt;
          &lt;td&gt;10421639934&lt;/td&gt;
          &lt;td&gt;10421&lt;/td&gt;
          &lt;td&gt;120.1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1/8&lt;/td&gt;
          &lt;td&gt;13235709810&lt;/td&gt;
          &lt;td&gt;13235&lt;/td&gt;
          &lt;td&gt;127&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3/4&lt;/td&gt;
          &lt;td&gt;11403406522&lt;/td&gt;
          &lt;td&gt;11403&lt;/td&gt;
          &lt;td&gt;86.16&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;7245386547&lt;/td&gt;
          &lt;td&gt;7245&lt;/td&gt;
          &lt;td&gt;63.54&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;7771674801&lt;/td&gt;
          &lt;td&gt;7771&lt;/td&gt;
          &lt;td&gt;107.26&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;10809162384&lt;/td&gt;
          &lt;td&gt;10809&lt;/td&gt;
          &lt;td&gt;139.08&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Из таблицы видно, что среди подходящих значений $\alpha$ наилучшая производительность достигается при $\alpha = 1/2$.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;алгоритм&#34;
    &gt;
        Алгоритм
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/02/slope-detection/#алгоритм&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Алгоритм&#34; href=&#34;#%d0%b0%d0%bb%d0%b3%d0%be%d1%80%d0%b8%d1%82%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Замечание:&lt;/strong&gt;&lt;br&gt;
Предлагаемый ниже алгоритм (&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/rotate_detection&#34;
&gt;исходный код на GitHub&lt;/a&gt;) предполагает, что для определения угла поворота мы используем бинарное чёрно-белое растровое изображение, в котором каждый пиксель может принимать два значения: 0 или 1.&lt;/p&gt;
&lt;p&gt;Для применения алгоритма необходимо получить бинаризованную копию изображения.&lt;/p&gt;
&lt;p&gt;Я реализовал алгоритм с применением библиотеки &lt;em&gt;libleptonica&lt;/em&gt; (используется в TesseractOCR). Для этого использовал последовательное преобразование &lt;code&gt;pixContrastTRC&lt;/code&gt; с &lt;code&gt;contrast_factor = 1.0&lt;/code&gt; и затем &lt;code&gt;pixConvertTo1&lt;/code&gt; с &lt;code&gt;threshold = 170&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Пусть $h$ — высота, $w$ — ширина исходного изображения. Пусть $d = \sqrt{w^2 + h^2}$ — длина диагонали.&lt;/p&gt;
&lt;p&gt;Будем поворачивать изображение на угол $\phi$ относительно центра изображения и считать среднюю энтропию по строкам и столбцам. Чтобы не выйти за границы, мысленно расширим полотно до размеров $d \times d$.&lt;/p&gt;
&lt;p&gt;Определим:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$x_{from} = \frac{d}{2} - \frac{h |\sin(\phi)| + w |\cos(\phi)|}{2}$,&lt;/li&gt;
&lt;li&gt;$x_{to}   = d - x_{from}$,&lt;/li&gt;
&lt;li&gt;$y_{from} = \frac{d}{2} - \frac{h |\cos(\phi)| + w |\sin(\phi)|}{2}$,&lt;/li&gt;
&lt;li&gt;$y_{to}   = d - y_{from}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;где $x_{from}$ и $x_{to}$ — границы по ширине, $y_{from}$ и $y_{to}$ — по высоте.&lt;/p&gt;
&lt;p&gt;Нужно посчитать среднюю энтропию по строкам (и аналогично по столбцам).&lt;/p&gt;
&lt;p&gt;Пусть $V(x, y)$ — цвет пикселя $(x, y)$ (0 или 1), $R({p, q})$ — энтропия распределения ${p, q}$.&lt;/p&gt;
&lt;p&gt;Алгоритм расчёта средней энтропии $S_{\phi}$ для угла $\phi$ (по строкам):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-pseudo&#34; data-lang=&#34;pseudo&#34;&gt;S_phi = 0
for y in y_from .. y_to:
    b = 0  // количество чёрных пикселей в строке
    for x in x_from .. x_to:
        x_tilde = x - d/2
        y_tilde = y - d/2
        x&amp;#39; = x_tilde * cos(phi) - y_tilde * sin(phi) + w/2
        y&amp;#39; = x_tilde * sin(phi) + y_tilde * cos(phi) + h/2
        if x&amp;#39; &amp;gt;= 0 and x&amp;#39; &amp;lt; w and y&amp;#39; &amp;gt;= 0 and y&amp;#39; &amp;lt; h:
            b = b + V(x&amp;#39;, y&amp;#39;)
    p = b / d
    q = 1 - p
    S_phi = S_phi + R({p, q}) / d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Полученное значение $S_\phi$ — средняя энтропия для угла поворота $\phi$.&lt;/p&gt;
&lt;p&gt;Для нахождения искомого угла поворота $\phi_0$ нужно найти минимум $S_\phi$:&lt;/p&gt;
&lt;p&gt;$$
\phi_0 = -\arg\min_\phi S_\phi
$$&lt;/p&gt;
&lt;p&gt;Знак минус берётся потому, что для выравнивания изображения нужно повернуть его в обратную сторону.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;ссылки&#34;
    &gt;
        Ссылки
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2022/02/slope-detection/#ссылки&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Ссылки&#34; href=&#34;#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://ru.wikipedia.org/wiki/%d0%ad%d0%bd%d1%82%d1%80%d0%be%d0%bf%d0%b8%d1%8f_%d0%a0%d0%b5%d0%bd%d1%8c%d0%b8&#34;
&gt;WikiPedia: Энтропия Реньи (ru)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/rotate_detection&#34;
&gt;Исходный код алгоритма на GitHub (C++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/6a737cc3783449c4f7a829e77c77393e&#34;
&gt;Исходный код бенчмарка производительности энтропий на C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;/posts/2022/02/entropy-benchmark/&#34;
&gt;Бенчмарк производительности энтропий&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" /> 
                                <category scheme="https://valmat.ru/tags/AI" term="AI" label="AI" /> 
                                <category scheme="https://valmat.ru/tags/algo" term="algo" label="algo" />
        </entry>
        <entry>
            <title>Получение целочисленного типа по его длине</title>
            <link href="https://valmat.ru/posts/2021/09/cpp-int-by-size/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/2021/09/cpp-int-by-size/</id>
            <published>2019-09-12T12:00:00+03:00</published>
            <updated>2019-09-12T12:00:00+03:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;простой-способ-получить-целочисленный-тип-по-его-длине&#34;
    &gt;
        Простой способ получить целочисленный тип по его длине
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/2021/09/cpp-int-by-size/#простой-способ-получить-целочисленный-тип-по-его-длине&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Простой способ получить целочисленный тип по его длине&#34; href=&#34;#%d0%bf%d1%80%d0%be%d1%81%d1%82%d0%be%d0%b9-%d1%81%d0%bf%d0%be%d1%81%d0%be%d0%b1-%d0%bf%d0%be%d0%bb%d1%83%d1%87%d0%b8%d1%82%d1%8c-%d1%86%d0%b5%d0%bb%d0%be%d1%87%d0%b8%d1%81%d0%bb%d0%b5%d0%bd%d0%bd%d1%8b%d0%b9-%d1%82%d0%b8%d0%bf-%d0%bf%d0%be-%d0%b5%d0%b3%d0%be-%d0%b4%d0%bb%d0%b8%d0%bd%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;script src=&#34;https://gist.github.com/valmat/9c3d3c14fa7695b35e56086be9140475.js&#34;&gt;&lt;/script&gt;


            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" />
        </entry>
        <entry>
            <title>Пробуем контрактное программирование С&#43;&#43;20 уже сейчас</title>
            <link href="https://valmat.ru/posts/archive/2019/03/cpp-contracts/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2019/03/cpp-contracts/</id>
            <published>2019-03-14T12:00:00+03:00</published>
            <updated>2019-03-14T12:00:00+03:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;пробуем-контрактное-программирование-с20-уже-сейчас&#34;
    &gt;
        Пробуем контрактное программирование С++20 уже сейчас
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#пробуем-контрактное-программирование-с20-уже-сейчас&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Пробуем контрактное программирование С&amp;#43;&amp;#43;20 уже сейчас&#34; href=&#34;#%d0%bf%d1%80%d0%be%d0%b1%d1%83%d0%b5%d0%bc-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%bd%d0%be%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-%d1%8120-%d1%83%d0%b6%d0%b5-%d1%81%d0%b5%d0%b9%d1%87%d0%b0%d1%81&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img
  src=&#34;pic.png&#34;
  alt=&#34;&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;В С++20 появилось контрактное программирование. На текущий момент ни один компилятор ещё не реализовал поддержку этой возможности.&lt;/p&gt;
&lt;p&gt;Но есть способ уже сейчас попробовать использовать контракты из C++20, так как это описано в стандарте.
&lt;cut text=&#34;Заинтересовавшихся прошу под кат&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;tldr&#34;
    &gt;
        TL;DR
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#tldr&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor TL;DR&#34; href=&#34;#tldr&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Есть форк clang, поддерживающий контракты. На его примере я рассказываю как пользоваться контрактами, чтобы как только фича появилась в вашем любимом компиляторе, вы сразу же могли начать её использовать.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Про контрактное программирование уже написано много, но в двух словах расскажу что это такое и для чего нужно.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;логика-хоара&#34;
    &gt;
        Логика Хоара
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#логика-хоара&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Логика Хоара&#34; href=&#34;#%d0%bb%d0%be%d0%b3%d0%b8%d0%ba%d0%b0-%d1%85%d0%be%d0%b0%d1%80%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В основе парадигмы контрактов лежит логика Хоара (&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://ru.wikipedia.org/wiki/%D0%9B%D0%BE%D0%B3%D0%B8%D0%BA%D0%B0_%D0%A5%D0%BE%D0%B0%D1%80%D0%B0&#34;
&gt;1&lt;/a&gt;, &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://habr.com/ru/post/268013/&#34;
&gt;2&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Логика Хоара – это способ формального доказательства корректности алгоритма.
Она оперирует такими понятиями, как предусловие, постусловие и инвариант.
С практической точки зрения, использование логики  Хоара это, во-первых, способ формального доказательства корректности программы в тех случаях, когда ошибки могут привести к катастрофе или гибели людей. Во-вторых, способ повысить надёжность программы, наряду со статическим анализом и тестированием.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;контрактное-программирование&#34;
    &gt;
        Контрактное программирование
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#контрактное-программирование&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Контрактное программирование&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%bd%d0%be%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;(&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BD%D1%82%D1%80%D0%B0%D0%BA%D1%82%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5&#34;
&gt;1&lt;/a&gt;, &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://habr.com/ru/post/38612/&#34;
&gt;2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Основная идея контрактов в том, что по аналогии с контрактами в бизнесе, для каждой функции или метода описываются договорённости. Эти договорённости должны соблюдать как вызывающая сторона, так и вызываемая.
Неотъемлемой частью контрактов является как минимум два режима сборки – отладочный и продуктовый. В зависимости от режима сборки контракты должны себя вести по разному. Наиболее распространённой практикой является проверка контрактов в отладочной сборке и их игнорирование в продуктовой.&lt;/p&gt;
&lt;p&gt;Иногда в продуктовой сборке контракты тоже проверяются и их невыполнение может, например, вести к генерации исключения.&lt;/p&gt;
&lt;p&gt;Основное отличие использования контрактов от «классического» подхода в том, что вызывающая сторона должна соблюдать предусловия вызываемой стороны, которые описываются в контракте, а вызываемая должна соблюдать свои постусловия и инварианты.
Соответственно, вызываемая сторона не обязана проверять корректность передаваемых её параметров. Эта обязанность возлагается контрактом на вызывающую сторону.&lt;/p&gt;
&lt;p&gt;Несоблюдение контрактов должно быть обнаружено на этапе тестирования и дополняет все виды тестов: модульные интеграционные и т. д.&lt;/p&gt;
&lt;p&gt;На первый взгляд, использование контрактов ведёт к усложнению разработки и ухудшает читаемость кода. На самом деле, всё как раз наоборот. Приверженцам статической типизации будет проще всего оценить пользу контрактов, потому что простейшим их вариантом является описание типов  в сигнатуре методов и функций.&lt;/p&gt;
&lt;p&gt;Итак, какую пользу дают контракты:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Улучшают читаемость кода за счёт явного документирования.&lt;/li&gt;
&lt;li&gt;Повышают надёжность кода, дополняя собой тестирование.&lt;/li&gt;
&lt;li&gt;Позволяют компиляторам использовать низкоуровневые оптимизации и генерировать более быстрый код в расчёте на соблюдение контракта. В последнем случае несоблюдение контракта в релизной сборке может вести к UB.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;контрактное-программирование-в-c&#34;
    &gt;
        Контрактное программирование в C++
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#контрактное-программирование-в-c&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Контрактное программирование в C&amp;#43;&amp;#43;&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%bd%d0%be%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-%d0%b2-c&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Контрактное программирование реализовано во многих языках. Наиболее яркие примеры, это &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://www.eiffel.org/doc/eiffel/ET-_Design_by_Contract_%28tm%29%2C_Assertions_and_Exceptions&#34;
&gt;Eiffel&lt;/a&gt;, где парадигма была впервые реализована, и &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://dlang.org/spec/contracts.html&#34;
&gt;D&lt;/a&gt;, в D контракты являются частью языка.&lt;/p&gt;
&lt;p&gt;В C++, до стандарта C++20, контракты можно было использовать в виде отдельных библиотек.&lt;/p&gt;
&lt;p&gt;Такой подход имеет ряд недостатков:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Весьма неуклюжий синтаксис с использованием макросов.&lt;/li&gt;
&lt;li&gt;Отсутствие единого стиля.&lt;/li&gt;
&lt;li&gt;Невозможность использования контрактов компилятором для оптимизации кода.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В основе библиотечных реализаций обычно лежит использование старого доброго assert&amp;rsquo;а и препроцессорных директив, проверяющих наличие флага компиляции.&lt;/p&gt;
&lt;p&gt;Использование контрактов в таком виде, действительно делает код уродливым и нечитаемым. Это одна из причин, почему использование контрактов в C++ мало практикуется.&lt;/p&gt;
&lt;p&gt;Забегая вперёд, покажу как в C++20 будет выглядеть использование контрактов.
А затем, разберём всё это подробнее:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: x &amp;gt; 0 ]]&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// precondition
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: y &amp;gt; 0 ]]&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// precondition
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ ensures r: r &amp;lt; x + y ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// postcondition
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ assert: z &amp;gt;= 0 ]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// assertion
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;пробуем&#34;
    &gt;
        Пробуем
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#пробуем&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Пробуем&#34; href=&#34;#%d0%bf%d1%80%d0%be%d0%b1%d1%83%d0%b5%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;К сожалению, на текущий момент ни один из широко используемых компиляторов ещё не реализовал поддержку контрактов.
Но есть выход.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;ARCOS research group&lt;/em&gt; из &lt;em&gt;Universidad Carlos III de Madrid&lt;/em&gt; реализовали экспериментальную поддержку контрактов в форке clang++.&lt;/p&gt;
&lt;p&gt;Чтобы не «писать код на бумажке», а иметь возможность сразу же попробовать новые возможности в деле, мы можем собрать этот форк и с его помощью пробовать приводимые ниже примеры.&lt;/p&gt;
&lt;p&gt;Инструкция по сборке описана в readme репозитория на Гитхабе
&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/arcosuc3m/clang-contracts&#34;
&gt;https://github.com/arcosuc3m/clang-contracts&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/arcosuc3m/clang-contracts/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p clang-contracts/build/ &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; clang-contracts/build/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cmake -G &lt;span class=&#34;s2&#34;&gt;&amp;#34;Unix Makefiles&amp;#34;&lt;/span&gt; -DLLVM_USE_LINKER&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;gold -DBUILD_SHARED_LIBS&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ON -DLLVM_USE_SPLIT_DWARF&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ON  -DLLVM_OPTIMIZED_TABLEGEN&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ON ../
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make -j8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;У меня не возникло проблем при сборке, но компиляция исходников занимает очень много времени.&lt;/p&gt;
&lt;p&gt;Для компиляции примеров вам нужно будет явно указать путь к бинарнику clang++.
Например, у меня это выглядит примерно так&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/home/valmat/work/git/clang-contracts/build/bin/clang++ -std&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;c++2a -build-level&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;audit -g test.cpp -o test.bin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Я подготовил примеры, чтобы вам было удобно исследовать контракты на примерах реального кода. Предлагаю, прежде чем приступить к чению следующего раздела, склонировать и скомпилировать примеры.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/valmat/cpp20-contracts-examples/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; cpp20-contracts-examples
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make &lt;span class=&#34;nv&#34;&gt;CPP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/path/to/clang++
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь &lt;code&gt;/path/to/clang++&lt;/code&gt; путь к бинарнику &lt;code&gt;clang++&lt;/code&gt; вашей сборки экспериментального компилятора.&lt;/p&gt;
&lt;p&gt;Кроме самого компилятора, ARCOS research group подготовили свою версию &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://fragata.arcos.inf.uc3m.es/&#34;
&gt;Compiler Explorer&lt;/a&gt;  для своего форка.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;контрактное-программирование-в-c20&#34;
    &gt;
        Контрактное программирование в C++20
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#контрактное-программирование-в-c20&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Контрактное программирование в C&amp;#43;&amp;#43;20&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%bd%d0%be%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5-%d0%b2-c20&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Теперь ничего не мешает нам приступить к исследованию возможностей, которые даёт контрактное программирование, и сразу пробовать эти возможности в деле.&lt;/p&gt;
&lt;p&gt;Как уже было сказано выше, контракты строятся из предусловий, постусловий и инвариантов (утверждений).&lt;/p&gt;
&lt;p&gt;В C++20 для этого используются атрибуты со следующим синтаксисом&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;[[contract-attribute modifier identifier: conditional-expression]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Где &lt;code&gt;contract-attribute&lt;/code&gt; может принимать одно из следующих значений:
&lt;strong&gt;expects&lt;/strong&gt;, &lt;strong&gt;ensures&lt;/strong&gt; или &lt;strong&gt;assert&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;expects&lt;/code&gt; используется для предусловий, &lt;code&gt;ensures&lt;/code&gt; для постусловий и &lt;code&gt;assert&lt;/code&gt; для утверждений.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;conditional-expression&lt;/code&gt; – это булево выражение, проверяемый в контракте предикат.
&lt;code&gt;modifier&lt;/code&gt; и &lt;code&gt;identifier&lt;/code&gt; могут быть опущены.&lt;/p&gt;
&lt;p&gt;Зачем нужен &lt;code&gt;modifier&lt;/code&gt; я напишу чуть ниже.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;identifier&lt;/code&gt; используется только с &lt;code&gt;ensures&lt;/code&gt; и служит для представления возвращаемого значения.&lt;/p&gt;
&lt;p&gt;Предусловия имеют доступ к аргументам.&lt;/p&gt;
&lt;p&gt;Постусловия имеют доступ к возвращаемому функцией значению. Для этого используется синтаксис&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;[[ensures return_variable: expr(return_variable)]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Где &lt;code&gt;return_variable&lt;/code&gt; любое валидное выражение для переменной.&lt;/p&gt;
&lt;p&gt;Другими словами, предусловия предназначены, чтобы объявлять ограничения, накладываемые на принимаемые функцией аргументы, а постусловия для того, чтобы объявлять ограничения, накладываемые на возвращаемое функцией значение.&lt;/p&gt;
&lt;p&gt;Считается, что &lt;em&gt;предусловия&lt;/em&gt; и &lt;em&gt;постусловия&lt;/em&gt; являются частью интерфейса функции, в то время как &lt;em&gt;утверждения&lt;/em&gt; являются частью её реализации.&lt;/p&gt;
&lt;p&gt;Предикаты предусловий всегда вычисляются непосредственно перед выполнением функции. Постусловия выполняются сразу же после передачи функцией управления вызывающему коду.&lt;/p&gt;
&lt;p&gt;Если в функции происходит выброс исключения, то постусловия не будет проверяться.
Постусловия проверяются только в случае нормального завершения функции.&lt;/p&gt;
&lt;p&gt;Если при проверке выражения в контракте возникло ислючение, то будет вызван &lt;code&gt;std::terminate()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Предусловия и постусловия всегда описываются вне тела функции и не могут иметь доступ к локальным переменным.&lt;/p&gt;
&lt;p&gt;Если предусловия и постусловия описывают контракт для публичного метода класса, они не могут иметь доступ к приватным и защищённым полям класса. Если метод класса защищённый, то к защищённым и публичным данным класса доступ есть, а к приватным нет.
Последнее ограничение совершенно логично, если учесть, что контракт является частью интерфейса метода.&lt;/p&gt;
&lt;p&gt;Утверждения (инварианты) всегда описываются в теле функции или метода. По дизайну они являются частью реализации. И, соответственно, могут иметь доступ ко всем доступным данным. В том числе, к локальным переменным функции и приватным и защищённым полям класса.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example1.cpp&#34;
&gt;пример 1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Определим два предусловия, одно постусловие и один инвариант:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: x &amp;gt; y ]]&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// precondition  #1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: y &amp;gt; 0 ]]&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// precondition  #2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ ensures r: r &amp;lt; x ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// postcondition #3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ assert: z &amp;gt;= 0 ]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// assertion
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;117&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;-- contract violation #1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;-- contract violation #2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example2.cpp&#34;
&gt;пример 2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Предусловие публичного метода не может ссылаться на защищённое или приватное поле:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;X&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//protected:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[expects: n &amp;lt; m]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Не допускается модификация переменных внутри выражений, описываемых атрибутами контракта. Если это нарушено, будет UB.&lt;/p&gt;
&lt;p&gt;Выражения, описываемые в контрактах, не должны иметь побочных эффектов. Хотя компиляторы могот это проверять, такая обязанность на них не возлагается. Нарушение этого требования считается неопределённым поведением.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;X&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ expects: n &amp;lt; m++ ]]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// UB: Modifies variable m
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ assert: ++k &amp;lt; 100 ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// UB: Modifies variable k
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Требование не изменять состояние программы в выражениях контрактов станет очевидно чуть ниже, когда я расскажу про уровни модификаторов контрактов и режимы сборки.&lt;/p&gt;
&lt;p&gt;Сейчас просто отмечу, что корректная программа должна работать так же, как если бы контрактов вообще не было.&lt;/p&gt;
&lt;p&gt;Как я отмечал выше, в контракте можно указывать сколько угодно предусловий и постусловий.
Все они будут проверены по порядку. Но  предусловия всегда проверяются до выполнения функции, а постусловия сразу после выхода из неё.&lt;/p&gt;
&lt;p&gt;Это означает, что в первую очередь всегда проверяются предусловия, как проиллюстрировано в следующем примере:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects:   expr(n) ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ ensures r: expr(r) ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # 4
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects:   expr(n) ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects:   expr(n) ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;na&#34;&gt;[[ ensures r: expr(r) ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// # 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{...}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Выражения в постусловиях могут ссылаться не только на возвращаемое функцией значение, но и на аргументы функции.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;[[ ensures: expr(r) ]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом случае можно опустить идентификатор возвращаемого значения.&lt;/p&gt;
&lt;p&gt;Если постусловие ссылается на аргумент функции, то этот аргумент рассматривается &lt;em&gt;в точке выхода из функции&lt;/em&gt;, а не в точке входа, как в случае с предусловиями.&lt;/p&gt;
&lt;p&gt;Нет никакого способа ссылаться на оригинальное (в точке входа в функцию) значение в постусловии.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example3.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;incr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: 3 == n ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ ensures: 4 == n ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Предикаты в контрактах могут ссылаться на локальные переменные, только если время жизни этих переменных соответствует времени вычисления предиката.&lt;/p&gt;
&lt;p&gt;Например, для &lt;code&gt;constexpr&lt;/code&gt; функции нельзя ссылаться на локальные переменные, если только они не известны во время компиляции.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example4.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;constexpr&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;[[ expects: a &amp;lt;= n ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// error: `a` is not constexpr
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;[[ expects: n &amp;lt;  b ]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// OK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;na&#34;&gt;[[assert: n &amp;gt; 2*a]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// error: `a` is not constexpr
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;[[assert: n &amp;lt; 2*b]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// OK
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;контракты-для-указателей-на-функцию&#34;
    &gt;
        Контракты для указателей на функцию
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#контракты-для-указателей-на-функцию&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Контракты для указателей на функцию&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d1%8b-%d0%b4%d0%bb%d1%8f-%d1%83%d0%ba%d0%b0%d0%b7%d0%b0%d1%82%d0%b5%d0%bb%d0%b5%d0%b9-%d0%bd%d0%b0-%d1%84%d1%83%d0%bd%d0%ba%d1%86%d0%b8%d1%8e&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Нельзя определить контракты для указателя на функцию, но указателю на функцию можно присвоить адрес функции, для которой определён контракт.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example5.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[expects: n &amp;lt; 10]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pfoo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вызов &lt;code&gt;pfoo(100)&lt;/code&gt; приведёт к нарушению контракта.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;контракты-при-наследовании&#34;
    &gt;
        Контракты при наследовании
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#контракты-при-наследовании&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Контракты при наследовании&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d1%8b-%d0%bf%d1%80%d0%b8-%d0%bd%d0%b0%d1%81%d0%bb%d0%b5%d0%b4%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Классическая реализация концепции контрактов предполагает, что предусловия могут быть ослаблены в подклассах, постусловия и инварианты могут быть усилены в подклассах.&lt;/p&gt;
&lt;p&gt;В реализации C++20 это не так.&lt;/p&gt;
&lt;p&gt;Во-первых, инварианты в C++20 являются частью реализации, а не интерфейса. По этой причине, их можно как усилить, так и ослабить. Если в реализации виртуальной функции &lt;code&gt;assert&lt;/code&gt; отсутствует, то он не будет унаследован.&lt;/p&gt;
&lt;p&gt;Во-вторых, требуется, чтобы при наследовании функции были &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%BE_%D0%BE%D0%B4%D0%BD%D0%BE%D0%B3%D0%BE_%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F&#34;
&gt;ODR&lt;/a&gt; идентичны.
А, поскольку предусловия и постусловия являются частью интерфейса, то в наследнике они должны в точности совпадать.&lt;/p&gt;
&lt;p&gt;При этом, описание предусловий и постусловий при наследовании можно опустить. Но если они объявлены, то должны в точности совпадать с определением в базовом классе.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example6-inheritance.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ expects:   n &amp;lt; 10  ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ ensures r: r &amp;gt; 100 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Derived1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ expects:   n &amp;lt; 10  ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;na&#34;&gt;[[ ensures r: r &amp;gt; 100 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Derived2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// Inherits contracts from Base
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;&amp;lt;spoiler title=&amp;quot;Замечание&amp;quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;К сожалению, пример выше &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/arcosuc3m/clang-contracts/issues/18&#34;
&gt;не работает&lt;/a&gt; в экспериментальном компиляторе как ожидается.&lt;/p&gt;
&lt;p&gt;Если у &lt;code&gt;foo&lt;/code&gt; из  &lt;code&gt;Derived2&lt;/code&gt; опустить контракт, то он не будет унаследован из базового класса. Кроме того, компилятор позволяет определить для подкласса контракт несовпадающий с контрактом базового.&lt;/p&gt;
&lt;p&gt;Ещё одна &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/arcosuc3m/clang-contracts/issues/20&#34;
&gt;ошибка&lt;/a&gt; экспериментального компилятора: синтаксически правильной должна быть запись&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[expects: n &amp;lt; 10]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{...}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Однако в таком виде я получил ошибку компиляции&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;inheritance1.cpp:20:36: error: expected &lt;span class=&#34;s1&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt; at end of declaration list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    virtual int foo&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;int n&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; override
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                   ^
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                   &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;и пришлось заменить на&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[expects: n &amp;lt; 10]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;override&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{...}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Думаю, это связано с особенностью экспериментального компилятора, и в релизных версиях компиляторов будет работать синтаксически верный код.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;/spoiler&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;модификаторы-контрактов&#34;
    &gt;
        Модификаторы контрактов
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#модификаторы-контрактов&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Модификаторы контрактов&#34; href=&#34;#%d0%bc%d0%be%d0%b4%d0%b8%d1%84%d0%b8%d0%ba%d0%b0%d1%82%d0%be%d1%80%d1%8b-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Проверки предикатов контрактов могут нести дополнительные вычислительные расходы.
Поэтому распространённой практикой является проверка контрактов в девелоперской и тестовой сборках и их игнорирование в релизной сборке.&lt;/p&gt;
&lt;p&gt;Для этх целей стандарт предлагает три уровня модификаторов контрактов. С помощью модификаторов и ключей компилятора программист может управлять тем, какие контакты будут проверяться в сборке, а какие игнорироваться.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; – этот модификатор используется по умолчанию. Предполагается, что  вычислительная стоимость проверки выполнения выражения с этим модификатором &lt;em&gt;небольшая&lt;/em&gt;, по сравнению со стоимостью вычисления самой функции.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;audit&lt;/code&gt;  – этот модификатор предполагает, что  вычислительная стоимость проверки выполнения выражения &lt;em&gt;значительна&lt;/em&gt; по сравнению со стоимостью вычисления самой функции.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;axiom&lt;/code&gt;  – этот модификатор используется, если выражение носит декларативный характер. Не проверяется во время выполнения. Служит для документирования интерфейса функции, использования статическими анализаторами и оптимизатором компилятора. Выражения с модификатором &lt;code&gt;axiom&lt;/code&gt; никогда не вычисляются во время выполнения.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Пример&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;[[expects: expr]]&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;// Неявно default
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[[expects default: expr]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Явно default
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[[expects axiom  : expr]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Run-time проверки не выполняются
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;[[expects audit  : expr]]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Вычислительно дорогая проверка
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Используя модификаторы, можно определить какие проверки в каких версиях ваших сборок будут использоваться, а какие будут отключены.&lt;/p&gt;
&lt;p&gt;Стоит отметить, что если даже проверка не выполняется, компилятор вправе использовать контракт для низкоуровневых оптимизаций. И хотя проверка контракта может быть отключена флагом компиляции, нарушение контракта ведёт к неопределённому поведению программы.&lt;/p&gt;
&lt;p&gt;На усмотрение компилятора, могут быть предоставлены средства для включения проверок выражений, помеченных как  &lt;code&gt;axiom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;В нашем случае, это опция компилятора&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-axiom-mode=&amp;lt;mode&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;-axiom-mode=on&lt;/code&gt; &lt;em&gt;включает&lt;/em&gt; режим аксиом и, соответственно, &lt;em&gt;выключает&lt;/em&gt; проверку утверждений с идентификатором &lt;code&gt;axiom&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-axiom-mode=off&lt;/code&gt; &lt;em&gt;выключает&lt;/em&gt; режим аксиом и, соответственно, &lt;em&gt;включает&lt;/em&gt; проверку утверждений с идентификатором &lt;code&gt;axiom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example7-axiom.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[expects axiom: n &amp;lt; 10]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Программа может быть скомпилирована с тремя разными уровнями проверки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;off&lt;/code&gt; выключает все проверки выражений в контрактах&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; проверяются только выражения с модификатором &lt;code&gt;default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;audit&lt;/code&gt; расширенный режим, когда выполняются все проверки с модификатором &lt;code&gt;default&lt;/code&gt; и &lt;code&gt;audit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Как именно реализовывать установку уровня проверки отводится на усмотрение разработчиков компилятора.&lt;/p&gt;
&lt;p&gt;В нашем случае, для этого используется опция компилятора&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-build-level&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;off&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;default&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;audit&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;По умолчанию используется &lt;code&gt;-build-level=default&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Как уже было сказано, компилятор может использовать контракты для низкоуровневых оптимизаций. По этой причине, не смотря на то, что во время выполнения некоторые предикаты в контрактах (в зависимости от уровня проверки) могут не вычисляться, их невыполнение ведёт к неопределённому поведению.&lt;/p&gt;
&lt;p&gt;Примеры применения уровней сборки отложу до следующего раздела, там их можно будет сделать наглядными.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;перехват-нарушения-контракта&#34;
    &gt;
        Перехват нарушения контракта
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#перехват-нарушения-контракта&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Перехват нарушения контракта&#34; href=&#34;#%d0%bf%d0%b5%d1%80%d0%b5%d1%85%d0%b2%d0%b0%d1%82-%d0%bd%d0%b0%d1%80%d1%83%d1%88%d0%b5%d0%bd%d0%b8%d1%8f-%d0%ba%d0%be%d0%bd%d1%82%d1%80%d0%b0%d0%ba%d1%82%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В зависимости от того, с какими опциями собирается программа, в случае нарушения контракта могут быть разные сценарии поведения.&lt;/p&gt;
&lt;p&gt;По умолчанию нарушение контракта ведёт к падению программы, вызову &lt;code&gt;std::termenate()&lt;/code&gt;. Но программист может переопределить это поведение, предоставив свой обработчик и указав компилятору на необходимость продолжать работу программы после нарушения контракта.&lt;/p&gt;
&lt;p&gt;При компиляции можно установить обработчик &lt;em&gt;violation handler&lt;/em&gt;, вызываемый при нарушении контракта.&lt;/p&gt;
&lt;p&gt;Способ реализация установки обработчика отводится на усмотрение создателей компилятора.&lt;/p&gt;
&lt;p&gt;В нашем случае это&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-contract-violation-handler&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;violation_handler&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Сигнатура обработчика должна иметь вид&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contract_violation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;или&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contract_violation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;std::contract_violation&lt;/code&gt; эквивалентна следующему определению:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;contract_violation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;uint_least32_t&lt;/span&gt;   &lt;span class=&#34;nf&#34;&gt;line_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;     &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_view&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;       &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_view&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;function_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;   &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_view&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;comment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;         &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string_view&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;assertion_level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Таким образом, обработчик позволяет получить достаточно исчерпывающую информацию о том, где именно и при каких условиях произошло нарушение контракта.&lt;/p&gt;
&lt;p&gt;Если обработчик &lt;em&gt;violation handler&lt;/em&gt; задан, то, в случае нарушения контракта, по умолчанию, сразу после его выполнения будет вызван &lt;code&gt;std::abort()&lt;/code&gt; (Без указания обработчика вызывается &lt;code&gt;std::terminate()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Стандарт предполагает, что компиляторы предоставляют средства, позволяющие программистам продолжить выполнение программы после нарушения контракта.&lt;/p&gt;
&lt;p&gt;Способ реализации этих средств остаётся на усмотрение разработчиков компилятора.
В нашем случае, это опция компилятора&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-fcontinue-after-violation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Опции &lt;code&gt;-fcontinue-after-violation&lt;/code&gt; и &lt;code&gt;-contract-violation-handler&lt;/code&gt; могут быть установлены независимо друг от друга. Например, можно установить &lt;code&gt;-fcontinue-after-violation&lt;/code&gt;, но не устанавливать &lt;code&gt;-contract-violation-handler&lt;/code&gt;. В последнем случае, после нарушения контракта программа просто продолжит работу.&lt;/p&gt;
&lt;p&gt;Возможность продолжения работы программы после нарушения контракта специфицирована стандартом, но нужно подходить с осторожностью к этой возможности.&lt;/p&gt;
&lt;p&gt;Технически, поведение программы после нарушения контракта не определено, даже если программист явно указал, что программа должна продолжать работать.&lt;/p&gt;
&lt;p&gt;Это связано с возможностью компилятора выполнять низкоуровневые оптимизации в рассчёте на выполнение конрактов.&lt;/p&gt;
&lt;p&gt;В идеале, если произошло нарушение конракта, нужно как можно скорее записать диагностическую информацию и завершить работу программы. Нужно точно понимать, что вы делаете позволяя программе работать после violation.&lt;/p&gt;
&lt;p&gt;Определим &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/violation_handler.h&#34;
&gt;свой обработчик&lt;/a&gt; и с его помощью перехватим нарушение конракта&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;violation_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contract_violation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cerr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;line_number     : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line_number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cerr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;file_name       : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;file_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;       &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cerr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;function_name   : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cerr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;comment         : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;comment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cerr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;assertion_level : &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assertion_level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И рассмотрим &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example8-handling.cpp&#34;
&gt;пример&lt;/a&gt; нарушения конракта:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;violation_handler.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[expects: n &amp;lt; 10]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;-- contract violation
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Скомпилируем программу с опциями &lt;code&gt;-contract-violation-handler=violation_handler&lt;/code&gt; и &lt;code&gt;-fcontinue-after-violation&lt;/code&gt; и запустим&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ bin/example8-handling.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example8-handling.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь можно привести примеры, демонстрирующие поведение программы при нарушении контракта при разных уровнях сборки и режимах контрактов.&lt;/p&gt;
&lt;p&gt;Рассмотрим следующий &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example9.cpp&#34;
&gt;пример&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;violation_handler.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects axiom   : n &amp;lt; 100 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects default : n &amp;lt; 200 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects audit   : n &amp;lt; 300 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;350&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// audit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// default
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если собрать его с опцией &lt;code&gt;-build-level=off&lt;/code&gt; то как и ожидается, конракты не будут проверяться.&lt;/p&gt;
&lt;p&gt;Собрав с уровнем &lt;code&gt;default&lt;/code&gt; (с опцией &lt;code&gt;-build-level=default&lt;/code&gt;), получим следующий вывод:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ bin/example9-default.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example9.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example9.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И сборка с уровнем &lt;code&gt;audit&lt;/code&gt; даст:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; $ bin/example9-audit.bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example9.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example9.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;300&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : audit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;line_number     : &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;file_name       : example9.cpp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;function_name   : foo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;comment         : n &amp;lt; &lt;span class=&#34;m&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;assertion_level : default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;замечания&#34;
    &gt;
        Замечания
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#замечания&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Замечания&#34; href=&#34;#%d0%b7%d0%b0%d0%bc%d0%b5%d1%87%d0%b0%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;violation_handler&lt;/code&gt; может бросать исключения. В этом случае можно настроить программу так, чтобы нарушение контракта вело к выбросу исключения.&lt;/p&gt;
&lt;p&gt;Если функция, у которой описаны контракты, помечена как &lt;code&gt;noexcept&lt;/code&gt; и при проверке контракта вызван &lt;code&gt;violation_handler&lt;/code&gt;, который бросает исключение, то будет вызван &lt;code&gt;std::terminate()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/cpp20-contracts-examples/blob/master/example11.cpp&#34;
&gt;Пример&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;violation_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contract_violation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;noexcept&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;na&#34;&gt;[[ expects: n  &amp;gt; 0 ]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// &amp;lt;-- std::terminate() when violation handler throws an exception
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если компилятору передан флаг: не продолжать выполнение программы после нарушения контракта (&lt;code&gt;continuation mode=off&lt;/code&gt;), но обработчик violation handler бросает исключение, то будет принудительно вызвана &lt;code&gt;std::terminate()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;заключение&#34;
    &gt;
        Заключение
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#заключение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Заключение&#34; href=&#34;#%d0%b7%d0%b0%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Контракты относятся к неинтрузивным проверкам времени выполнения. Они играют очень важную роль в обеспечении качества выпускаемого программного обеспечения.&lt;/p&gt;
&lt;p&gt;C++ используется очень широко. И наверняка найдётся достаточное количество притензий к спецификации контрактов. На мой субъективный взгляд, реализация получилась довольно удобной и наглядной.&lt;/p&gt;
&lt;p&gt;Контракты C++20 позволят сделать наши программы ещё более надёжными, быстрыми и понятными. С нетерпением жду их реализацию в компиляторах.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;ссылки&#34;
    &gt;
        Ссылки
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2019/03/cpp-contracts/#ссылки&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Ссылки&#34; href=&#34;#%d1%81%d1%81%d1%8b%d0%bb%d0%ba%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/91b5a7eae275b9ed9e6824d975da151f&#34;
&gt;Gist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://habr.com/ru/articles/443766/&#34;
&gt;Habr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" />
        </entry>
        <entry>
            <title>Установка сертификатов LetsEncript</title>
            <link href="https://valmat.ru/posts/archive/2018/05/letsencript/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2018/05/letsencript/</id>
            <published>2018-05-20T12:00:00+03:00</published>
            <updated>2018-05-20T12:00:00+03:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;установка-сертификатов-letsencript&#34;
    &gt;
        Установка сертификатов LetsEncript
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2018/05/letsencript/#установка-сертификатов-letsencript&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Установка сертификатов LetsEncript&#34; href=&#34;#%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b0-%d1%81%d0%b5%d1%80%d1%82%d0%b8%d1%84%d0%b8%d0%ba%d0%b0%d1%82%d0%be%d0%b2-letsencript&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Можно установить несколько сертификатов для разных доменов. Если по каким то причинам конфиг Nginx не позволяет вычленить домены то в site-avaible нужно поместить временный конфиг, в котором перечислены домены.
потом его убрать и всё будет работать&lt;/p&gt;
&lt;p&gt;Описание установки тут:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://certbot.eff.org/#ubuntuxenial-nginx&#34;
&gt;https://certbot.eff.org/#ubuntuxenial-nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://certbot.eff.org/docs/using.html#renewal&#34;
&gt;https://certbot.eff.org/docs/using.html#renewal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Установка пакетов:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install software-properties-common
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;add-apt-repository ppa:certbot/certbot
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install certbot python-certbot-nginx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Затем можно устанавливать сертификат
Что бы получить список опций certbot набираем certbot &amp;ndash;help&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;SUBCOMMAND&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-d DOMAIN&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;-d DOMAIN&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Установка тодлко сертификата без правок конфига:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot --nginx certonly
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;При создании сертификата можно указать домены:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot --nginx certonly  -d avtogs.ru -d www.avtogs.ru -d msk.avtogs.ru
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если набрать &lt;code&gt;certbot --nginx&lt;/code&gt;
То certbot попытается в конец конфига дописать включение сертификата&lt;/p&gt;
&lt;p&gt;Проверка обновления:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot renew --dry-run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ручное обновление:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot renew
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ручное обновление с перезапуском конфигов:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot -q renew --post-hook &lt;span class=&#34;s2&#34;&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot renew --pre-hook &lt;span class=&#34;s2&#34;&gt;&amp;#34;service nginx stop&amp;#34;&lt;/span&gt; --post-hook &lt;span class=&#34;s2&#34;&gt;&amp;#34;service nginx start&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot renew -a nginx --cert-name /etc/letsencrypt/renewal/my-domain.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;посмотреть сертификаты&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;certbot certificates
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Проверим полученный сертификат&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openssl x509 -text -in /etc/letsencrypt/live/avtogs.ru/cert.pem
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;После установки можно попдправить Cron скрипт в /etc/cron.d  (  /etc/cron.d/certbot )&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; */12 * * * root &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; -x /usr/bin/certbot -a &lt;span class=&#34;se&#34;&gt;\!&lt;/span&gt; -d /run/systemd/system &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; perl -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;sleep int(rand(3600))&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; certbot -q renew --post-hook &lt;span class=&#34;s2&#34;&gt;&amp;#34;service nginx reload&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Что бы сертификаты заработали в конфиг Nginx нужно добваить&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;443&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssl_certificate&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;etc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;letsencrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;biotrapeza.ru&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fullchain.pem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ssl_certificate_key&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;etc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;letsencrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;biotrapeza.ru&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;privkey.pem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;etc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;letsencrypt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ssl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nginx.conf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;  &lt;span class=&#34;mi&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;server_name&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;plazan.ru&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;en.plazan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ru&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;www.plazan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ru&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;301&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request_uri&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ndash;&lt;/p&gt;
&lt;p&gt;См ещё:
&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&#34;
&gt;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/1a1b29459a815cb85ea9dd0e0db9cf6c&#34;
&gt;Источник&lt;/a&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/useful" term="useful" label="useful" />
        </entry>
        <entry>
            <title>Proxy для Telegram</title>
            <link href="https://valmat.ru/posts/archive/2018/04/proxy/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2018/04/proxy/</id>
            <published>2018-04-14T12:00:00+03:00</published>
            <updated>2018-04-14T12:00:00+03:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;в-связи-с-попытками-блокировок-telegram&#34;
    &gt;
        В связи с попытками блокировок Telegram
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2018/04/proxy/#в-связи-с-попытками-блокировок-telegram&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor В связи с попытками блокировок Telegram&#34; href=&#34;#%d0%b2-%d1%81%d0%b2%d1%8f%d0%b7%d0%b8-%d1%81-%d0%bf%d0%be%d0%bf%d1%8b%d1%82%d0%ba%d0%b0%d0%bc%d0%b8-%d0%b1%d0%bb%d0%be%d0%ba%d0%b8%d1%80%d0%be%d0%b2%d0%be%d0%ba-telegram&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Проверено на  5 баксовом тарифе DigitalOcean&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Создаём proxy пользователя для аутентификации по паролю:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;useradd -d /dev/null teleg
passwd teleg
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Сразу же закрываем этому пользователю вход по SSH:
(ещё лучше всегда менять ssh порт с дефолтного на кастомный)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Port 22&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Port &lt;span class=&#34;m&#34;&gt;4251&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Match User teleg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;PasswordAuthentication no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Match all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Рестартим ssh:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Проверяем:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh -p4251 teleg@&amp;lt;ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Должно быть&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Permission denied (publickey).
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;В репах Убунту старый и глючный &lt;code&gt;dante-server&lt;/code&gt;
Поэтому берём свежий пакет&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://ppa.launchpad.net/dajhorn/dante/ubuntu/pool/main/d/dante/dante-server_1.4.1-1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg -i dante-server_1.4.1-1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm dante-server_1.4.1-1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Редактируем настройки Данте-сервера:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cp /etc/danted.conf  /etc/danted~.conf
nano /etc/danted.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Конфиг:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;logoutput: syslog /var/log/danted.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user.privileged: root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user.unprivileged: teleg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The listening network interface or address.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;internal: 0.0.0.0 &lt;span class=&#34;nv&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1180&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The proxying network interface or address.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;external: eth0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# socks-rules determine what is proxied through the external interface.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The default of &amp;#34;none&amp;#34; permits anonymous access.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socksmethod: username
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# client-rules determine who can connect to the internal interface.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The default of &amp;#34;none&amp;#34; permits anonymous access.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clientmethod: none
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client pass &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        from: 0.0.0.0/0 to: 0.0.0.0/0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        log: connect disconnect error
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;socks pass &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        from: 0.0.0.0/0 to: 0.0.0.0/0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        log: connect disconnect error
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь
&lt;code&gt;user.unprivileged: teleg&lt;/code&gt; &amp;ndash; имя пользователя, которого мы создали выше
&lt;code&gt;port=1180&lt;/code&gt; мржете указать сами. Номер должен быть больше 1000&lt;/p&gt;
&lt;p&gt;Сетевой интерфейс:
&lt;code&gt;external: eth0&lt;/code&gt;
Имя сетевого интерфейса может отличаться. Обычно eth0
Что бы посмотреть имя используемого сетевого интерфейса нужно набрать&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ifconfig
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Перезапускаем dante-server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/danted stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/danted start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Проверяем работает ли proxy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -v -x socks5://teleg:&amp;lt;psw&amp;gt;@&amp;lt;ip&amp;gt;:&amp;lt;port&amp;gt; http://ya.ru/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;psw&gt;,&lt;ip&gt; и &lt;port&gt; нужно указать свои&lt;/p&gt;
&lt;p&gt;Если всё нормально, то Ok
Ссылка для включения прокси в телеграме:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://t.me/socks?server&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;ip&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;port&amp;gt;&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;teleg&lt;span class=&#34;p&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;psw&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если что-то пошло не так, то смотрим логи:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /var/log/danted.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Инструкцию эту собрал сам из разных источников. Лично мной проверена.&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/9b49ad02dac3941e47c442221ce852bb&#34;
&gt;Источник&lt;/a&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/useful" term="useful" label="useful" />
        </entry>
        <entry>
            <title>CRTP и двойной статическая полиморфизм C&#43;&#43;</title>
            <link href="https://valmat.ru/posts/archive/2018/03/crtp-cpp/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2018/03/crtp-cpp/</id>
            <published>2018-03-27T12:00:00+03:00</published>
            <updated>2018-03-27T12:00:00+03:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;crtp-и-двойной-статическая-полиморфизм&#34;
    &gt;
        CRTP и двойной статическая полиморфизм
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2018/03/crtp-cpp/#crtp-и-двойной-статическая-полиморфизм&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor CRTP и двойной статическая полиморфизм&#34; href=&#34;#crtp-%d0%b8-%d0%b4%d0%b2%d0%be%d0%b9%d0%bd%d0%be%d0%b9-%d1%81%d1%82%d0%b0%d1%82%d0%b8%d1%87%d0%b5%d1%81%d0%ba%d0%b0%d1%8f-%d0%bf%d0%be%d0%bb%d0%b8%d0%bc%d0%be%d1%80%d1%84%d0%b8%d0%b7%d0%bc&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Ниже представлен паттерн проектирования на C++, известный как &lt;strong&gt;CRTP (Curiously Recurring Template Pattern)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;С его помощью реализовать двойной статический полиморфизм. Пример ниже демонстрирует, как можно строить иерархии классов с использованием шаблонов для достижения поведения, похожего на виртуальные функции, но без накладных расходов раннего связывания.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/valmat/5c630e0c0a25f9087abc180a616ced4c.js&#34;&gt;&lt;/script&gt;

&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;зачем-нужен-этот-код&#34;
    &gt;
        Зачем нужен этот код?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2018/03/crtp-cpp/#зачем-нужен-этот-код&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Зачем нужен этот код?&#34; href=&#34;#%d0%b7%d0%b0%d1%87%d0%b5%d0%bc-%d0%bd%d1%83%d0%b6%d0%b5%d0%bd-%d1%8d%d1%82%d0%be%d1%82-%d0%ba%d0%be%d0%b4&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Обычный полиморфизм в C++ реализуется через виртуальные функции и наследование, что приводит к использованию виртуальной таблицы (vtable) и некоторым накладным расходам. Однако иногда нам требуется полиморфизм без этих издержек, особенно если все типы известны на этапе компиляции. Здесь на помощь приходит CRTP — паттерн, при котором класс-наследник передаёт себя как параметр шаблона базовому классу.&lt;/p&gt;
&lt;p&gt;В данном примере мы не просто реализуем классический CRTP, но и демонстрируем &lt;strong&gt;двойной статический полиморфизм&lt;/strong&gt;: шаблонные базовые классы зависят сразу от двух параметров, что позволяет гибко комбинировать реализацию и интерфейс.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;что-делает-этот-код&#34;
    &gt;
        Что делает этот код?
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2018/03/crtp-cpp/#что-делает-этот-код&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Что делает этот код?&#34; href=&#34;#%d1%87%d1%82%d0%be-%d0%b4%d0%b5%d0%bb%d0%b0%d0%b5%d1%82-%d1%8d%d1%82%d0%be%d1%82-%d0%ba%d0%be%d0%b4&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;WordGetterBase&lt;/strong&gt; — базовый шаблонный класс, реализующий интерфейс для получения строки (&lt;code&gt;getWord()&lt;/code&gt;) и вывода её в консоль (&lt;code&gt;printWord()&lt;/code&gt;). Реализация метода &lt;code&gt;getWord()&lt;/code&gt; делегируется классу-наследнику через CRTP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WordGetterW1&lt;/strong&gt; и &lt;strong&gt;WordGetterW2&lt;/strong&gt; — конкретные реализации, возвращающие разные строки.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;StrPrinterBase&lt;/strong&gt; — ещё один шаблонный базовый класс, который наследуется от конкретного WordGetter и расширяет интерфейс методом &lt;code&gt;printStr()&lt;/code&gt;. Он также использует CRTP для вызова метода наследника.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;StrPrinter1&lt;/strong&gt; и &lt;strong&gt;StrPrinter2&lt;/strong&gt; — конкретные реализации принтера, которые форматируют и выводят строку, полученную от соответствующего WordGetter.&lt;/li&gt;
&lt;li&gt;В функции &lt;code&gt;main&lt;/code&gt; демонстрируется использование этих классов: выводятся строки напрямую через WordGetter&amp;rsquo;ы и с помощью различных StrPrinter&amp;rsquo;ов.&lt;/li&gt;
&lt;/ol&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/cpp" term="cpp" label="cpp" />
        </entry>
        <entry>
            <title>Haskell</title>
            <link href="https://valmat.ru/posts/archive/2016/11/haskell/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2016/11/haskell/</id>
            <published>2016-11-14T12:49:58+03:00</published>
            <updated>2016-11-14T12:49:58+03:00</updated>
            <content type="html">
                &lt;p&gt;Мои эксперементы с Haskell&lt;/p&gt;
&lt;p&gt;Сделал тоже самое что описано в &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;/posts/archive/2014/11/cpp-tolist/&#34;
&gt;посте про C++&lt;/a&gt;&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/valmat/dfde28138a143f4e339eb79233a887ea.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Haskell &amp;ndash; классный язык программирования. Но писатьна нём что то в одиночку очень тяжело.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Мой первый Arduino проект</title>
            <link href="https://valmat.ru/posts/archive/2016/02/battery-sensor/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2016/02/battery-sensor/</id>
            <published>2016-02-21T15:35:00+00:00</published>
            <updated>2016-02-21T15:35:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Пару лет назад подарили отцу на день рождения лодочный электромотор и литиевый тяговый аккумулятор к нему. Хорошая вещь, сплошные положительные эмоции от использования. Но, как оказалось, мотор не рассчитан на работу с этим аккумулятором. В том смысле, что индикация уровня заряда на корпусе мотора оказалась совершенно неадекватной.&lt;/p&gt;
&lt;p&gt;Решил попробовать сделать необходимый девайс на Arduino.&lt;/p&gt;
&lt;p&gt;До этого с микроконтроллерами дела не имел. Оказалось, это совсем не сложно и даже интересно.&lt;/p&gt;
&lt;p&gt;Исходники выложил на GitHub: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/BatterySensor&#34;
&gt;https://github.com/valmat/BatterySensor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Документация там же.&lt;/p&gt;
&lt;p&gt;Прибор умеет отображать уровень заряда батареи в процентах, с помощью значка, а также тремя RGB светодиодами, которые постепенно меняют свои цвета с зелёного на жёлтый, потом на красный — в зависимости от уровня заряда.&lt;/p&gt;
&lt;p&gt;На корпусе расположил выключатель и кнопку. Кнопка выключает светодиоды, а долгое нажатие кнопки отключает подсветку экрана. Для экономии батареи в солнечный день и чтобы не слепило ночью.&lt;/p&gt;
&lt;p&gt;Кроме того, подключил датчик BMP180. Устройство показывает температуру и давление. Давление на рыбалке знать необходимо.&lt;/p&gt;
&lt;p&gt;Корпус сделал герметичным. Всё проклеил резиновым клеем, а сверху заклеил алюминиевым скотчем.&lt;/p&gt;
&lt;p&gt;Работает надёжно. Показания точные.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./3.JPG&#34;
  alt=&#34;Корпус устройства, общий вид&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./4.JPG&#34;
  alt=&#34;Вид устройства с другого ракурса&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./5.JPG&#34;
  alt=&#34;Внутренности устройства&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./10.jpg&#34;
  alt=&#34;Экран устройства в работе&#34;
  
/&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Определение по списку в C&#43;&#43;</title>
            <link href="https://valmat.ru/posts/archive/2014/11/cpp-tolist/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/11/cpp-tolist/</id>
            <published>2014-11-18T16:38:00+00:00</published>
            <updated>2014-11-18T16:38:00+00:00</updated>
            <content type="html">
                &lt;p&gt;В PHP есть возможность присвоить переменным значения, используя массив:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;str1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;str2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В Python это выглядит так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;str1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;str2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;А вот в C++ такой языковой конструкции нет. Но это совершенно не проблема, потому что ее можно сделать самому.&lt;/p&gt;
&lt;p&gt;Вот что у меня получилось:&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/valmat/455d9f9c56237b87f7e2.js&#34;&gt;&lt;/script&gt;

&lt;!-- ```cpp
/**
 * This is a helper class.
 * It can be used only inside the function ListInitializer tolist(Args&amp;&amp; ...args)
 * ListInitializer list(Args&amp;&amp; ...args)
 * In all other cases, use it not possible
 * size is the number of arguments with which the constructor was called
 */
template&lt;typename DataType, unsigned size&gt;
class ListInitializer
{
public:

    /**
     * Assignment operator
     * Ref-qualified forbids such things:
     * ListInitializer c(a,b);
     * c = arr;
     * You can only use this form:
     * ListInitializer(a,b) = arr;
     * VecType must be convertable to DataType
     */
    template&lt;typename ContainerType&gt;
    ListInitializer&amp; operator=(ContainerType&amp;&amp; arr) &amp;&amp;
    {
        auto it = arr.begin(), itend = arr.end();
        unsigned i = 0;
        while(it != itend &amp;&amp; i &lt; size) {
            *parr[i] = *it;
            ++it;
            ++i;
        }
        return *this;
    }

    /**
     * Deleted constructors. Forbids such things:
     * tolist q(a,b,c,d,e),w(a,b,c,d,e);
     * w = q;
     * You can only use this form:
     * tolist(a,b,c,d,e) = arr;
     */
    ListInitializer(const ListInitializer&amp; that) = delete;
    ListInitializer() = delete;

private:
    /**
     * Constructor with one argument
     */
    explicit ListInitializer(DataType&amp; arg)
    {
        helper(0, arg);
    }

    /**
     * Constructor with a variable (&gt;1) number of arguments
     * You can use any number of arguments of type DataType in the constructor.
     * tolist(a,b,c,d) = arr;
     * tolist(a,b) = arr;
     */
    template&lt;typename... Args&gt;
    ListInitializer(DataType&amp; arg0, Args&amp;... args)
    {
        helper(0, arg0, args...);
    }

    /**
     * Move constructor
     */
    ListInitializer(ListInitializer&amp;&amp; that)
    {
        for(unsigned i = 0; i &lt; size; ++i) {
            parr[i] = that.parr[i];
            that.parr[i] = nullptr;
        }
    }

    /**
     * Helper method.
     * Allows to initialize the list of any number of arguments.
     * Alternately, one by one makes pointers to the arguments into the internal array.
     */
    template&lt;typename... Args&gt;
    void helper(int ind, DataType&amp; arg0, Args&amp;... args)
    {
        helper(ind, arg0);
        helper(++ind, args...);
    }

    /**
     * Helper method.
     */
    void helper(int ind, DataType&amp; arg0)
    {
        parr[ind] = &amp;arg0;
    }

    template&lt;typename T, typename... Args&gt;
    friend ListInitializer&lt;T, sizeof...(Args)+1&gt; tolist(T&amp; arg0, Args&amp;... args);

    // Internal array of pointers to pointers to arguments
    DataType* parr[size];
};

template&lt;typename DataType, typename... Args&gt;
ListInitializer&lt;DataType, sizeof...(Args)+1&gt; tolist(DataType&amp; arg0, Args&amp;... args)
{
    return ListInitializer&lt;DataType, sizeof...(Args)+1&gt;(arg0, args...);
}

// Check
#include &lt;iostream&gt;
#include &lt;vector&gt;
int main()
{

    std::vector&lt;std::string&gt; arr{&#34;str1&#34;, &#34;str2&#34;, &#34;str3&#34;, &#34;str4&#34;, &#34;str5&#34;, &#34;str6&#34;};
    std::string a, b, c, d, e;

    tolist(b) = arr;
    std::cout &lt;&lt; std::endl &lt;&lt; a &lt;&lt; &#34; &#34; &lt;&lt; b &lt;&lt; &#34; &#34; &lt;&lt; c &lt;&lt; &#34; &#34; &lt;&lt; d &lt;&lt; &#34; &#34; &lt;&lt; e &lt;&lt; std::endl;

    tolist(a, b, c, d, e) = arr;
    std::cout &lt;&lt; std::endl &lt;&lt; a &lt;&lt; &#34; &#34; &lt;&lt; b &lt;&lt; &#34; &#34; &lt;&lt; c &lt;&lt; &#34; &#34; &lt;&lt; d &lt;&lt; &#34; &#34; &lt;&lt; e &lt;&lt; std::endl;

    return 0;
}

/*
 * g++ tolist.cpp -std=c++11 &amp;&amp; ./a.out
 * or 
 * clang++ tolist.cpp -std=c++11 &amp;&amp; ./a.out
 *
 * |output:
 * | str1
 * |
 * |str1 str2 str3 str4 str5
 *
 */
``` --&gt;
&lt;p&gt;См также &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://gist.github.com/valmat/fdb37d1b741d5c12336d&#34;
&gt;Optimized string concatenation: strjoin.cpp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Нужен C++11, т.к. используются Ref-qualifiers.&lt;/p&gt;
&lt;p&gt;P.S. blogger.com как всегда портит код. Надо менять блогодвижок.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Микро-бенчмарк RocksDB server</title>
            <link href="https://valmat.ru/posts/archive/2014/08/rocksdb-mikro-bench/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/08/rocksdb-mikro-bench/</id>
            <published>2014-08-21T06:00:00+00:00</published>
            <updated>2014-08-21T06:00:00+00:00</updated>
            <content type="html">
                &lt;p&gt;В полноценном смысле то, что я тут хочу написать, конечно, бенчмарком не является. Но вполне способно дать понимание области применения RocksDB.&lt;/p&gt;
&lt;p&gt;RocksDB — это довольно крутое хранилище, являющееся (на данный момент) встраиваемым решением. Главной фишкой RocksDB является то, что она рассчитана на использование на flash-накопителях, то есть на SSD-дисках.&lt;/p&gt;
&lt;p&gt;Лично я давно ждал появления таких решений. Поскольку память всё ещё дорогая, а жёсткие диски медленные, использование SSD для хранения данных — очень логичный шаг.&lt;/p&gt;
&lt;p&gt;Как я уже говорил, RocksDB — встраиваемое решение и не является сервером. Я честно ждал почти год, когда кто-нибудь напишет или хотя бы начнёт писать серверную обёртку над ней. Но то, что появилось за это время, по разным причинам категорически меня не устраивает.&lt;/p&gt;
&lt;p&gt;Поэтому я написал собственную серверную обёртку: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/RocksServer&#34;
&gt;https://github.com/valmat/RocksServer&lt;/a&gt;. В настоящее время она вполне функциональна, протестирована и готова к работе. Но есть ещё моменты, требующие улучшения. Эти моменты никак не связаны с её пригодностью к использованию, поэтому ничто не мешает уже сейчас произвести замеры производительности.&lt;/p&gt;
&lt;p&gt;Замеры я осуществлял с помощью идущего в комплекте с сервером драйвера для PHP. Во-первых, мне так было удобнее, а во-вторых, использовать я его в ближайшее время буду именно из PHP.&lt;/p&gt;
&lt;p&gt;Итак, табличка.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MultiGet со случайными ключами.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Условия проведения эксперимента:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;В базе данных 1 000 000 ключей.&lt;/li&gt;
&lt;li&gt;Выбирается набор случайных ключей в случайном порядке.&lt;/li&gt;
&lt;li&gt;Кэш не используется. Прямо перед экспериментом я перезагрузил компьютер, чтобы полностью исключить возможность использования файлового кэша.&lt;/li&gt;
&lt;li&gt;Хранимые значения имеют длину 50 ±5 байт.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Количество ключей в выборке&lt;/th&gt;
          &lt;th&gt;SSD&lt;/th&gt;
          &lt;th&gt;HDD&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;50&lt;/td&gt;
          &lt;td&gt;4.7 ms&lt;/td&gt;
          &lt;td&gt;131.3 ms&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;300&lt;/td&gt;
          &lt;td&gt;12.6 ms&lt;/td&gt;
          &lt;td&gt;2371.4 ms (~2s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1000&lt;/td&gt;
          &lt;td&gt;29.5 ms&lt;/td&gt;
          &lt;td&gt;7918.4 ms (~8s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10 000&lt;/td&gt;
          &lt;td&gt;124.6 ms&lt;/td&gt;
          &lt;td&gt;45229.5 ms (~45s)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;100 000&lt;/td&gt;
          &lt;td&gt;2346.6 ms&lt;/td&gt;
          &lt;td&gt;51855.8 ms (~56s)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Следует отметить, что после попадания ключей в кэш скорость выборки на HDD возрастает и приближается к скорости выборки на SSD.&lt;/p&gt;
&lt;p&gt;Какие выводы можно сделать из таблички? RocksDB действительно очень быстрое хранилище и подходит для использования на SSD-дисках.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; Сама RocksDB обладает очень богатыми возможностями. В настоящий момент я реализовал лишь базовый необходимый мне функционал. В дальнейшем, постепенно, я планирую наращивать функциональные возможности RocksServer.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Clang vs gcc performance</title>
            <link href="https://valmat.ru/posts/archive/2014/05/clang-vs-gcc-performance/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/05/clang-vs-gcc-performance/</id>
            <published>2014-05-31T21:18:00+00:00</published>
            <updated>2014-05-31T21:18:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Стало мне интересно, и решил я провести такую глупую проверку: сравнить производительность программ, откомпилированных Clang&amp;rsquo;ом и gcc.&lt;/p&gt;
&lt;p&gt;Для эксперимента взял первую попавшуюся реализацию пузырьковой сортировки с GitHub&amp;rsquo;а.&lt;/p&gt;
&lt;p&gt;Компилировал с опциями &lt;code&gt;-g&lt;/code&gt;, &lt;code&gt;-O1&lt;/code&gt;, &lt;code&gt;-O2&lt;/code&gt;, &lt;code&gt;-O3&lt;/code&gt; и без опций.&lt;/p&gt;
&lt;p&gt;Получилось интересно и неожиданно.&lt;/p&gt;
&lt;p&gt;Для запуска тестов использовал такой скрипт:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OPT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-O3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;g++ &lt;span class=&#34;nv&#34;&gt;$OPT&lt;/span&gt; bubble.cpp -o bubble1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clang++ &lt;span class=&#34;nv&#34;&gt;$OPT&lt;/span&gt; bubble.cpp -o bubble2   &lt;span class=&#34;c1&#34;&gt;# -stdlib=libstdc++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;clang++ &lt;span class=&#34;nv&#34;&gt;$OPT&lt;/span&gt; -stdlib&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;libc++ bubble.cpp -o bubble3 &lt;span class=&#34;c1&#34;&gt;# -stdlib=libc++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ls -slh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# exit;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; ./bubble1 &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; ./bubble2 &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sleep &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; ./bubble3 &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Меняя параметр &lt;code&gt;OPT&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Поясню, что здесь компилируется:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;g++ $OPT bubble.cpp -o bubble1&lt;/code&gt;&lt;br&gt;
Используется &lt;strong&gt;gcc&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clang++ $OPT bubble.cpp -o bubble2&lt;/code&gt;&lt;br&gt;
Используется &lt;strong&gt;clang&lt;/strong&gt; со стандартной библиотекой &lt;strong&gt;libstdc++&lt;/strong&gt; от gcc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clang++ $OPT -stdlib=libc++ bubble.cpp -o bubble3&lt;/code&gt;&lt;br&gt;
Используется &lt;strong&gt;clang&lt;/strong&gt; со своей собственной стандартной библиотекой &lt;strong&gt;libc++&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;результаты-производительности&#34;
    &gt;
        Результаты производительности
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2014/05/clang-vs-gcc-performance/#результаты-производительности&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Результаты производительности&#34; href=&#34;#%d1%80%d0%b5%d0%b7%d1%83%d0%bb%d1%8c%d1%82%d0%b0%d1%82%d1%8b-%d0%bf%d1%80%d0%be%d0%b8%d0%b7%d0%b2%d0%be%d0%b4%d0%b8%d1%82%d0%b5%d0%bb%d1%8c%d0%bd%d0%be%d1%81%d1%82%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Опция&lt;/th&gt;
          &lt;th&gt;gcc&lt;/th&gt;
          &lt;th&gt;clang -stdlib=libstdc++ (gcc)&lt;/th&gt;
          &lt;th&gt;clang -stdlib=libc++&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-g&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.337&lt;/strong&gt;s&lt;br&gt;user 0m3.335s&lt;br&gt;sys 0m0.004s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.294&lt;/strong&gt;s&lt;br&gt;user 0m3.296s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.323&lt;/strong&gt;s&lt;br&gt;user 0m3.325s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;без опций&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.334&lt;/strong&gt;s&lt;br&gt;user 0m3.336s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.293&lt;/strong&gt;s&lt;br&gt;user 0m3.295s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m3.320&lt;/strong&gt;s&lt;br&gt;user 0m3.318s&lt;br&gt;sys 0m0.004s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O1&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.735&lt;/strong&gt;s&lt;br&gt;user 0m1.735s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.485&lt;/strong&gt;s&lt;br&gt;user 0m1.486s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.493&lt;/strong&gt;s&lt;br&gt;user 0m1.494s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O2&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.516&lt;/strong&gt;s&lt;br&gt;user 0m1.517s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.522&lt;/strong&gt;s&lt;br&gt;user 0m1.523s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.495&lt;/strong&gt;s&lt;br&gt;user 0m1.492s&lt;br&gt;sys 0m0.004s&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O3&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.510&lt;/strong&gt;s&lt;br&gt;user 0m1.506s&lt;br&gt;sys 0m0.004s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.534&lt;/strong&gt;s&lt;br&gt;user 0m1.535s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
          &lt;td&gt;real &lt;strong&gt;0m1.498&lt;/strong&gt;s&lt;br&gt;user 0m1.499s&lt;br&gt;sys 0m0.000s&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;размеры-бинарников&#34;
    &gt;
        Размеры бинарников
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2014/05/clang-vs-gcc-performance/#размеры-бинарников&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Размеры бинарников&#34; href=&#34;#%d1%80%d0%b0%d0%b7%d0%bc%d0%b5%d1%80%d1%8b-%d0%b1%d0%b8%d0%bd%d0%b0%d1%80%d0%bd%d0%b8%d0%ba%d0%be%d0%b2&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Опция&lt;/th&gt;
          &lt;th&gt;gcc&lt;/th&gt;
          &lt;th&gt;clang -stdlib=libstdc++ (gcc)&lt;/th&gt;
          &lt;th&gt;clang -stdlib=libc++&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;-g&lt;/td&gt;
          &lt;td&gt;22K&lt;/td&gt;
          &lt;td&gt;28K&lt;/td&gt;
          &lt;td&gt;65K&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;без опций&lt;/td&gt;
          &lt;td&gt;9,2K&lt;/td&gt;
          &lt;td&gt;8,3K&lt;/td&gt;
          &lt;td&gt;15K&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O1&lt;/td&gt;
          &lt;td&gt;8,9K&lt;/td&gt;
          &lt;td&gt;8,4K&lt;/td&gt;
          &lt;td&gt;12K&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O2&lt;/td&gt;
          &lt;td&gt;8,9K&lt;/td&gt;
          &lt;td&gt;8,1K&lt;/td&gt;
          &lt;td&gt;12K&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;-O3&lt;/td&gt;
          &lt;td&gt;8,9K&lt;/td&gt;
          &lt;td&gt;8,1K&lt;/td&gt;
          &lt;td&gt;12K&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Понятно, что по такому примеру корректно сравнивать компиляторы нельзя, но для меня, как для приверженца GNU компилятора, результаты получились неожиданными.&lt;/p&gt;
&lt;p&gt;По сути, clang превзошёл gcc во всех направлениях.&lt;/p&gt;
&lt;p&gt;Для меня основной вывод такой:&lt;br&gt;
Clang заслуживает внимания и заслуживает того, чтобы к нему присмотреться. Тем более, сообщения об ошибках, которые он выдаёт, информативнее, чем сообщения, выдаваемые gcc.&lt;/p&gt;
&lt;p&gt;До этого я никогда не пользовался клэнгом (силангом). Столкнулся с ним по необходимости. Думаю, что стоит попробовать использовать его в своей работе.&lt;/p&gt;
&lt;p&gt;Мои версии clang и gcc:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gcc version 4.8.1&lt;/strong&gt; (Ubuntu/Linaro 4.8.1-10ubuntu9)&lt;/li&gt;
&lt;li&gt;Debian &lt;strong&gt;clang version 3.2&lt;/strong&gt;-7ubuntu1 (tags/RELEASE_32/final) (based on LLVM 3.2)&lt;/li&gt;
&lt;/ul&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Отчетность в налоговую на Linux</title>
            <link href="https://valmat.ru/posts/archive/2014/03/linux/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/03/linux/</id>
            <published>2014-03-20T10:43:00+00:00</published>
            <updated>2014-03-20T10:43:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Как я готовлю отчетность в налоговую.&lt;/p&gt;
&lt;p&gt;Выписки у меня достаются в таком формате:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2014.01.20.rtf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2014.01.20-1.rtf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;В первую очередь, нужно упорядочить по дате, поэтому переименовываем:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; i in &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;find . -type f -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.rtf*&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nv&#34;&gt;dst&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -e :a -e &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/\(.*\)\([0-9]\{2\}\)\.\([0-9]\{2\}\)\.\([0-9]\{4\}\)\(.*\)/\1\4.\3.\2\5/;ta&amp;#39;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; mv &lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$dst&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Потом конвертируем в PDF:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;libreoffice --invisible --convert-to pdf *.rtf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И соединяем все в один файл:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gs -dNOPAUSE -sDEVICE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;pdfwrite -sOUTPUTFILE&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;toprint.pdf -dBATCH &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;find . -type f -name &lt;span class=&#34;s2&#34;&gt;&amp;#34;*.pdf&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Всё.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Документация PHP-CPP</title>
            <link href="https://valmat.ru/posts/archive/2014/03/documentation-php-cpp-start/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/03/documentation-php-cpp-start/</id>
            <published>2014-03-10T18:42:00+00:00</published>
            <updated>2014-03-10T18:42:00+00:00</updated>
            <content type="html">
                &lt;p&gt;У PHP-CPP появился раздел с &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.php-cpp.com/documentation&#34;
&gt;документацией&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Вообще разработка библиотеки идет семимильными шагами, и, похоже, недолго осталось ждать первого рабочего релиза. Когда будет готово, напишу подробнее про саму библиотеку и её возможности.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PS: Вместо того чтобы что-то писать здесь про библиотеку, я просто взял и начал переводить документацию на русский язык: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://phpcpp.ru/&#34;
&gt;http://phpcpp.ru/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Основная цель этого перевода — познакомить русскоязычное сообщество с библиотекой.&lt;/p&gt;
&lt;p&gt;Перевод вольный. Поскольку многие вещи в библиотеке так или иначе сделаны с моим участием (да и просто потому что я уже достаточно хорошо в ней разобрался), мой перевод во многих местах дополняет и расширяет оригинальный текст.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Сравнение производительности C&#43;&#43; php-расширения с нативным кодом</title>
            <link href="https://valmat.ru/posts/archive/2014/01/php-cpp-pagination/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2014/01/php-cpp-pagination/</id>
            <published>2014-01-12T15:11:00+00:00</published>
            <updated>2014-01-12T15:11:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Давно меня интересовал вопрос: насколько увеличивается производительность при переписывании нативного кода в php-расширение.&lt;/p&gt;
&lt;p&gt;И вот я решил провести сравнение.&lt;/p&gt;
&lt;p&gt;В качестве платформы для написания расширения была выбрана библиотека &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/CopernicaMarketingSoftware/PHP-CPP&#34;
&gt;PHP-CPP&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Пару слов о самой библиотеке PHP-CPP.&lt;/strong&gt;&lt;br&gt;
Довольно неплохая библиотека. Работать с ней приятно и удобно. Честно говоря, никогда еще не было так легко писать расширения для php.&lt;br&gt;
Из минусов могу отметить недостаток документации. Чтобы разобраться с некоторыми вещами, недостаточно даже примеров, которыми автор снабжает код — приходится смотреть исходники. В частности, я так и не разобрался, как перенести статический метод класса из C++ в статический же метод в php.&lt;br&gt;
Основана она на C++11, т.е. на старых дистрибутивах может потребоваться обновить gcc.&lt;/p&gt;
&lt;p&gt;В качестве подопытного был выбран модуль постраничного разбиения.&lt;br&gt;
Исходники на GitHub: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/myscrnav&#34;
&gt;https://github.com/valmat/myscrnav&lt;/a&gt;&lt;br&gt;
Я написал два идентичных класса: один на php, другой на C++ (в виде расширения к php).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Пару слов как пользоваться.&lt;/strong&gt;&lt;br&gt;
Пример использования есть в исходниках: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/myscrnav/blob/master/screennav_test.php&#34;
&gt;https://github.com/valmat/myscrnav/blob/master/screennav_test.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Создаем pagination-объект из расширения:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myScrNav&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pageNom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/url/to/page/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Или из php-класса:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;require&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;php/class.screennav.php&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ScreenNav&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pageNom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;/url/to/page/&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Задаём необходимые параметры (если необходимо, можно не задавать):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setInterval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;       &lt;span class=&#34;c1&#34;&gt;// Сколько объектов на странице
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setPrefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;?qwe&amp;amp;part=&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// URL prefix
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setPostfix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;amp;prm=132&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// URL postfix
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setSpace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;space&amp;gt;...&amp;lt;/space&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Разделитель блоков табов
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setCssName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;newClassName&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// Имя класса css блока управления постраничным выводом
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setMidTab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// см. info.png
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;setMaxTab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;// см. info.png
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$scr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;showCount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// Показывать ли общее количество элементов
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img
  src=&#34;./info.png&#34;
  alt=&#34;info.png&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Кроме того, доступны следующие методы для получения вычисленных данных:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;getStartPos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// Номер начального элемента на текущей странице (для выборки из БД)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getLimitPos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// Длина списка элементов на странице на текущей странице (для выборки из БД)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getPageCnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// Количество страниц при разбивке на части
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;getStartPos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// Номер (вычисленный) текущей страницы
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// Возвращает собственно сам элемент управления постраничной разбивкой (html)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;То есть можно управлять постраничной разбивкой и делать запросы к БД на основе этой разбивки. Внешний вид, разумеется, полностью настраивается через css.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Теперь сами результаты сравнения.&lt;/strong&gt;&lt;br&gt;
PHP тестируется с включённым опкешером (apc). Без него смысла тестировать не вижу, ибо тестировать нужно так, как используется на рабочей системе.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;br&gt;
Во-первых, сравним просто функции.&lt;/p&gt;
&lt;p&gt;На php будет:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ScreenNav_pageNo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_GET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;На C++:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Value&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GETpageNom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Parameters&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stringValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;globals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;_GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rez&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numericValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rez&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rez&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;php&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;memory usage: 0.56Kb&lt;/li&gt;
&lt;li&gt;memory peak_usage: 1.1Kb&lt;/li&gt;
&lt;li&gt;Вычисленное: time: 50·10⁻⁶ sec&lt;/li&gt;
&lt;li&gt;ab -n 10000 &amp;hellip; : Time per request: 0.39 [ms] (mean)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;memory usage: 1.26Kb&lt;/li&gt;
&lt;li&gt;memory peak_usage: 1.8Kb&lt;/li&gt;
&lt;li&gt;Вычисленное: time: 60·10⁻⁶ sec&lt;/li&gt;
&lt;li&gt;ab -n 10000 &amp;hellip; : Time per request: 0.4 [ms] (mean)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Как видно, на таком простом примере расширение не выигрывает, а даже проигрывает нативному коду.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;br&gt;
Теперь сравним классы.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;php&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;time: 215·10⁻⁶ sec&lt;/li&gt;
&lt;li&gt;memory usage: 16.5Kb&lt;/li&gt;
&lt;li&gt;memory peak_usage: 22.7Kb&lt;/li&gt;
&lt;li&gt;ab -n 10000 &amp;hellip; : Time per request: 0.533 [ms] (mean)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;time: 170·10⁻⁶ sec&lt;/li&gt;
&lt;li&gt;memory usage: 2.3Kb&lt;/li&gt;
&lt;li&gt;memory peak_usage: 4.6Kb&lt;/li&gt;
&lt;li&gt;ab -n 10000 &amp;hellip; : Time per request: 0.49 [ms] (mean)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;выводы&#34;
    &gt;
        Выводы
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2014/01/php-cpp-pagination/#выводы&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Выводы&#34; href=&#34;#%d0%b2%d1%8b%d0%b2%d0%be%d0%b4%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Разница во времени порядка 10⁻⁵ sec — не то, ради чего нужно переписывать с php на C++.&lt;br&gt;
С другой стороны, само то, что она проявилась на такой незначительной задаче — уже результат.&lt;br&gt;
Приведённый пример позволяет понять порядок выигрыша и оценить целесообразность переписывания нативного кода в C++ расширение.&lt;/p&gt;
&lt;p&gt;Обращает на себя внимание разница в потреблении памяти. Причём, если расширение выгрузить, то потребление памяти нативным кодом не уменьшается.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Сериализация в PHP</title>
            <link href="https://valmat.ru/posts/archive/2013/12/serialize-php/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/12/serialize-php/</id>
            <published>2013-12-15T19:08:00+00:00</published>
            <updated>2013-12-15T19:08:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Будут сравниваться 4 способа сериализации:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Стандартная сериализация &lt;code&gt;serialize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;msgpack&lt;/li&gt;
&lt;li&gt;igbinary&lt;/li&gt;
&lt;/ol&gt;



  &lt;div class=&#34;gblog-toc gblog-toc__level--6&#34;&gt;
    &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#кратко-об-установке&#34;&gt;Кратко об установке&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#что-еще-важно-отметить&#34;&gt;Что еще важно отметить&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#тесты&#34;&gt;Тесты&lt;/a&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;a href=&#34;#1-массив-ассоциативный-вложенные-массивы-и-строки&#34;&gt;1. Массив ассоциативный: вложенные массивы и строки&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#2-массив-числовой-большие-массивы-целых-чисел&#34;&gt;2. Массив числовой: большие массивы целых чисел&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#3-массив-числовой-большие-массивы-длинных-целых-чисел-int64&#34;&gt;3. Массив числовой: большие массивы длинных целых чисел (int64)&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#4-массив-числовой-большие-массивы-чисел-с-плавающей-точкой-float&#34;&gt;4. Массив числовой: большие массивы чисел с плавающей точкой (float)&lt;/a&gt;&lt;/li&gt;
            &lt;li&gt;&lt;a href=&#34;#5-массив-строковый-большие-массивы-длинных-строк&#34;&gt;5. Массив строковый: большие массивы длинных строк&lt;/a&gt;&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
    &lt;hr /&gt;
  &lt;/div&gt;


&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;кратко-об-установке&#34;
    &gt;
        Кратко об установке
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#кратко-об-установке&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Кратко об установке&#34; href=&#34;#%d0%ba%d1%80%d0%b0%d1%82%d0%ba%d0%be-%d0%be%d0%b1-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%ba%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt; раньше шел в стандартной поставке PHP. Сейчас нужно поставить дополнительное расширение &lt;code&gt;php5-json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;msgpack&lt;/strong&gt;&lt;br&gt;
Сайт: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://msgpack.org/&#34;
&gt;http://msgpack.org/&lt;/a&gt;&lt;br&gt;
Исходники: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/msgpack/msgpack-php&#34;
&gt;github.com/msgpack/msgpack-php&lt;/a&gt; и &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://pecl.php.net/package/msgpack&#34;
&gt;http://pecl.php.net/package/msgpack&lt;/a&gt;&lt;br&gt;
Ставим:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://pecl.php.net/get/msgpack-0.5.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar xzf msgpack-0.5.5.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; msgpack-0.5.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;phpize
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если тесты прошли нормально, то создаем пакет и ставим:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo checkinstall -D --install&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i msgpack_0.5.5-1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;igbinary&lt;/strong&gt;&lt;br&gt;
Исходники: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/phadej/igbinary/tree/master&#34;
&gt;github.com/phadej/igbinary&lt;/a&gt; и &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://pecl.php.net/package/igbinary&#34;
&gt;http://pecl.php.net/package/igbinary&lt;/a&gt;&lt;br&gt;
Далее опять:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://pecl.php.net/get/igbinary-1.1.1.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar xzf igbinary-1.1.1.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; igbinary-1.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;phpize
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./configure
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo checkinstall -D --install&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;no
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -i igbinary_1.1.1-1_amd64.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;msgpack добавляет функции:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;BinData&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgpack_pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;phpValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;phpValue&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;msgpack_unpack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BinData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;igbinary добавляет функции:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;BinData&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;igbinary_serialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;phpValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;phpValue&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;igbinary_unserialize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$BinData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Чтобы они заработали, нужно не забыть включить их в php.ini:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[igbinary]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;extension&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;igbinary.so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;; Enable or disable compacting of duplicate strings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;; The default is On.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;;igbinary.compact_strings=On&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;[msgpack]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;extension&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;msgpack.so&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;что-еще-важно-отметить&#34;
    &gt;
        Что еще важно отметить
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#что-еще-важно-отметить&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Что еще важно отметить&#34; href=&#34;#%d1%87%d1%82%d0%be-%d0%b5%d1%89%d0%b5-%d0%b2%d0%b0%d0%b6%d0%bd%d0%be-%d0%be%d1%82%d0%bc%d0%b5%d1%82%d0%b8%d1%82%d1%8c&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;serialize&lt;/code&gt; — стандартная функция PHP.&lt;/li&gt;
&lt;li&gt;JSON — старое и стабильное расширение.&lt;/li&gt;
&lt;li&gt;igbinary — тоже достаточно старая библиотека, давно вышедшая в стабильную ветку.&lt;/li&gt;
&lt;li&gt;msgpack — на данный момент все еще находится в стадии beta. С msgpack мне реально доводилось ловить глюки в ее предыдущих релизах. И если я решусь внедрять ее в продакшен, то только там, где ее ошибки не принесут фатального ущерба.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;тесты&#34;
    &gt;
        Тесты
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#тесты&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Тесты&#34; href=&#34;#%d1%82%d0%b5%d1%81%d1%82%d1%8b&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;1-массив-ассоциативный-вложенные-массивы-и-строки&#34;
    &gt;
        1. Массив ассоциативный: вложенные массивы и строки
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#1-массив-ассоциативный-вложенные-массивы-и-строки&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 1. Массив ассоциативный: вложенные массивы и строки&#34; href=&#34;#1-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2-%d0%b0%d1%81%d1%81%d0%be%d1%86%d0%b8%d0%b0%d1%82%d0%b8%d0%b2%d0%bd%d1%8b%d0%b9-%d0%b2%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%bd%d1%8b%d0%b5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2%d1%8b-%d0%b8-%d1%81%d1%82%d1%80%d0%be%d0%ba%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;v0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s1&#34;&gt;&amp;#39;rnd0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;2e0c883df6e2cb771103f4409f053549094d6787&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;c 16384 элементами&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время сериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время десериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Размер упакованных данных (Kb)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MessagePack&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;25&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;678&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=Off&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;32&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1278&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=On&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;16&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;32&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1120&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JSON&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;14&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;318&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1022&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SERIALIZE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;62&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;39&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2486&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;2-массив-числовой-большие-массивы-целых-чисел&#34;
    &gt;
        2. Массив числовой: большие массивы целых чисел
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#2-массив-числовой-большие-массивы-целых-чисел&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 2. Массив числовой: большие массивы целых чисел&#34; href=&#34;#2-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2-%d1%87%d0%b8%d1%81%d0%bb%d0%be%d0%b2%d0%be%d0%b9-%d0%b1%d0%be%d0%bb%d1%8c%d1%88%d0%b8%d0%b5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2%d1%8b-%d1%86%d0%b5%d0%bb%d1%8b%d1%85-%d1%87%d0%b8%d1%81%d0%b5%d0%bb&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3183&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4527&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4084&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4032&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3920&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;262144&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4455&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время сериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время десериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Размер упакованных данных (Kb)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MessagePack&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;8&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;30&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;769&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=Off&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1920&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=On&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1920&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JSON&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;15&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;107&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;1281&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SERIALIZE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;86&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;44&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3988&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;3-массив-числовой-большие-массивы-длинных-целых-чисел-int64&#34;
    &gt;
        3. Массив числовой: большие массивы длинных целых чисел (int64)
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#3-массив-числовой-большие-массивы-длинных-целых-чисел-int64&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 3. Массив числовой: большие массивы длинных целых чисел (int64)&#34; href=&#34;#3-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2-%d1%87%d0%b8%d1%81%d0%bb%d0%be%d0%b2%d0%be%d0%b9-%d0%b1%d0%be%d0%bb%d1%8c%d1%88%d0%b8%d0%b5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2%d1%8b-%d0%b4%d0%bb%d0%b8%d0%bd%d0%bd%d1%8b%d1%85-%d1%86%d0%b5%d0%bb%d1%8b%d1%85-%d1%87%d0%b8%d1%81%d0%b5%d0%bb-int64&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7679461759223599104&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4898705982311625344&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5880628818820227328&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;262144&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6940876209816891904&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время сериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время десериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Размер упакованных данных (Kb)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MessagePack&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;29&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2305&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=Off&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3456&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=On&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3456&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JSON&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;20&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;172&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;5121&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SERIALIZE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;92&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;49&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;7828&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;4-массив-числовой-большие-массивы-чисел-с-плавающей-точкой-float&#34;
    &gt;
        4. Массив числовой: большие массивы чисел с плавающей точкой (float)
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#4-массив-числовой-большие-массивы-чисел-с-плавающей-точкой-float&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 4. Массив числовой: большие массивы чисел с плавающей точкой (float)&#34; href=&#34;#4-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2-%d1%87%d0%b8%d1%81%d0%bb%d0%be%d0%b2%d0%be%d0%b9-%d0%b1%d0%be%d0%bb%d1%8c%d1%88%d0%b8%d0%b5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2%d1%8b-%d1%87%d0%b8%d1%81%d0%b5%d0%bb-%d1%81-%d0%bf%d0%bb%d0%b0%d0%b2%d0%b0%d1%8e%d1%89%d0%b5%d0%b9-%d1%82%d0%be%d1%87%d0%ba%d0%be%d0%b9-float&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00038631346578366&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00016131634134538&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00043595779928503&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00011754334410814&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00049353469548909&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.2391680201184E-5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;262144&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.00041876046901173&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время сериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время десериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Размер упакованных данных (Kb)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MessagePack&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;9&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;28&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2305&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=Off&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3456&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=On&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;11&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;33&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;3456&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JSON&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;75&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;197&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;5061&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SERIALIZE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;264&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;176&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;8538&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;5-массив-строковый-большие-массивы-длинных-строк&#34;
    &gt;
        5. Массив строковый: большие массивы длинных строк
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/12/serialize-php/#5-массив-строковый-большие-массивы-длинных-строк&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor 5. Массив строковый: большие массивы длинных строк&#34; href=&#34;#5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2-%d1%81%d1%82%d1%80%d0%be%d0%ba%d0%be%d0%b2%d1%8b%d0%b9-%d0%b1%d0%be%d0%bb%d1%8c%d1%88%d0%b8%d0%b5-%d0%bc%d0%b0%d1%81%d1%81%d0%b8%d0%b2%d1%8b-%d0%b4%d0%bb%d0%b8%d0%bd%d0%bd%d1%8b%d1%85-%d1%81%d1%82%d1%80%d0%be%d0%ba&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;array&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;f7df8cb47630b8cd7eb73d0da7a23b9c01aaaa84f718499c1c8cef6730f9fd03c8125cab&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;d30f79cf7fef47bd7a5611719f936539bec0d2e93bcf6eecb2611212e088d0d91f2ade9c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;86bce22a4d2805649853ac7909c4efb4dd18f255086af6e4641abb18caafc151b9aa95c8&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;63afd0edc0371ad842d7a7ecc76260be4bc3e8c0da6cb383f8f9e58f2c8af88a8c0eb65e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;13c80015875a668e8fc059517ffd124abbda63c12d95666e2649fcfc6e3af75e09f5adb9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;mi&#34;&gt;32768&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;0e3808238b738aafc13a2a62f36d2a49dec4e191c22abfa379f38b5b0411bc11fa9bf92f&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время сериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Время десериализации (msec)&lt;/th&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;Размер упакованных данных (Kb)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MessagePack&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;5&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2401&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=Off&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;4&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2464&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;igbinary&lt;br&gt;compact_strings=On&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;21&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;6&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2463&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;JSON&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;28&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;16&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2401&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SERIALIZE&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;10&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;7&lt;/td&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;2806&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;p&gt;Замечу, что приведенные в таблицах данные являются примерными и зависят от данных. Так как данные у меня заполнялись случайным образом, то цифры получались разные, но разница несущественна и в целом эти цифры отражают реальную картину.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Разжился SSD диском</title>
            <link href="https://valmat.ru/posts/archive/2013/12/ssd/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/12/ssd/</id>
            <published>2013-12-02T11:55:00+00:00</published>
            <updated>2013-12-02T11:55:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Вот и я разжился SSD диском.&lt;/p&gt;
&lt;!-- ![SSD диск](./02.12.13+-+1) --&gt;
&lt;p&gt;Будет на чем тестить NoSQL SSD хранилища.&lt;/p&gt;
&lt;p&gt;В планах потестить на нем RocksDB, LevelDB и, возможно, RethinkDB.&lt;/p&gt;
&lt;!-- PS: а вот так он встал в мой ноут

![SSD в ноутбуке](./02.12.13+-+2)
 --&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Пластилиновый мультик</title>
            <link href="https://valmat.ru/posts/archive/2013/03/plastylynovyy-multik/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/03/plastylynovyy-multik/</id>
            <published>2013-03-04T08:50:00+00:00</published>
            <updated>2013-03-04T08:50:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Сделали с дочей мультик из пластилина.&lt;/p&gt;
&lt;p&gt;Делается так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert -delay &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; -loop &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; *.jpg mygif.gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Вот результат:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./myimage.gif&#34;
  alt=&#34;Пластилиновый мультик&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Еще полезное:&lt;/p&gt;
&lt;p&gt;Сделать из кадров ролик:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert -delay &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt; -loop &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; *.jpg mympg.mpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MOV из gif:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;convert mygif.gif mymov.mov
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Видео на YouTube:&lt;/p&gt;
&lt;iframe width=&#34;320&#34; height=&#34;266&#34; src=&#34;https://www.youtube.com/embed/_oHiKSMMwAA&#34; title=&#34;Пластелиновый человечик&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://www.youtube.com/watch?v=_oHiKSMMwAA&#34;
&gt;Смотреть на YouTube&lt;/a&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Топ 7 ботов за сутки</title>
            <link href="https://valmat.ru/posts/archive/2013/03/top7bots/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/03/top7bots/</id>
            <published>2013-03-01T09:32:00+00:00</published>
            <updated>2013-03-01T09:32:00+00:00</updated>
            <content type="html">
                &lt;p&gt;По результатам выборки из логов сервера за 1 сутки.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Googlebot&lt;/strong&gt; — 43 229 запросов&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YandexDirect&lt;/strong&gt; — 21 260&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mediapartners-Google&lt;/strong&gt; — 14 386&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mail.RU_Bot&lt;/strong&gt; — 13 715&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YandexBot&lt;/strong&gt; — 13 079&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AhrefsBot&lt;/strong&gt; — 11 997&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;openstat ru/Bot&lt;/strong&gt; — 2 709&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Выводы:&lt;/strong&gt;&lt;br&gt;
Гугл предсказуемо обошёл всех и вся. Честь и хвала ему.&lt;br&gt;
Удивил Mail.RU, который обошёл Яндекс.&lt;br&gt;
Что касается Яндекса, то очевидно, что приоритет Яндекса — их рекламная сеть. И уже потом поисковые технологии.&lt;/p&gt;
&lt;p&gt;Можно сравнить, какое значение Гугл и Яндекс уделяют своим поисковым и рекламным технологиям в процентном соотношении:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;YandexDirect&lt;/em&gt; — &lt;strong&gt;62%&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;YandexBot&lt;/em&gt; — &lt;strong&gt;38%&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Mediapartners-Google&lt;/em&gt; — &lt;strong&gt;25%&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Googlebot&lt;/em&gt; — &lt;strong&gt;75%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Далее AhrefsBot — собиратель беклинков. Бесполезная (а иногда и вредная) нагрузка на сервер. Вредная потому, что конкуренты смогут видеть то, что им видеть не положено. Его блочим в &lt;code&gt;robots.txt&lt;/code&gt;.&lt;br&gt;
Поскольку есть сомнения, что он вообще читает &lt;code&gt;robots.txt&lt;/code&gt;, то для профилактики делаем примерно так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$http_user_agent&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(Wget|ApacheBench|SISTRIX|AhrefsBot|Teleport)&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;502&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ну и Bot openstat, я считаю, вообще недостоин нашего внимания.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;PS. Чуть не забыл.&lt;/strong&gt;&lt;br&gt;
Получить Top список IP-адресов можно так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat ваши_лог_фалы &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; cut -c -15 &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; uniq -c &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -nr &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -r &lt;span class=&#34;s1&#34;&gt;&amp;#39;s!\s*([0-9]+)\s+([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*!\1\t\2!g&amp;#39;&lt;/span&gt; &amp;gt; top.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;А выборку по отдельным ботам можно получить &lt;code&gt;grep&lt;/code&gt;&amp;lsquo;ом.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Google Chrome и &#34;-&#34; 400 0 &#34;-&#34; &#34;-&#34;</title>
            <link href="https://valmat.ru/posts/archive/2013/01/chrome-400-log/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/01/chrome-400-log/</id>
            <published>2013-01-24T20:46:00+00:00</published>
            <updated>2013-01-24T20:46:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Еще раз к вопросу &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.valmat.ru/2013/01/ban-bot-2.html&#34;
&gt;откуда в логах берутся строки вида&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1.1.1.1 - - [19/Jan/2013:07:19:23 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;При медленном соединении удалось отловить эффект появления таких записей в браузере и увидеть все вживую.&lt;/p&gt;
&lt;p&gt;Вот тут видно, как Chrome отправил два запроса, держит соединение открытым, а потом закрывает:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./404-chrome.png&#34;
  alt=&#34;chrome-400&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;А секундой позже уже загружает то, что его просили.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./404-chrome-1.png&#34;
  alt=&#34;chrome-400-1&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Успел сделать снимки экрана.&lt;/p&gt;
&lt;p&gt;Повторить эксперимент можно либо подключившись к медленному каналу, либо намеренно ограничив скорость соединения на стороне веб-сервера.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Баним ботов. Часть 2</title>
            <link href="https://valmat.ru/posts/archive/2013/01/ban-bot-2/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/01/ban-bot-2/</id>
            <published>2013-01-23T14:21:00+00:00</published>
            <updated>2013-01-23T14:21:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Небольшой анализ логов сервера. Какие странные сущности обитают в Интернете. И как с ними бороться.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;открытые-подключения&#34;
    &gt;
        Открытые подключения
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/01/ban-bot-2/#открытые-подключения&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Открытые подключения&#34; href=&#34;#%d0%be%d1%82%d0%ba%d1%80%d1%8b%d1%82%d1%8b%d0%b5-%d0%bf%d0%be%d0%b4%d0%ba%d0%bb%d1%8e%d1%87%d0%b5%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В логах nginx&amp;rsquo;а обнаружил десятки тысяч записей вида:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1.1.1.1 - - [19/Jan/2013:07:19:23 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:23 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:23 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:34 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:34 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:34 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
1.1.1.1 - - [19/Jan/2013:07:19:34 +0400] &amp;#34;-&amp;#34; 400 0 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Судя по количеству и частоте запросов, достаточно большое число таких запросов сделано именно ботами.&lt;/p&gt;
&lt;p&gt;Казалось бы, легко создать правило для fail2ban и забанить их всех.&lt;/p&gt;
&lt;p&gt;Но такие записи могут создавать и обычные пользователи. Например, если пользователь остановит загрузку или при быстром переходе со страницы на страницу (у меня получилось &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.valmat.ru/2013/01/-400-0-.html&#34;
&gt;отловить такой эффект в Google Chrome&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Суть таких записей такова: открытое и не закрытое соединение.&lt;/p&gt;
&lt;p&gt;Например, если открыть соединение telnet&amp;rsquo;ом и оставить его, то по истечении таймаута появится именно такая запись.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;$ telnet site.ru 80&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Trying 127.0.0.1...
Connected to site.ru.
Escape character is &amp;#39;^]&amp;#39;.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Или можно так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;php&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;for($i=0;$i&amp;gt;500;$i++){$v=&amp;#34;s&amp;#34;.$i;$$v=socket_create(AF_INET,SOCK_STREAM,SOL_TCP);socket_connect($$v,&amp;#34;localhost&amp;#34;, 80);}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Особого вреда такие атаки нанести не могут, т.к. в силу своего асинхронного характера nginx может держать &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://forum.nginx.org/read.php?21,129983,129986#msg-129986&#34;
&gt;достаточно&lt;/a&gt; &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://nginx.org/ru/docs/ngx_core_module.html#worker_connections&#34;
&gt;большое&lt;/a&gt; число открытых соединений. Но специально для таких случаев (а также других недоатак) существуют такие вещи, как модули &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://nginx.org/ru/docs/http/ngx_http_limit_req_module.html&#34;
&gt;ngx_http_limit_req_module&lt;/a&gt; и &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://nginx.org/ru/docs/http/ngx_http_limit_conn_module.html&#34;
&gt;ngx_http_limit_conn_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Про них написано достаточно много, простым гуглением все находится.&lt;/p&gt;
&lt;p&gt;Можно только добавить — не забыть вставить в robots.txt строчку вроде этой:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Crawl-delay: 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(можно дробные значения), чтобы ненароком не забанить поисковых роботов.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;limit_req_zone&lt;/code&gt; должна обязательно стоять (в секции http) до подключения секций server, т.е. до&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;include /etc/nginx/conf.d/*.conf;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Еще некоторых ленивых роботов, передающих не все заголовки, можно развернуть вот таким кодом в секции server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$http_user_agent&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;try-proxy&#34;
    &gt;
        try proxy
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/01/ban-bot-2/#try-proxy&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor try proxy&#34; href=&#34;#try-proxy&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Следующая разновидность ботов пытается использовать nginx в качестве открытого прокси-сервера. Точнее, пытается определить такую возможность.&lt;/p&gt;
&lt;p&gt;Дело в том, что если, например, telnet&amp;rsquo;ом передать заголовок не&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET /index.htm HTTP/1.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;а&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://site.ru/index.htm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;то nginx не разворачивает такой запрос с кодом 400, а обрабатывает его.&lt;/p&gt;
&lt;p&gt;И дальше все зависит от настройки конфигов.&lt;/p&gt;
&lt;p&gt;В некоторых случаях, таким образом можно получить &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://forum.nginx.org/read.php?21,226769,227097#msg-227097&#34;
&gt;открытый http-прокси сервер&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;В общем случае, если site.ru определён в nginx как&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server_name site.ru;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;то дальше вашего сервера запрос не уйдет.&lt;/p&gt;
&lt;p&gt;Вот реальный пример из log-файла:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;178.77.67.27 - - [20/Jan/2013:19:09:43 +0400] &amp;#34;GET http://www.scanproxy.net:80/p-80.html HTTP/1.0&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; KuKu 0.65)&amp;#34;
82.145.35.123 - - [10/Jan/2013:08:11:20 +0400] &amp;#34;GET http://proxyjudge2.proxyfire.net/fastenv HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)&amp;#34;
80.82.215.45 - - [01/Jan/2013:08:59:03 +0400] &amp;#34;GET http://www.scanproxy.net:80/p-80.html HTTP/1.0&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; KuKu 0.65)&amp;#34;
62.193.243.32 - - [01/Jan/2013:23:38:53 +0400] &amp;#34;GET http://www.scanproxy.net:80/p-80.html HTTP/1.0&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; KuKu 0.65)&amp;#34;
46.32.65.23 - - [11/Dec/2012:19:20:15 +0400] &amp;#34;GET http://www.santeh.ru/cgi-bin/textenv.pl HTTP/1.0&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 4.0)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;В основном, лечится это так: запретить использование дефолтного сервера и обработку запросов &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://nginx.org/ru/docs/http/request_processing.html#how_to_prevent_undefined_server_names&#34;
&gt;без имени сервера&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;server {
    listen      80 default_server;
    server_name &amp;#34;&amp;#34;;
    return      444;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Далее, при передаче заголовка (без HTTP/1.1 или HTTP/1.0):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://site.ru/index.htm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Все остальные строки запроса будут проигнорированы.&lt;/p&gt;
&lt;p&gt;Т.е. в запросе (вместо &lt;code&gt;GET /index.htm HTTP/1.1&lt;/code&gt; написано &lt;code&gt;GET http://site.ru/index.htm&lt;/code&gt;):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET http://site.ru/index.htm
Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Charset:windows-1251,utf-8;q=0.7,*;q=0.3
Accept-Language:ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4
Cache-Control:max-age=0
Connection:keep-alive
Host:site.ru
Referer:site.ru/index.htm
User-Agent:TelnetTester
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Будет учтена только первая строка. А значит, поможет уже знакомая нам конструкция:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$http_user_agent&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kn&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Но такая ситуация встречается не часто.&lt;/p&gt;
&lt;p&gt;Кроме ботов, запросы вида &lt;code&gt;GET http://site.ru/index.htm HTTP/1.1&lt;/code&gt; шлет Opera. Во всяком случае, у меня в логах достаточно много строк вроде этой:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;188.162.15.86 - - [05/Jan/2013:09:18:41 +0400] &amp;#34;GET http://opera10beta-turbo.opera-mini.net:80//img/spb_b_1456.jpg HTTP/1.1&amp;#34; 404 162 &amp;#34;http://images.yandex.ru/yandsearch?p=...&amp;#34; &amp;#34;Opera/9.80 (Windows NT 5.1) Presto/2.12.388 Version/12.10&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;битые-заголовки&#34;
    &gt;
        Битые заголовки
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2013/01/ban-bot-2/#битые-заголовки&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Битые заголовки&#34; href=&#34;#%d0%b1%d0%b8%d1%82%d1%8b%d0%b5-%d0%b7%d0%b0%d0%b3%d0%be%d0%bb%d0%be%d0%b2%d0%ba%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;94.41.37.135 - - [11/Jan/2013:08:51:57 +0400] &amp;#34;ЪьЪЮ\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00ЪЧ\x00;CREATOR: gd-jpeg v1.0 (using IJG JPEG v62), quality = 75&amp;#34; 400 166 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
176.213.180.115 - - [07/Jan/2013:16:27:16 +0400] &amp;#34;ЪьЪЮ\x00\x10JFIF\x00\x01\x01\x01\x00`\x00`\x00\x00Ъш\x00C\x00\x02\x01\x01\x02\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x03\x05\x03\x03\x03\x03\x03\x06\x04\x04\x03\x05\x07\x06\x07\x07\x07\x06\x07\x07\x08\x09\x0B\x09\x08\x08&amp;#34; 400 166 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Такие строки создают некоторые браузеры. Как это происходит — я так и не понял. Но нечто подобное я нашел в логах на локальной машине — там, где никаких ботов быть не может. Предположительно, Google Chrome.&lt;/p&gt;
&lt;p&gt;Также весьма вероятно, подобные записи могут создаваться некоторыми ботами, ищущими уязвимости веб-сервера.&lt;/p&gt;
&lt;p&gt;Вот, например, &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://disorder.ru/archives/908&#34;
&gt;http://disorder.ru/archives/908&lt;/a&gt; — человек описал эксплоит для старых версий Nginx, а вот это:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;188.138.88.171 - - [19/Jan/2013:20:05:45 +0400] &amp;#34;GET /w00tw00t.at.ISC.SANS.DFind:) HTTP/1.1&amp;#34; 400 166 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;

50.63.136.60 - - [19/Jan/2013:20:32:27 +0400] &amp;#34;GET /w00tw00t.at.ISC.SANS.Win32:) HTTP/1.1&amp;#34; 400 166 &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;явно адресовано IIS.&lt;/p&gt;
&lt;p&gt;Такие записи просто можно игнорировать. В случае особой настойчивости помогает способ с &lt;code&gt;ngx_http_limit_req_module&lt;/code&gt;, описанный в предыдущем пункте.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Баним ботов. Часть 1</title>
            <link href="https://valmat.ru/posts/archive/2013/01/pma-bot-ban/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/01/pma-bot-ban/</id>
            <published>2013-01-20T11:07:00+00:00</published>
            <updated>2013-01-20T11:07:00+00:00</updated>
            <content type="html">
                &lt;p&gt;В один прекрасный день мне надоело видеть у себя в логах такое вот безобразие:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;113.204.67.51 - - [19/Jan/2013:07:22:08 +0400] &amp;#34;GET /phpmyadmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:12 +0400] &amp;#34;GET /PMA/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:17 +0400] &amp;#34;GET /pma/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:17 +0400] &amp;#34;GET /admin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:18 +0400] &amp;#34;GET /dbadmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:19 +0400] &amp;#34;GET /sql/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:20 +0400] &amp;#34;GET /mysql/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:20 +0400] &amp;#34;GET /myadmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:21 +0400] &amp;#34;GET /phpmyadmin2/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:22 +0400] &amp;#34;GET /phpMyAdmin2/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:23 +0400] &amp;#34;GET /phpMyAdmin-2/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:23 +0400] &amp;#34;GET /php-my-admin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:24 +0400] &amp;#34;GET /sqlmanager/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:25 +0400] &amp;#34;GET /mysqlmanager/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:26 +0400] &amp;#34;GET /p/m/a/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:26 +0400] &amp;#34;GET /php-myadmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:27 +0400] &amp;#34;GET /phpmy-admin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:28 +0400] &amp;#34;GET /webadmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:29 +0400] &amp;#34;GET /sqlweb/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:30 +0400] &amp;#34;GET /websql/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:31 +0400] &amp;#34;GET /webdb/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:31 +0400] &amp;#34;GET /mysqladmin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
113.204.67.51 - - [19/Jan/2013:07:22:32 +0400] &amp;#34;GET /mysql-admin/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;и решил я всех этих мерзких ботов забанить.&lt;/p&gt;
&lt;p&gt;Для чего был создан fail2ban-скрипт &lt;code&gt;phpmyadmin.conf&lt;/code&gt; следующего содержания:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# Fail2Ban configuration file  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;#  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# Author: Valmat  &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Definition&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nv&#34;&gt;failregex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; ^&amp;lt;host&amp;gt; - - &lt;span class=&#34;se&#34;&gt;\[&lt;/span&gt;.*&lt;span class=&#34;se&#34;&gt;\]&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;GET /(phpmyadmin|PMA|pma|admin|dbadmin|sql|mysql|myadmin|phpmyadmin2|phpMyAdmin2|phpMyAdmin-2|php-my-admin|sqlmanager|mysqlmanager|p/m/a|php-myadmin|phpmy-admin|webadmin|sqlweb|websql|webdb|mysqladmin|mysql-admin)/ HTTP/1.1&amp;#34;&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;404&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nv&#34;&gt;ignoreregex&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В &lt;code&gt;/etc/fail2ban/jail.conf&lt;/code&gt; нужно добавить секцию:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;phpmyadmin&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;port&lt;/span&gt;    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; http,https  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;filter&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; phpmyadmin  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;logpath&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; /var/log/nginx/localhost.access.log  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;bantime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;86400&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;maxretry&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;За основу для построения скрипта был взят список:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;phpmyadmin
PMA
pma
admin
dbadmin
sql
mysql
myadmin
phpmyadmin2
phpMyAdmin2
phpMyAdmin-2
php-my-admin
sqlmanager
mysqlmanager
p/m/a
php-myadmin
phpmy-admin
webadmin
sqlweb
websql
webdb
mysqladmin
mysql-admin
2phpmyadmin
MyAdmin
admin/db
admin/pMA
admin/phpMyAdmin
admin/phpmyadmin
admin/sqladmin
admin/sysadmin
admin/web
administrator/PMA
administrator/admin
administrator/db
administrator/phpMyAdmin
administrator/phpmyadmin
administrator/pma
administrator/web
database
db
mysql/admin
mysql/db
mysql/dbadmin
mysql/mysqlmanager
mysql/pMA
mysql/pma
mysql/sqlmanager
mysql/web
phpMyAdmin
phpMyadmin
phpmy
phpmyAdmin
phppma
program
sql/myadmin
sql/php-myadmin
sql/phpMyAdmin
sql/phpMyAdmin2
sql/phpmanager
sql/phpmy-admin
sql/phpmyadmin2
sql/sqladmin
sql/sqlweb
sql/webadmin
sql/webdb
sql/websql
PMA2005
pma2005
phpmanager
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Учитывая логику работы ботов, то что в первую очередь они простукивают каталоги первого уровня, а лишь затем уровнем выше, этот список можно сократить до такого:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;phpmyadmin
PMA
pma
admin
dbadmin
sql
mysql
myadmin
phpmyadmin2
phpMyAdmin2
phpMyAdmin-2
php-my-admin
sqlmanager
mysqlmanager
p/m/a
php-myadmin
phpmy-admin
webadmin
sqlweb
websql
webdb
mysqladmin
mysql-admin
2phpmyadmin
MyAdmin
PMA2005
administrator
database
db
phpMyAdmin
phpMyadmin
phpmanager
phpmy
phpmyAdmin
phppma
pma2005
program
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;В результате получается приведённый выше конфиг.&lt;/p&gt;
&lt;p&gt;Для проверки используем команду:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fail2ban-regex &amp;#39;113.204.67.51 - - [19/Jan/2013:07:22:25 +0400] &amp;#34;GET /mysqlmanager/ HTTP/1.1&amp;#34; 404 564 &amp;#34;-&amp;#34; &amp;#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)&amp;#34;&amp;#39; &amp;#39;^&amp;lt;host&amp;gt; - - \[.*\] &amp;#34;GET /(phpmyadmin|PMA|pma|admin|dbadmin|sql|mysql|myadmin|phpmyadmin2|phpMyAdmin2|phpMyAdmin-2|php-my-admin|sqlmanager|mysqlmanager|p/m/a|php-myadmin|phpmy-admin|webadmin|sqlweb|websql|webdb|mysqladmin|mysql-admin|2phpmyadmin|MyAdmin|PMA2005|administrator|database|db|phpMyAdmin|phpMyadmin|phpmanager|phpmy|phpmyAdmin|phppma|pma2005|program)/ HTTP/1.1&amp;#34; 404&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Как в PHP узнать протокол (https)</title>
            <link href="https://valmat.ru/posts/archive/2013/01/php-scheme-https/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2013/01/php-scheme-https/</id>
            <published>2013-01-17T16:07:00+00:00</published>
            <updated>2013-01-17T16:07:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Оказывается, узнать, что сайт использует &lt;strong&gt;SSL&lt;/strong&gt; и страница открыта по протоколу &lt;strong&gt;https&lt;/strong&gt; — не настолько тривиальная задача, чтобы решить её с наскока.&lt;br&gt;
Однако, решение оказалось достаточно простое.&lt;/p&gt;
&lt;p&gt;Проблема заключается в том, что для определения протокола могут быть использованы переменные:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTPS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTP_SCHEME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTP_X_FORWARDED_PROTO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И косвенно:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SERVER_PORT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Но все эти переменные, кроме номера порта, почти наверняка будут отсутствовать.&lt;br&gt;
Определять http-схему, основываясь только на номере порта — приемлемое, но не очень гибкое решение.&lt;/p&gt;
&lt;p&gt;Я сделал так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$scheme&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTP_SCHEME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTP_SCHEME&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;isset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTPS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;HTTPS&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;443&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$_SERVER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SERVER_PORT&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;https&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И для надёжности, чтобы &lt;code&gt;$_SERVER[&#39;HTTP_SCHEME&#39;]&lt;/code&gt; была определена, в &lt;code&gt;nginx.conf&lt;/code&gt; добавил строчку:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# for SSL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;fastcgi_param&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;HTTP_SCHEME&lt;/span&gt;  &lt;span class=&#34;nv&#34;&gt;$scheme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Мозаика из фотографий с помощью convert (ImageMagick)</title>
            <link href="https://valmat.ru/posts/archive/2012/12/mosaic-convert-imagemagic/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2012/12/mosaic-convert-imagemagic/</id>
            <published>2012-12-06T21:56:00+00:00</published>
            <updated>2012-12-06T21:56:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Из фотографий или картинок одинакового размера можно сделать мозаику. Получается интересный эффект.&lt;/p&gt;
&lt;p&gt;Для этого я написал два bash-скрипта.&lt;/p&gt;
&lt;p&gt;Первый уменьшает размеры фотографий, второй делает из миниатюр мозаику.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;скрипт-для-уменьшения-фотографий&#34;
    &gt;
        Скрипт для уменьшения фотографий
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2012/12/mosaic-convert-imagemagic/#скрипт-для-уменьшения-фотографий&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Скрипт для уменьшения фотографий&#34; href=&#34;#%d1%81%d0%ba%d1%80%d0%b8%d0%bf%d1%82-%d0%b4%d0%bb%d1%8f-%d1%83%d0%bc%d0%b5%d0%bd%d1%8c%d1%88%d0%b5%d0%bd%d0%b8%d1%8f-%d1%84%d0%be%d1%82%d0%be%d0%b3%d1%80%d0%b0%d1%84%d0%b8%d0%b9&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SW&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;150&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;150&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FROMDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;fromdir&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;TODIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;todir&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; name in &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ls &lt;span class=&#34;nv&#34;&gt;$FROMDIR&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  convert -resize &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SW&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;x&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;SH&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; -strip &lt;span class=&#34;nv&#34;&gt;$FROMDIR&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$TODIR&lt;/span&gt;/&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SW&lt;/code&gt; — ограничение ширины миниатюры;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SH&lt;/code&gt; — ограничение высоты миниатюры;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FROMDIR&lt;/code&gt; — каталог, в котором находятся фотографии;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TODIR&lt;/code&gt; — каталог, в который будут сложены миниатюры.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;скрипт-для-создания-мозаики-из-миниатюр&#34;
    &gt;
        Скрипт для создания мозаики из миниатюр
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2012/12/mosaic-convert-imagemagic/#скрипт-для-создания-мозаики-из-миниатюр&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Скрипт для создания мозаики из миниатюр&#34; href=&#34;#%d1%81%d0%ba%d1%80%d0%b8%d0%bf%d1%82-%d0%b4%d0%bb%d1%8f-%d1%81%d0%be%d0%b7%d0%b4%d0%b0%d0%bd%d0%b8%d1%8f-%d0%bc%d0%be%d0%b7%d0%b0%d0%b8%d0%ba%d0%b8-%d0%b8%d0%b7-%d0%bc%d0%b8%d0%bd%d0%b8%d0%b0%d1%82%d1%8e%d1%80&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SW&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;150&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;SH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;112&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;COLS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;REZFILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;mosaic-`date &amp;#34;&lt;/span&gt;+%Y-%m-%d_%H_%M_%S&lt;span class=&#34;s2&#34;&gt;&amp;#34;`.jpg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FDIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;small&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;convert &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; name in &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;ls &lt;span class=&#34;nv&#34;&gt;$FDIR&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sort -R&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34; -page +&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$COLS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)*&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$SW&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;]+&lt;/span&gt;$&lt;span class=&#34;s2&#34;&gt;[((&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$COLS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$COLS&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;)*&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$SH&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;] &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$FDIR&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$i&lt;/span&gt;+1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;done)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; -mosaic &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$REZFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Здесь:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SW&lt;/code&gt; — ширина миниатюры;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SH&lt;/code&gt; — высота миниатюры;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COLS&lt;/code&gt; — количество столбцов;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REZFILE&lt;/code&gt; — имя файла с мозаикой;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FDIR&lt;/code&gt; — каталог с миниатюрами.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Важно:&lt;/strong&gt; Все миниатюры должны быть одинакового размера, иначе будут пустоты.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Чтобы мозаика повторяла пропорции исходных фотографий, должно быть:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SW == SH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Число фотографий должно равняться произведению:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SW * SH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;В последнем скрипте используется &lt;code&gt;sort -R&lt;/code&gt; для случайного упорядочивания. Если его убрать, будет тот порядок, в котором выдает &lt;code&gt;ls&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Вот пример мозаики из аватарок пользователей сайта:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./mosaic-xmpl.jpg&#34;
  alt=&#34;Пример мозаики&#34;
  
/&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Установка Redis via unix.socket</title>
            <link href="https://valmat.ru/posts/archive/2011/12/redis-via-unixsocket/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2011/12/redis-via-unixsocket/</id>
            <published>2011-12-03T07:05:00+00:00</published>
            <updated>2011-12-03T07:05:00+00:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;о-том-как-установить-redis-в-качестве-сервера-на-linux-и-обращаться-к-нему-через-unixsocket&#34;
    &gt;
        О том, как установить Redis в качестве сервера на Linux и обращаться к нему через Unix.socket
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2011/12/redis-via-unixsocket/#о-том-как-установить-redis-в-качестве-сервера-на-linux-и-обращаться-к-нему-через-unixsocket&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor О том, как установить Redis в качестве сервера на Linux и обращаться к нему через Unix.socket&#34; href=&#34;#%d0%be-%d1%82%d0%be%d0%bc-%d0%ba%d0%b0%d0%ba-%d1%83%d1%81%d1%82%d0%b0%d0%bd%d0%be%d0%b2%d0%b8%d1%82%d1%8c-redis-%d0%b2-%d0%ba%d0%b0%d1%87%d0%b5%d1%81%d1%82%d0%b2%d0%b5-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%b0-%d0%bd%d0%b0-linux-%d0%b8-%d0%be%d0%b1%d1%80%d0%b0%d1%89%d0%b0%d1%82%d1%8c%d1%81%d1%8f-%d0%ba-%d0%bd%d0%b5%d0%bc%d1%83-%d1%87%d0%b5%d1%80%d0%b5%d0%b7-unixsocket&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;По мотивам куцей доки: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://redis.io/topics/quickstart&#34;
&gt;http://redis.io/topics/quickstart&lt;/a&gt; и &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://redis.io/download&#34;
&gt;http://redis.io/download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;От рута делаем:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /usr/src/redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /usr/src/redis
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://redis.googlecode.com/files/redis-2.4.4.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar xzf redis-2.4.4.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; redis-2.4.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Если тесты прошли нормально (должно быть написано что-то вроде этого: &amp;ldquo;\o/ All tests passed without errors!&amp;rdquo;), то двигаемся дальше.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv ../redis-2.4.4.tar.gz ./redis-2.4.4.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp src/redis-server /usr/local/bin/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp src/redis-cli /usr/local/bin/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /etc/redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /var/redis
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее в доке предлагается сделать &lt;code&gt;cp utils/redis_init_script /etc/init.d/redis_6379&lt;/code&gt;, где 6379 — номер дефолтного порта, но я планирую, что Redis будет работать у меня через unix.socket, поэтому будет так (везде далее нолик появляется именно по этой же причине):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp utils/redis_init_script /etc/init.d/redis_0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь нужно подредактировать конфиг:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano /etc/init.d/redis_0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Редактированию там подлежит только номер порта (6-я строка):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REDISPORT=6379  --&amp;gt;  REDISPORT=0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Если номер порта не менять, то и редактировать ничего не нужно.&lt;/p&gt;
&lt;p&gt;Но в моем случае, поскольку я планирую запускать редис через unix socket, то нужно еще внести несколько изменений:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Добавляем переменную:
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UNIXSOCK=/tmp/redis.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Выражение &lt;code&gt;$CLIEXEC -p $REDISPORT shutdown&lt;/code&gt; в секции &amp;ldquo;stop&amp;rdquo; заменяем на &lt;code&gt;$CLIEXEC -s $UNIXSOCK shutdown&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Вот что получилось:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#REDISPORT=6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;UNIXSOCK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/redis.sock
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OWNER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nobody
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local/bin/redis-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CLIEXEC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local/bin/redis-cli
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PIDFILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/run/redis_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.pid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CONF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/redis/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.conf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; in
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  start&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; exists, process is already running or crashed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Starting Redis server...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$EXEC&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CONF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  stop&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exist, process is not running&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Stopping ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;#$CLIEXEC -p $REDISPORT shutdown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$CLIEXEC&lt;/span&gt; -s &lt;span class=&#34;nv&#34;&gt;$UNIXSOCK&lt;/span&gt; shutdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x /proc/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Waiting for Redis to shutdown .&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep 0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep 0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Redis stopped&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  restart&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exist, process is not running&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Stopping ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;#$CLIEXEC -p $REDISPORT shutdown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$CLIEXEC&lt;/span&gt; -s &lt;span class=&#34;nv&#34;&gt;$UNIXSOCK&lt;/span&gt; shutdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x /proc/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Waiting for Redis to shutdown ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Redis stopped&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Starting Redis server...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$EXEC&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CONF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  *&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please use start or stop as first argument&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее нам нужно скопировать файл конфига:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp redis.conf /etc/redis/0.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;И отредактировать его:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano /etc/redis/0.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В нем меняем следующее:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#daemonize no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;daemonize yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#pidfile /var/run/redis.pid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;pidfile /var/run/redis_0.pid&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#port 6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;port 0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;bind 127.0.0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;unixsocket /tmp/redis.sock&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;unixsocketperm 755&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#loglevel verbose&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;loglevel warning&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#logfile stdout&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;logfile /var/log/redis_0.log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#databases 16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;databases 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В секции &amp;ldquo;SNAPSHOTTING&amp;rdquo; можно поменять стратегию дампов. Я сделал так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;save 54000 10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;save 3600 5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;dir /var/redis/dumps/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;dbfilename dump_0.rdb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Поскольку в сеть смотреть мой редис не будет, то репликацию я в нем отключил (секция &amp;lsquo;REPLICATION&amp;rsquo;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#slave-serve-stale-data yes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;slave-serve-stale-data no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее, поскольку, как и сказано в конфиге, я собираюсь использовать редис не в качестве основной БД, а в качестве кеша, то стоит установить maxmemory, чтобы редис ненароком не сожрал всю память:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 256 MB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;maxmemory 268435456&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Поскольку maxmemory установлен, то нужно установить и maxmemory-policy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# maxmemory-policy volatile-lru&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;maxmemory-policy volatile-ttl&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Выбрал &lt;code&gt;volatile-ttl&lt;/code&gt;, потому что не знаю, как работает алгоритм LRU.&lt;/p&gt;
&lt;p&gt;Отключаем appendfsync:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;appendfsync no&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Все, на этом правки конфига закончены.&lt;/p&gt;
&lt;p&gt;Для логов мы указывали каталог &lt;code&gt;/var/redis/dumps&lt;/code&gt;. Его нужно не забыть создать:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /var/redis/dumps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Проверяем, все ли работает. Проверить можно так:&lt;/p&gt;
&lt;p&gt;Запускаем:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/redis_0 start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Потом:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;redis-cli -s /tmp/redis.sock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В консоли redis:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SET key1 &amp;#34;Test&amp;#34;
OK
GET key1
&amp;#34;Test&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Если все нормально, то добавляем в автозагрузку:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;update-rc.d redis_0 defaults
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;&lt;br&gt;
В логах редиса он сообщил мне следующее предупреждение:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &amp;#39;vm.overcommit_memory = 1&amp;#39; to /etc/sysctl.conf and then reboot or run the command &amp;#39;sysctl vm.overcommit_memory=1&amp;#39; for this to take effect.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Поскольку я готов мириться с тем, что он не будет дампить себя на диск, то это предупреждение проигнорирую.
А вообще решение вижу таким:&lt;/p&gt;
&lt;p&gt;В &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; ничего, естественно, не вносим, но в &lt;code&gt;/etc/init.d/redis_0&lt;/code&gt;&lt;br&gt;
В секции старт, перед запуском редиса, сохраняем системное значение overcommit_memory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;0600&lt;/span&gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /proc/sys/vm/overcommit_memory &amp;gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sysctl vm.overcommit_memory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;А в секцию стоп возвращаем системное значение:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OCMSYS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat /tmp/overcommit_memory_bfr_redis&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sysctl vm.overcommit_memory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OCMSYS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Примерно так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#REDISPORT=6379&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;UNIXSOCK&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/redis.sock
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;OWNER&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;nobody
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;EXEC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local/bin/redis-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CLIEXEC&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/usr/local/bin/redis-cli
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PIDFILE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/var/run/redis_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.pid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;CONF&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/redis/&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;REDISPORT&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.conf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#fix WARNING about overcommit_memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;FWOBOM&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;FALSE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; in
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  start&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; exists, process is already running or crashed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Starting Redis server...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;# -- fix WARNING about overcommit_memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TRUE&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$FWOBOM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                touch /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                chmod &lt;span class=&#34;m&#34;&gt;0600&lt;/span&gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                cat /proc/sys/vm/overcommit_memory &amp;gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                sysctl vm.overcommit_memory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;# &amp;lt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$EXEC&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CONF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  stop&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exist, process is not running&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Stopping ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;#$CLIEXEC -p $REDISPORT shutdown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$CLIEXEC&lt;/span&gt; -s &lt;span class=&#34;nv&#34;&gt;$UNIXSOCK&lt;/span&gt; shutdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x /proc/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Waiting for Redis to shutdown .&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep 0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep 0.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;..&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;# -- fix WARNING about overcommit_memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TRUE&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$FWOBOM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nv&#34;&gt;OCMSYS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat /tmp/overcommit_memory_bfr_redis&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                sysctl vm.overcommit_memory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$OCMSYS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;# &amp;lt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Redis stopped&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  restart&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -f &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; does not exist, process is not running&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$PIDFILE&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Stopping ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;c1&#34;&gt;#$CLIEXEC -p $REDISPORT shutdown&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nv&#34;&gt;$CLIEXEC&lt;/span&gt; -s &lt;span class=&#34;nv&#34;&gt;$UNIXSOCK&lt;/span&gt; shutdown
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -x /proc/&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;PID&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Waiting for Redis to shutdown ...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  sleep &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Redis stopped&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Starting Redis server...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;# -- fix WARNING about overcommit_memory&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TRUE&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$FWOBOM&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        touch /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        chmod &lt;span class=&#34;m&#34;&gt;0600&lt;/span&gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        cat /proc/sys/vm/overcommit_memory &amp;gt; /tmp/overcommit_memory_bfr_redis
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        sysctl vm.overcommit_memory&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;c1&#34;&gt;# &amp;lt;--&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nv&#34;&gt;$EXEC&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$CONF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  *&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please use start or stop as first argument&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;PPS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;overcommit_memory влияет на выделение памяти ядром и на работу OOM Killer.&lt;br&gt;
&lt;code&gt;vm.overcommit_memory=0&lt;/code&gt; — более безопасный вариант, т.к. кто его знает, кого грохнет OOM Killer, если память кончится.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Если tcp сокет устраивает, а нужно только (возможно задать порт), то в каталоге utils с исходниками есть скрипт &lt;code&gt;install_server.sh&lt;/code&gt;, запуск которого сделает большую часть грязной работы, описанной выше.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;По поводу maxmemory-policy volatile-lru vs volatile-ttl: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://habrahabr.ru/blogs/development/136758/&#34;
&gt;статья на хабре про LRU&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Библиотека для загрузки фотографий на сайт</title>
            <link href="https://valmat.ru/posts/archive/2011/10/transimage-php/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2011/10/transimage-php/</id>
            <published>2011-10-01T11:24:00+00:00</published>
            <updated>2011-10-01T11:24:00+00:00</updated>
            <content type="html">
                &lt;p&gt;&lt;strong&gt;transImage&lt;/strong&gt; — это &lt;em&gt;PHP библиотека для простой загрузки фотографий на сайт&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Она умеет:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Получать изображение из файла, автоматически нормализовать его размер для экономии памяти&lt;/li&gt;
&lt;li&gt;Автоматически поворачивать исходное изображение по данным Exif&lt;/li&gt;
&lt;li&gt;Создавать копии себя с изменёнными размерами, изменять свой размер&lt;/li&gt;
&lt;li&gt;Наносить водяные знаки. Поддерживает любые водяные знаки, соответствующие интерфейсу &lt;code&gt;waterMark&lt;/code&gt; (см. код)&lt;/li&gt;
&lt;li&gt;Выводить результат клиенту или сохранять его в файловую систему&lt;/li&gt;
&lt;li&gt;Подкладывать белый фон, если исходное изображение поддерживает прозрачность&lt;/li&gt;
&lt;li&gt;Быстро создавать миниатюру для предпросмотра, используя миниатюру из Exif&lt;/li&gt;
&lt;li&gt;Преобразовывать изображения в строку для использования их с &lt;code&gt;data:URI&lt;/code&gt;. В этом случае небольшие изображения можно передавать с другими параметрами в формате JSON (при использовании Ajax)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Для более подробной информации смотрите комментарии в коде.&lt;/p&gt;
&lt;p&gt;Подходит большинству сайтов, которым нужно получить от клиента фотографию, правильно преобразовать её в соответствии с Exif, создать несколько вариантов с разными размерами и, возможно, нанести водяной знак.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Не рекомендую использовать её для выдачи клиенту (браузеру) изображений больших размеров.&lt;/strong&gt; Эта функция несёт исключительно демонстративную нагрузку.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Лицензия:&lt;/strong&gt; BSD.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub repo:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./ghlogo.png&#34;
  alt=&#34;GitHub Logo&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://github.com/valmat/transImage&#34;
&gt;https://github.com/valmat/transImage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./transImage_640x480.png&#34;
  alt=&#34;Пример работы transImage&#34;
  
/&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Замена салонного фильтра на Fiat Albea</title>
            <link href="https://valmat.ru/posts/archive/2011/09/fiat-albea-cabin-filter/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2011/09/fiat-albea-cabin-filter/</id>
            <published>2011-09-02T17:23:00+00:00</published>
            <updated>2011-09-02T17:23:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Для замены салонного фильтра понадобятся:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;фильтр&lt;/li&gt;
&lt;li&gt;крестовая отвертка&lt;/li&gt;
&lt;li&gt;фонарик&lt;/li&gt;
&lt;li&gt;тряпка под коленки&lt;/li&gt;
&lt;li&gt;хорошая погода&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Операция занимает 15 минут. Перед входом со стороны переднего пассажира лучше бросить тряпку, потому что, чтобы добраться до фильтра, придётся встать на колени и залезть под бардачок.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./1.jpg_new.jpg&#34;
  alt=&#34;Салон Fiat Albea, вид на место установки фильтра&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./2.jpg_new.jpg&#34;
  alt=&#34;Вид под бардачком, где расположен салонный фильтр&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Фильтр находится под бардачком.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./3.jpg_new.jpg&#34;
  alt=&#34;Расположение фильтра крупным планом&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./4.jpg_new.jpg&#34;
  alt=&#34;Крышка фильтра&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Крепится двумя шурупами.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./5.jpg_new.jpg&#34;
  alt=&#34;Откручивание креплений&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./6.jpg_new.jpg&#34;
  alt=&#34;Снятие крышки фильтра&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./7.jpg_new.jpg&#34;
  alt=&#34;Вид на фильтр после снятия крышки&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Следующие две фотографии должны сподвигнуть увидевших их на срочную замену фильтра в своей машине. Я не менял фильтр два года.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./8.jpg_new.jpg&#34;
  alt=&#34;Старый фильтр, вид 1&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./9.jpg_new.jpg&#34;
  alt=&#34;Старый фильтр, вид 2&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Я поставил себе угольный фильтр. Его код: &lt;strong&gt;9.7.541&lt;/strong&gt; (260 руб. на экзисте).&lt;/p&gt;
&lt;p&gt;Можно не извращаться и поставить обычный — будет дешевле. Код обычного фильтра: &lt;strong&gt;9.7.540&lt;/strong&gt; (150 руб. на экзисте).&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Установка ветровиков на Fiat Albea</title>
            <link href="https://valmat.ru/posts/archive/2011/09/fiat-albea/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2011/09/fiat-albea/</id>
            <published>2011-09-02T14:58:00+00:00</published>
            <updated>2011-09-02T14:58:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Наконец-то установил ветровики на свой Фиат.&lt;/p&gt;
&lt;p&gt;Вот что получилось:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011133.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 1&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011134.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 2&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011135.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 3&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011136.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 4&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011137.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 5 (вертикальное фото)&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011138.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 6&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011139.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 7&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011140.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 8&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011142.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 9&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./02092011143.jpg&#34;
  alt=&#34;Fiat Albea с ветровиками, фото 10&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Код дефлекторов: &lt;strong&gt;D07061&lt;/strong&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Рыбацкие снасти из Китая</title>
            <link href="https://valmat.ru/posts/archive/2011/04/china-fishing-tackle/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2011/04/china-fishing-tackle/</id>
            <published>2011-04-11T16:22:00+00:00</published>
            <updated>2011-04-11T16:22:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Сегодня наконец-то пришла моя рыбацкая посылка из Гонконга.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./0.jpg&#34;
  alt=&#34;Посылка из Гонконга&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;А именно, сделал небольшой пробный заказ на китайском сайте &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.focalprice.com/detail_HL568X.html&#34;
&gt;focalprice.com&lt;/a&gt;.&lt;br&gt;
До этого заказывал только на dealextreme.com.&lt;/p&gt;
&lt;p&gt;Заказывал:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.focalprice.com/detail_HL568X.html&#34;
&gt;Воблер&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.focalprice.com/detail_HL555X.html&#34;
&gt;Набор воблеров&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.focalprice.com/detail_HL289X.html&#34;
&gt;Набор виброхвостов&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.focalprice.com/detail_HL332G.html&#34;
&gt;Доставалку крючка из щучьей пасти&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Шло около месяца, хотя я надеялся, что придет быстрее. Рыболовный сезон откроется не скоро, но тем не менее стоит учитывать. Отправили на следующий день после заказа — это, безусловно, плюс. В делекстриме бывает, что по две недели ждёшь отправки.&lt;/p&gt;
&lt;p&gt;Качество товара вполне ожидаемое. Примерно то же самое продаётся у нас в 90% рыбацких магазинов, но за большие деньги.&lt;/p&gt;
&lt;p&gt;Воблер пришёл другой расцветки. Я заказывал жёлтого цвета, пришёл серебристый с красной башкой:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./HL568X.JPG&#34;
  alt=&#34;Воблер — пришёл другой расцветки&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Виброхвосты, я ожидал, должны были быть побольше. Но тут уж сам виноват — на сайте размеры указаны. Хотя, впрочем, я не расстроился. Маленькую рыбу тоже нужно чем-то ловить.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./6.jpg&#34;
  alt=&#34;Виброхвосты&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Джиги, как видно, тоже маленькие — грамм по пять.&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./2.jpg&#34;
  alt=&#34;Джиги&#34;
  
/&gt;
&lt;img
  src=&#34;./1.jpg&#34;
  alt=&#34;Джиги, вид 2&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./4.jpg&#34;
  alt=&#34;Джиги, вид 3&#34;
  
/&gt;
&lt;img
  src=&#34;./3.jpg&#34;
  alt=&#34;Джиги, вид 4&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./7.jpg&#34;
  alt=&#34;Джиги, вид 5&#34;
  
/&gt;
&lt;img
  src=&#34;./5.jpg&#34;
  alt=&#34;Джиги, вид 6&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Также обратил внимание, что посылка почему-то шла через Брянск, и на Брянской таможне её вскрывали:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./10.JPG&#34;
  alt=&#34;Посылка вскрыта на таможне&#34;
  
/&gt;
&lt;img
  src=&#34;./9.jpg&#34;
  alt=&#34;Маркировка после вскрытия&#34;
  
/&gt;&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>php Cacher</title>
            <link href="https://valmat.ru/posts/archive/2010/10/php-cacher/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/10/php-cacher/</id>
            <published>2010-10-30T10:48:00+00:00</published>
            <updated>2010-10-30T10:48:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Опубликовал набор классов для кеширования:&lt;br&gt;
&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://github.com/valmat/Cacher&#34;
&gt;http://github.com/valmat/Cacher&lt;/a&gt;&lt;br&gt;
Опубликовано под лицензией&lt;br&gt;
GPL v.3 (&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.gnu.org/licenses/gpl.txt&#34;
&gt;http://www.gnu.org/licenses/gpl.txt&lt;/a&gt;)&lt;br&gt;
То есть свободно для использования и изменения. Разумеется, приветствуются любые исправления и дополнения.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;назначение&#34;
    &gt;
        Назначение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-cacher/#назначение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Назначение&#34; href=&#34;#%d0%bd%d0%b0%d0%b7%d0%bd%d0%b0%d1%87%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Мне нужен был очень простой, но в то же время мощный кеширующий модуль с понятной логикой. При этом он должен быть пригодным для работы на односерверном, но в то же время нагруженном проекте.&lt;/p&gt;
&lt;p&gt;Также немаловажным моментом является возможность прозрачно менять стратегию кеширования в зависимости от текущего уровня нагрузки проекта.&lt;/p&gt;
&lt;p&gt;То есть решение должно удовлетворять требованию изменять стратегию кеширования по мере роста нагрузки на проект и по мере изменения аппаратных возможностей (речь об ОЗУ) сервера.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;архитектура&#34;
    &gt;
        Архитектура
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-cacher/#архитектура&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Архитектура&#34; href=&#34;#%d0%b0%d1%80%d1%85%d0%b8%d1%82%d0%b5%d0%ba%d1%82%d1%83%d1%80%d0%b0&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Основными логическими единицами являются:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cacher&lt;/strong&gt; — фронтенд к кеширующим классам.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cacher_Backend&lt;/strong&gt; — собственно сами кеширующие классы.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Слоты&lt;/strong&gt; — кеширование и доступ к кешу осуществляется через слоты.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Теги&lt;/strong&gt; — для упрощения управления кешем и, главным образом, для переуеширования.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Типы кеширования&lt;/strong&gt; — для прозрачного изменения стратегии кеширования. То есть конкретный кеширующий бекенд подключается только через слот (или тег), которые, в свою очередь, оперируют типами. Таким образом, для изменения стратегии кеширования нужно всего лишь поменять привязку типов к бекендам.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;использование&#34;
    &gt;
        Использование
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-cacher/#использование&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Использование&#34; href=&#34;#%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;class-cacher&#34;
    &gt;
        class Cacher
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-cacher/#class-cacher&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor class Cacher&#34; href=&#34;#class-cacher&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Требует наличия классов, унаследованных от Cacher_Backend — семейство классов, реализующих бэкэнд для класса Cacher.&lt;/p&gt;
&lt;p&gt;Все операции с кешем осуществляются на низшем уровне через тот или иной бекенд.&lt;/p&gt;
&lt;p&gt;Бэкэндом может быть файловая система, shared memory, memcache, Sqlite и другие системы кеширования.&lt;/p&gt;
&lt;p&gt;Для работы с классом используются слоты и теги. Слоты реализованы в виде набора дружественных функций и неявно зашиты в интерфейс текущего класса.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h4 id=&#34;пример-использования&#34;
    &gt;
        Пример использования
    &lt;/h4&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-cacher/#пример-использования&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Пример использования&#34; href=&#34;#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%80-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AnyObj&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// может быть класс, массив или другой объект. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// На основании этого объекта слот-функция вычислит ключ и, возможно, другие параметры (бэкэнд и время жизни).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;Slot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AniObj&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AniObj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Инициализируем слот кеширования. Первый параметр — имя слота, второй — наш объект
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Получаем данные
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$CacheData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Если данные из кеша получить не удалось...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$CacheData&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;GetFromAnyExternal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Получаем данные из внешнего хранилища
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AniTagData&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AniTagDataObj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Создаем и сразу же добавляем новый тег к слоту перед сохранением в кеш
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nv&#34;&gt;$tag2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AniTagData2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AniTagDataObj1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Создаем новый тег
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;addTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$tag2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Добавляем новый тег к слоту перед сохранением в кеш
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$CacheData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Кешируем данные
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Если затем нужно сбросить какой-нибудь тег, то нужно будет сделать так:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Cacher&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;newTag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;AniTagData2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AniTagDataObj1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Очищаем кеш тега
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>define vs const в PHP</title>
            <link href="https://valmat.ru/posts/archive/2010/10/define-vs-const-php/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/10/define-vs-const-php/</id>
            <published>2010-10-28T19:00:00+00:00</published>
            <updated>2010-10-28T19:00:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Как известно, при разработке крупных веб-приложений помимо архитектуры постоянно приходится задумываться также и о производительности. Этим постом я хотел бы открыть серию публикаций по тестированию PHP на производительность.&lt;/p&gt;
&lt;p&gt;Речь пойдет о сравнении способов хранения констант в приложении на PHP.&lt;br&gt;
А именно сравниваются два подхода:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CONST1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val11&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CONST2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val12&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CONST2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val13&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;и&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Consts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В первом случае, вроде бы как должна использоваться специальная область памяти, и такой способ уж если и не экономит память, так точно должен быть быстрее. Второй способ в некоторых случаях существенно удобнее, так как позволяет не захламлять глобальную область видимости.&lt;/p&gt;
&lt;p&gt;В общем, чтобы не гадать, я провел тесты.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;тест-1-инициализация&#34;
    &gt;
        Тест 1. Инициализация
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/define-vs-const-php/#тест-1-инициализация&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Тест 1. Инициализация&#34; href=&#34;#%d1%82%d0%b5%d1%81%d1%82-1-%d0%b8%d0%bd%d0%b8%d1%86%d0%b8%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Инициализируем 100 констант при помощи &lt;strong&gt;define&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CACHER_TYPE_1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;b60861c4492f88589429aab0c67abdd4&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*     ...    */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;define&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;CACHER_TYPE_100&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a66aedeafbc3f1e9fcbaa6a9e8060739&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;memory_start: 114.7578125 Кб&lt;/li&gt;
&lt;li&gt;time: &lt;strong&gt;0.442981719971&lt;/strong&gt; ms&lt;/li&gt;
&lt;li&gt;memory_finish: 120.8515625 Кб&lt;/li&gt;
&lt;li&gt;memory_diff: &lt;strong&gt;6.09375 Кб&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Тестирование через ab:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ab -n 1000 http://test/test/mem_class.php
Requests per second:    714.52 [#/sec] (mean)
Time per request:       **1.400** [ms] (mean)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Теперь инициализируем через константы класса:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;SlotType&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TYPE_CACHER_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;b60861c4492f88589429aab0c67abdd4&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;cm&#34;&gt;/*     ...    */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TYPE_CACHER_100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;a66aedeafbc3f1e9fcbaa6a9e8060739&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;memory_start: 114.7578125 Кб&lt;/li&gt;
&lt;li&gt;time: &lt;strong&gt;0.0340938568115&lt;/strong&gt; ms&lt;/li&gt;
&lt;li&gt;memory_finish: 114.9921875 Кб&lt;/li&gt;
&lt;li&gt;memory_diff: &lt;strong&gt;0.234375 Кб&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Тестирование через ab:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ab -n 1000 http://test/test/mem_class.php
Requests per second:    818.27 [#/sec] (mean)
Time per request:       **1.222** [ms] (mean)
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;тест-2-чтение&#34;
    &gt;
        Тест 2. Чтение
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/define-vs-const-php/#тест-2-чтение&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Тест 2. Чтение&#34; href=&#34;#%d1%82%d0%b5%d1%81%d1%82-2-%d1%87%d1%82%d0%b5%d0%bd%d0%b8%d0%b5&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Считываем все константы, определённые через &lt;strong&gt;define&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CACHER_TYPE_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CACHER_TYPE_2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*...*/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CACHER_TYPE_100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;time: &lt;strong&gt;0.4&lt;/strong&gt; ms&lt;/li&gt;
&lt;li&gt;memory_diff: &lt;strong&gt;9.3 Кб&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ab -n1000:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Requests per second:    488.63 [#/sec] (mean)
Time per request:       **2.047** [ms] (mean)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Считываем через константы класса:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$var&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SlotType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;TYPE_CACHER_1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SlotType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;TYPE_CACHER_2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;cm&#34;&gt;/*...*/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SlotType&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;TYPE_CACHER_100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;time: &lt;strong&gt;0.12&lt;/strong&gt; ms&lt;/li&gt;
&lt;li&gt;memory_diff: &lt;strong&gt;3.5 Кб&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ab -n1000:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Requests per second:    609.62 [#/sec] (mean)
Time per request:       **1.640** [ms] (mean)
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;вывод&#34;
    &gt;
        Вывод
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/define-vs-const-php/#вывод&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Вывод&#34; href=&#34;#%d0%b2%d1%8b%d0%b2%d0%be%d0%b4&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Надо сказать, результат меня несколько удивил. Я ожидал, что по крайней мере скорость обработки с define будет выше. Оказывается, использование варианта&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Consts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val2&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CONST3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;val3&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;не только удобнее, но и эффективнее как по скорости исполнения, так и по расходу памяти.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>PHP Counter</title>
            <link href="https://valmat.ru/posts/archive/2010/10/php-counter/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/10/php-counter/</id>
            <published>2010-10-28T06:02:00+00:00</published>
            <updated>2010-10-28T06:02:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Выложил на &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://github.com/valmat/MC_Counter&#34;
&gt;github.com&lt;/a&gt; свой класс Counter.&lt;/p&gt;
&lt;p&gt;В основном сделал это, чтобы потестить сам GitHub.&lt;/p&gt;
&lt;p&gt;Адрес страницы на гитхабе: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://github.com/valmat/MC_Counter&#34;
&gt;http://github.com/valmat/MC_Counter&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;как-использовать&#34;
    &gt;
        Как использовать
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-counter/#как-использовать&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Как использовать&#34; href=&#34;#%d0%ba%d0%b0%d0%ba-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d1%82%d1%8c&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Класс &lt;code&gt;Counter&lt;/code&gt; — это образец реализации счетчика на memcache.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Можно построить другие реализации на общем интерфейсе.&lt;br&gt;
Сохранение результатов применения значений счетчика осуществляется по заданному числу.&lt;br&gt;
Можно реализовать сохранение по заданному интервалу времени.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Конструктор принимает три аргумента: ключ, имя слота и идентификатор для инициализации слота.&lt;/li&gt;
&lt;li&gt;Для чего это сделано: инкремент счетчика должен быть очень быстрой операцией.&lt;/li&gt;
&lt;li&gt;Не целесообразно тратить время и системные ресурсы на создание объектов, которые не будут использованы.&lt;/li&gt;
&lt;li&gt;Поэтому передается только имя класса слота, который создается только в случае необходимости.&lt;/li&gt;
&lt;li&gt;К таким случаям относится обмен данными между локальным и постоянным хранилищем счетчика.&lt;/li&gt;
&lt;li&gt;Слоты необходимы, так как Counter не может знать о способе хранения данных в постоянном хранилище и путях доступа к ним.&lt;/li&gt;
&lt;li&gt;Для предотвращения состояния гонки необходим механизм блокировок.&lt;/li&gt;
&lt;li&gt;При наличии блокировки процессы, не получившие эксклюзивные права на получение данных, будут писать во временное хранилище, а процесс, установивший блокировку, по окончании своей работы инкрементирует счетчик данными из временного хранилища.&lt;/li&gt;
&lt;li&gt;При сбросе данных в постоянное хранилище по условию достижения кратности значения счетчика (&lt;code&gt;$this-&amp;gt;Val % $this-&amp;gt;upd_delim&lt;/code&gt;), блокировка не требуется, так как в этом случае (при достаточно большом значении &lt;code&gt;$this-&amp;gt;upd_delim&lt;/code&gt;) в текущий момент времени только один процесс приходит к необходимости сброса данных.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h3 id=&#34;пример-использования&#34;
    &gt;
        Пример использования
    &lt;/h3&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/10/php-counter/#пример-использования&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Пример использования&#34; href=&#34;#%d0%bf%d1%80%d0%b8%d0%bc%d0%b5%d1%80-%d0%b8%d1%81%d0%bf%d0%be%d0%bb%d1%8c%d0%b7%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8f&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Counter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;anykey&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;AnySlot&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cnt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;increment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cnt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$cnt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Восстановление удалённых и повреждённых данных в Linux</title>
            <link href="https://valmat.ru/posts/archive/2010/10/linux-restore/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/10/linux-restore/</id>
            <published>2010-10-18T18:04:00+00:00</published>
            <updated>2010-10-18T18:04:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Когда-то давно, лет десять назад, случалось мне отформатировать раздел жёсткого диска под Windows. На диске была важная информация, поэтому встала задача данные восстановить. Помню, путём продолжительного гугления были найдены несколько замечательных программ и кряков к ним. И данные были, хоть и частично, но восстановлены. Назывались эти программы, вроде бы, Easy Recovery, Recover4All и какая-то ещё.&lt;/p&gt;
&lt;p&gt;И вот на днях мне принесли жёсткий диск с разделом, на который была установлена новая Windows поверх старой, и вся нужная владельцу информация была благополучно удалена.&lt;/p&gt;
&lt;p&gt;Поскольку сейчас Windows у меня нет, была найдена чудесная линуксовая утилита под названием &lt;strong&gt;foremost&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Вот, всё-таки, за что я люблю Linux — это за лаконичность и изящность решений (ну и за логичность архитектуры, конечно).&lt;/p&gt;
&lt;p&gt;Для восстановления данных потребовалась всего одна команда в терминале:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;foremost -t jpg -o ~/bak -i /dev/sdb1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь по порядку, что к чему:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; — запускаем от root, чтобы не было проблем с чтением.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; — тип восстанавливаемых файлов. Можно написать &lt;code&gt;-t all&lt;/code&gt;, чтобы восстановить файлы всех типов, либо одно из значений из списка: avi, bmp, dll, doc, exe, gif, htm, jar, jpg, mbd, mov, mpg, pdf, png, ppt, rar, rif, sdw, sx, sxc, sxi, sxw, vis, wav, wmv, xls, zip.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o ~/bak&lt;/code&gt; — куда складывать результат.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i /dev/sdb1&lt;/code&gt; — здесь указываем раздел, который нужно сканировать. Поддерживаются разные файловые системы. Тот диск, который приносили мне, был с NTFS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Если запустить с опцией &lt;code&gt;-t all&lt;/code&gt;, то будут созданы разные каталоги под каждый тип файлов, что само по себе очень удобно.&lt;/p&gt;
&lt;p&gt;Я особо не вглядывался, что он там восстановил, но при беглом обзоре можно было заключить, что в своей массе почти все файлы были восстановлены корректно. Было несколько битых фотографий, но так как раздел был не пустой, его не просто отформатировали, но и успели записать на него новые данные.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P.S.&lt;/strong&gt; Foremost есть в репозитории Ubuntu.&lt;br&gt;
Т.е. установить можно так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt-get install foremost
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Принтер Canon LBP 3200 в Ubuntu</title>
            <link href="https://valmat.ru/posts/archive/2010/09/canon-lbp-3200-ubuntu/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/09/canon-lbp-3200-ubuntu/</id>
            <published>2010-09-20T16:10:00+00:00</published>
            <updated>2010-09-20T16:10:00+00:00</updated>
            <content type="html">
                &lt;p&gt;К великому моему сожалению, принтер Canon LBP 3200 не заработал в Ubuntu 9.10 &amp;ldquo;из коробки&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Драйверов для него в стандартной поставке нет. Просто скачать и установить &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://files.canon-europe.com/files/soft31118/software/CAPTDRV180.tar.gz&#34;
&gt;драйвер&lt;/a&gt; тоже сразу не получилось. Поэтому я решил поискать ответ в интернете.&lt;/p&gt;
&lt;p&gt;Мне удалось найти две адекватные ссылки:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://forum.ubuntu.ru/index.php?topic=87445.0&#34;
&gt;http://forum.ubuntu.ru/index.php?topic=87445.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://help.ubuntu.ru/wiki/%D0%BF%D1%80%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%8B_canon_capt&#34;
&gt;http://help.ubuntu.ru/wiki/%D0%BF%D1%80%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%8B_canon_capt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Собственно, моя инструкция полностью написана, руководствуясь этими ссылками. К сожалению, обе они по отдельности результата не дали.&lt;/p&gt;
&lt;p&gt;Все, что написано ниже, у меня дало положительный результат.&lt;/p&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;инструкция-для-ubuntu-910&#34;
    &gt;
        Инструкция для Ubuntu 9.10
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/09/canon-lbp-3200-ubuntu/#инструкция-для-ubuntu-910&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Инструкция для Ubuntu 9.10&#34; href=&#34;#%d0%b8%d0%bd%d1%81%d1%82%d1%80%d1%83%d0%ba%d1%86%d0%b8%d1%8f-%d0%b4%d0%bb%d1%8f-ubuntu-910&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Открываем терминал:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo su
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Удаляем:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libcupsys2 и libstdc++5:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/usr/sbin/ccpdadmin -x LBP3200
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/lpadmin -x LBP320
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -P cndrvcups-capt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo dpkg -P cndrvcups-common
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее скачиваем и устанавливаем &lt;code&gt;libcupsys2&lt;/code&gt; и &lt;code&gt;libstdc++5&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;https://launchpad.net/ubuntu/karmic/&amp;#43;package/libcupsys2&#34;
&gt;libcupsys2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://packages.ubuntu.com/jaunty/libstdc&amp;#43;&amp;#43;5&#34;
&gt;libstdc++5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Далее надо скачать драйвер принтера:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo su
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://files.canon-europe.com/files/soft31118/software/CAPTDRV180.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar -xzf CAPTDRV180.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./CANON_UK/Driver/Debian
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg -i cndrvcups-common_1.80-1_i386.deb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dpkg -i cndrvcups-capt_1.80-1_i386.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Далее надо отредактировать файл &lt;code&gt;/etc/ccpd.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo gedit /etc/ccpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Меняем строки:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#&amp;lt;Printer  LBP3200&amp;gt;
#DevicePath /dev/usb/lp0
#&amp;lt;/Printer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;на&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Printer  LBP3200&amp;gt;
DevicePath /dev/usblp0
&amp;lt;/Printer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Перегружаем сервер печати:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /etc/init.d/cups restart
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /etc/init.d/ccpd stop &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo /etc/init.d/ccpd start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Регистрируем принтер в ccpd:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/ccpdadmin -p LBP3200 -o /dev/usblp0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /etc/init.d/ccpd stop &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo /etc/init.d/ccpd start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Окно статуса принтера можно открыть так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;captstatusui -P LBP3200
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;update&#34;
    &gt;
        UPDATE
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/09/canon-lbp-3200-ubuntu/#update&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor UPDATE&#34; href=&#34;#update&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Поставил Linux Mint 16 64bit (~ Ubuntu 13.10), и в нем моя инструкция, конечно, не подходит.&lt;/p&gt;
&lt;p&gt;Пришлось проходить этот квест заново. К счастью, Canon выпустил новые драйверы, что немного облегчает задачу.&lt;/p&gt;
&lt;p&gt;Итак, имеем названную систему.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Скачиваем и устанавливаем deb-пакеты с &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://www.canon-europe.com/Support/Consumer_Products/products/printers/Laser/Laser_Shot_LBP3200.aspx&#34;
&gt;драйверами от производителя&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Подключаем и включаем принтер. Смотрим, на какой usb-порт он подключился (у меня &lt;code&gt;/dev/usb/lp1&lt;/code&gt;). Смотреть нужно тут: &lt;code&gt;/dev/usb&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Правим &lt;code&gt;/etc/ccpd.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo gedit /etc/ccpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Меняем строки:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#&amp;lt;Printer  LBP3200&amp;gt;
#DevicePath /dev/usb/lp0
#&amp;lt;/Printer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;на&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Printer  LBP3200&amp;gt;
DevicePath /dev/usb/lp1
&amp;lt;/Printer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Добавляем принтер (в архиве с драйверами есть README, можно посмотреть откуда взялись эти строки и на что их менять, если принтер отличается):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/lpadmin -p LBP3200 -P /usr/share/cups/model/CNCUPSLBP3200CAPTK.ppd -v ccp://localhost:59687 -E
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/lpadmin -p LBP3200 -m CNCUPSLBP3200CAPTK.ppd -v ccp://localhost:59787 -E
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/ccpdadmin -p LBP3200 -o /dev/usb/lp1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Перегружаем сервер печати (см. выше)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Печатаем пробную страницу.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Все!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Что еще обнаружилось:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Нужно добавить &lt;code&gt;/etc/init.d/ccpd&lt;/code&gt; в автозагрузку:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;update-rc.d ccpd defaults 20&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Причем, даже после добавления в автозагрузку, нужно перезагружать ccpd. Поэтому еще нужно в &lt;code&gt;/etc/rc.local&lt;/code&gt; перед &lt;code&gt;exit 0&lt;/code&gt; добавить:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/ccpd restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Кроме того выяснилось, что в зависимости от того, был ли подключен включенный принтер до загрузки системы или нет, принтеру назначаются разные файлы устройства. Если включен после загрузки ОС, то &lt;code&gt;/dev/usb/lp1&lt;/code&gt;, если до — то &lt;code&gt;/dev/usb/lp0&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Чтобы преодолеть эту неприятность, я изобрел следующий костыль:&lt;/p&gt;
&lt;p&gt;В &lt;code&gt;/etc/init.d/ccpd&lt;/code&gt; в начало секций &lt;code&gt;ccpd_start()&lt;/code&gt; и &lt;code&gt;ccpd_stop()&lt;/code&gt; (только &lt;code&gt;ccpd_start&lt;/code&gt; недостаточно) добавил следующий блок:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;###############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Fix гуляние портов&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -e /dev/usb/lp0 &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Exist /dev/usb/lp0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -e /dev/usb/lp1 &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;NOT exist /dev/usb/lp1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ln -s /dev/usb/lp0 /dev/usb/lp1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ln -s /dev/usb/lp0 /dev/usb/lp1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;###############################&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Этот блок создает символическую ссылку в случаях, когда система загружается с уже включенным принтером.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Установка LaTeX в Linux Ubuntu</title>
            <link href="https://valmat.ru/posts/archive/2010/09/latex-linux-ubuntu/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/09/latex-linux-ubuntu/</id>
            <published>2010-09-08T14:30:00+00:00</published>
            <updated>2010-09-08T14:30:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Как утверждает &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://ru.wikipedia.org/wiki/TeX_Live&#34;
&gt;Википедия&lt;/a&gt;, с 2006-го года пакет teTeX более не поддерживается, а вместо него поддерживается TeX Live. Его и ставим.&lt;/p&gt;
&lt;p&gt;Инструкцию по установке подглядел здесь: &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://linuxandfriends.com/2009/10/06/install-latex-in-ubuntu-linux/&#34;
&gt;http://linuxandfriends.com/2009/10/06/install-latex-in-ubuntu-linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ставим:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo su
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apt-get install texlive texlive-full texlive-fonts-recommended latex-beamer texlive-pictures texlive-latex-extra
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;texlive-full&lt;/code&gt; попросил достаточно много места на диске (около 700 МБ). Место у меня было, поэтому я его всё же установил, но, при необходимости, можно не устанавливать &lt;code&gt;texlive-full&lt;/code&gt;, а установить только нужные пакеты, которые входят в &lt;code&gt;texlive-full&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;В качестве IDE были на пробу установлены LyX, gedit-latex-plugin и TeXmaker.&lt;br&gt;
Про них пока ничего сказать не могу, т.к. ещё не юзал.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; это была моя первая установка LaTeX в Линуксе, до этого я устанавливал &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;http://ru.wikipedia.org/wiki/MiKTeX&#34;
&gt;MiKTeX&lt;/a&gt; под виндой. Как всегда, небо и земля. Вот уж что действительно танцы с бубном, так это ставить МикТех под винду.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Рассказ о том, как я жесткий диск на ноуте менял</title>
            <link href="https://valmat.ru/posts/archive/2010/08/laptop-hdd/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/08/laptop-hdd/</id>
            <published>2010-08-29T11:16:00-07:00</published>
            <updated>2010-08-29T11:16:00-07:00</updated>
            <content type="html">
                &lt;p&gt;Был у меня, в общем-то, достаточный для работы жесткий диск объемом 250 ГБ, но не жилось мне спокойно, и захотелось мне поставить жесткий диск на 500 ГБ.&lt;/p&gt;
&lt;p&gt;Сказано — сделано. Винт купил и поставил. Надо переносить систему. Переустановка ОС — это не наш путь, разумеется.&lt;/p&gt;
&lt;p&gt;Далее будет описано, что я делал (и что не нужно было делать), а в конце — как всё-таки у меня получилось &lt;del&gt;через одно место&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;Итак, на моем старом винте было три раздела: &lt;code&gt;ntfs&lt;/code&gt;, &lt;code&gt;ext4&lt;/code&gt; и &lt;code&gt;swap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Новый жесткий диск я воткнул в ноутбук, а старый подключил по USB через переноску.&lt;/p&gt;
&lt;p&gt;Самое логичное было бы сделать:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sdb &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sda &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;conv&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;sync,noerror
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Но этот способ не сработал. Разделы создались, но файловые системы у них не определились, из-за чего пришлось бы их переформатировать.&lt;/p&gt;
&lt;p&gt;Собственно, того же результата можно было добиться, просто скопировав загрузчик и таблицу разделов:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sdb &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sda &lt;span class=&#34;nv&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;512&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;После этого я по очереди удалил каждый раздел на новом жестком диске и с помощью gparted перенес их со старого жесткого диска. В результате, конечно же, загрузочный сектор и таблица разделов у меня потерлись.&lt;/p&gt;
&lt;p&gt;Всевозможные попытки восстановить grub, осуществляемые при помощи гугления, результата не дали.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Что в итоге я сделал:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Раздел с ntfs оставил как есть (т.е. полностью клонированным со старого жесткого диска).&lt;/li&gt;
&lt;li&gt;На раздел ext4, на котором у меня стоял Linux, я заново установил дистрибутив. Устанавливать нужно обязательно тот дистрибутив, который стоял до этого, иначе может не получиться.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Таким образом у меня пересоздалась таблица разделов и загрузочный сектор (вообще таблица разделов, конечно, была).&lt;/p&gt;
&lt;p&gt;Затем я полностью стер всё на линуксовом разделе и скопировал при помощи утилиты &lt;strong&gt;rsync&lt;/strong&gt; всё со старого линуксового раздела. Всё это я делал, загрузившись с LiveCD.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt; в отличие от &lt;code&gt;cp&lt;/code&gt; (даже &lt;code&gt;cp -a&lt;/code&gt;) нормально копирует скрытые файлы, т.е. те, которые начинаются с &amp;ldquo;.&amp;rdquo;. Обе команды &lt;code&gt;rsync -a&lt;/code&gt; и &lt;code&gt;cp -a&lt;/code&gt; могут копировать атрибуты файлов и права доступа.&lt;/p&gt;
&lt;p&gt;Выглядит команда так:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rsync -a /.../.../  /.../.../
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Закрывающий слеш существенен, поскольку без него получится не совсем то, что нужно.&lt;/p&gt;
&lt;p&gt;Чтобы система начала загружаться, нужно ещё в файлах&lt;br&gt;
&lt;strong&gt;/boot/grub/grub.cfg&lt;/strong&gt; и &lt;strong&gt;/etc/fstab&lt;/strong&gt;&lt;br&gt;
поменять uuid разделов на новые.&lt;/p&gt;
&lt;p&gt;Узнать их можно командой:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;blkid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ну и напоследок, поскольку у меня появилось теперь много свободного места, я создал 250-гигабайтный раздел и примонтировал его к &lt;code&gt;/home&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Для этого я всё тем же &lt;code&gt;rsync&lt;/code&gt;-ом перенёс все файлы (сидя на LiveCD) на отведённый для этого раздел и прописал в его fstab:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# /home&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/dev/sda4    /home  ext4 defaults,noatime,errors&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;remount-ro &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Разборка HP ProBook 4710s: доступ к памяти</title>
            <link href="https://valmat.ru/posts/archive/2010/08/hp-probook-4710s/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/08/hp-probook-4710s/</id>
            <published>2010-08-17T06:44:00+00:00</published>
            <updated>2010-08-17T06:44:00+00:00</updated>
            <content type="html">
                &lt;p&gt;Решил я обновить свой ноутбук — увеличить память, да выяснилось, что на HP ProBook 4710s доступ к внутренностям организован не так, как у большинства других моделей, а совершенно через другое место. Поэтому выкладываю здесь инструкцию по открытию этого ноутбука.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Шаг 1:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Снимаем аккумулятор и откручиваем 5 болтов под ним:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./1.JPG&#34;
  alt=&#34;Снятие аккумулятора и болтов&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./2.JPG&#34;
  alt=&#34;Болты под аккумулятором&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Шаг 2:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Затем откручиваем 2 болта на задней части ноутбука:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./3.JPG&#34;
  alt=&#34;Два болта на задней части&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./4.JPG&#34;
  alt=&#34;Вид после откручивания&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Складываем все шурупы в одном месте, чтобы не потерять:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./5.JPG&#34;
  alt=&#34;Складываем шурупы&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Шаг 3:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Толчком от себя снимаем заднюю часть верхней панели (ту, на которой динамики):&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./6.JPG&#34;
  alt=&#34;Снимаем верхнюю панель&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./7.JPG&#34;
  alt=&#34;Панель снята&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Эту часть можно полностью удалить, чтобы не мешала:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./7-1.JPG&#34;
  alt=&#34;Удаляем панель&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Шаг 4:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Далее у нас открывается доступ к болтам крепления клавиатуры:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./8-1.JPG&#34;
  alt=&#34;Доступ к болтам клавиатуры&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./8-2.JPG&#34;
  alt=&#34;Болты клавиатуры крупнее&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Их нужно открутить и также толчком от себя (без лишних усилий, это всё же не советская техника — можно и сломать) отделяем клавиатуру:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./9.JPG&#34;
  alt=&#34;Снимаем клавиатуру&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;Вуаля, у нас появился доступ к оперативной памяти:&lt;/p&gt;
&lt;p&gt;&lt;img
  src=&#34;./10.JPG&#34;
  alt=&#34;Доступ к памяти&#34;
  
/&gt;&lt;/p&gt;
&lt;p&gt;А дальше я не полез.&lt;/p&gt;
&lt;p&gt;Собирается всё, естественно, в обратном порядке.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>tmpfs: Операции с файловой системой в виртуальной памяти</title>
            <link href="https://valmat.ru/posts/archive/2010/07/tmpfs/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/07/tmpfs/</id>
            <published>2010-07-24T11:08:00+00:00</published>
            <updated>2010-07-24T11:08:00+00:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h1 id=&#34;tmpfs-операции-с-файловой-системой-в-виртуальной-памяти&#34;
    &gt;
        tmpfs: Операции с файловой системой в виртуальной памяти
    &lt;/h1&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/07/tmpfs/#tmpfs-операции-с-файловой-системой-в-виртуальной-памяти&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor tmpfs: Операции с файловой системой в виртуальной памяти&#34; href=&#34;#tmpfs-%d0%be%d0%bf%d0%b5%d1%80%d0%b0%d1%86%d0%b8%d0%b8-%d1%81-%d1%84%d0%b0%d0%b9%d0%bb%d0%be%d0%b2%d0%be%d0%b9-%d1%81%d0%b8%d1%81%d1%82%d0%b5%d0%bc%d0%be%d0%b9-%d0%b2-%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d1%8c%d0%bd%d0%be%d0%b9-%d0%bf%d0%b0%d0%bc%d1%8f%d1%82%d0%b8&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Для примонтирования при старте вносим в &lt;code&gt;/etc/fstab&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tmpfs /tmp tmpfs &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;500M,nr_inodes&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m,nosuid &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tmpfs /var/lib/php5 tmpfs &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;200M,nr_inodes&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m,nosuid &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Первая строчка размещает в памяти &lt;code&gt;/tmp&lt;/code&gt;, вторая — папку хранения сессий.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Для создания папки для сессий без рестарта системы нужно выполнить следующую последовательность команд в терминале:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /tmp/ses
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/nginx stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv /var/lib/php5/* /tmp/ses
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mount tmpfs /var/lib/php5 -t tmpfs -o &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;200M,nr_inodes&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m,nosuid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv /tmp/ses/* /var/lib/php5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/nginx start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm -r /tmp/ses
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Предварительно лучше отредактировать &lt;code&gt;fstab&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Вот более сложный вариант, когда данные сессий хранятся в &lt;code&gt;/tmp&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir /dev/shm/ses
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/nginx stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/php5-spawn stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/mysql stop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv /tmp/* /dev/shm/ses
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mount tmpfs /tmp -t tmpfs -o &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1g,nr_inodes&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m,nosuid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mount tmpfs /var/lib/php5 -t tmpfs -o &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;200M,nr_inodes&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1m,nosuid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv /dev/shm/ses/* /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/mysql start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/php5-spawn start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/nginx start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm -r /dev/shm/ses
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;du -hsx /tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
        <entry>
            <title>Запуск memcache через unix.socket</title>
            <link href="https://valmat.ru/posts/archive/2010/07/memcache-unixsocket/" rel="alternate" type="text/html"  hreflang="en" />
            <id>https://valmat.ru/posts/archive/2010/07/memcache-unixsocket/</id>
            <published>2010-07-24T11:04:00+00:00</published>
            <updated>2010-07-24T11:04:00+00:00</updated>
            <content type="html">
                &lt;div class=&#34;flex align-center gblog-post__anchorwrap&#34;&gt;
    &lt;h2 id=&#34;запуск-memcache-через-unixsocket&#34;
    &gt;
        Запуск memcache через unix.socket
    &lt;/h2&gt;
    &lt;a data-clipboard-text=&#34;https://valmat.ru/posts/archive/2010/07/memcache-unixsocket/#запуск-memcache-через-unixsocket&#34; class=&#34;gblog-post__anchor clip flex align-center&#34; aria-label=&#34;Anchor Запуск memcache через unix.socket&#34; href=&#34;#%d0%b7%d0%b0%d0%bf%d1%83%d1%81%d0%ba-memcache-%d1%87%d0%b5%d1%80%d0%b5%d0%b7-unixsocket&#34;&gt;
        &lt;svg class=&#34;gblog-icon gblog_link&#34;&gt;&lt;use xlink:href=&#34;#gblog_link&#34;&gt;&lt;/use&gt;&lt;/svg&gt;
    &lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;В файл &lt;code&gt;/etc/memcached.conf&lt;/code&gt; добавляем строчки:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#-s &amp;lt;file&amp;gt;     unix socket path to listen on (disables network support)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-s /tmp/memcached.socket
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#-a &amp;lt;mask&amp;gt;     access mask for unix socket, in octal (default 0700)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-a &lt;span class=&#34;m&#34;&gt;0777&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Последняя нужна, чтобы пользователь, от которого работает веб-сервер (у меня &lt;code&gt;www-data&lt;/code&gt;), смог прочитать сокет.&lt;/p&gt;
&lt;p&gt;Перезапускаем демон мемкеша:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/etc/init.d/memcached restart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Подключаемся к Memcache из PHP-скрипта:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$memcache&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Memcache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$memcache&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;unix:///tmp/memcached.socket&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь memcache не должен уступать по производительности &lt;code&gt;tmpfs&lt;/code&gt; или &lt;code&gt;/dev/shm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Правда, в этом случае перестают работать сессии в memcached.&lt;/strong&gt;&lt;br&gt;
То есть следующая конструкция работать не будет:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$session_save_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost:11211&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$session_save_path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;localhost:11211,unix:///tmp/memcached.socket:0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ini_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;session.save_handler&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;memcache&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ini_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;session.save_path&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$session_save_path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Но для сессий лучше всего всё-таки использовать &lt;a
  class=&#34;gblog-markdown__link&#34;
  href=&#34;/posts/archive/2010/07/tmpfs/&#34;
&gt;tmpfs&lt;/a&gt;.&lt;/p&gt;

            </content>    
                                <category scheme="https://valmat.ru/tags/archive" term="archive" label="archive" />
        </entry>
</feed>
